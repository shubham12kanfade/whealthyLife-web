{"version":3,"sources":["./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/drag-drop.js","./src/app/modules/doctor-dashbord/profile/clinic-details/clinic-details.component.ts","./src/app/modules/doctor-dashbord/profile/clinic-details/clinic-details.component.html","./src/app/modules/doctor-dashbord/profile/clinic-location/clinic-location.component.ts","./src/app/modules/doctor-dashbord/profile/clinic-location/clinic-location.component.html","./src/app/modules/doctor-dashbord/profile/clinic-proof/clinic-proof.component.ts","./src/app/modules/doctor-dashbord/profile/clinic-proof/clinic-proof.component.html","./src/app/modules/doctor-dashbord/profile/clinic-timings/clinic-timings.component.ts","./src/app/modules/doctor-dashbord/profile/clinic-timings/clinic-timings.component.html","./src/app/modules/doctor-dashbord/profile/connect-clinic/connect-clinic.component.ts","./src/app/modules/doctor-dashbord/profile/connect-clinic/connect-clinic.component.html","./src/app/modules/doctor-dashbord/profile/consultant-details/consultant-details.component.ts","./src/app/modules/doctor-dashbord/profile/consultant-details/consultant-details.component.html","./src/app/modules/doctor-dashbord/profile/dynamic-autocomplete/dynamic-autocomplete.component.ts","./src/app/modules/doctor-dashbord/profile/dynamic-autocomplete/dynamic-autocomplete.component.html","./src/app/modules/doctor-dashbord/profile/edit-profile/edit-profile.component.ts","./src/app/modules/doctor-dashbord/profile/edit-profile/edit-profile.component.html","./src/app/modules/doctor-dashbord/profile/education/education.component.ts","./src/app/modules/doctor-dashbord/profile/education/education.component.html","./src/app/modules/doctor-dashbord/profile/identity-proof/identity-proof.component.ts","./src/app/modules/doctor-dashbord/profile/identity-proof/identity-proof.component.html","./src/app/modules/doctor-dashbord/profile/profile-routing.module.ts","./src/app/modules/doctor-dashbord/profile/profile.component.ts","./src/app/modules/doctor-dashbord/profile/profile.component.html","./src/app/modules/doctor-dashbord/profile/profile.module.ts","./src/app/modules/doctor-dashbord/profile/registration-proof/registration-proof.component.ts","./src/app/modules/doctor-dashbord/profile/registration-proof/registration-proof.component.html","./src/app/modules/doctor-dashbord/profile/registration/registration.component.ts","./src/app/modules/doctor-dashbord/profile/registration/registration.component.html","./src/app/services/upload.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkR;AACvO;AACmD;AACN;AACwB;AACb;AAClB;AAC9B;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACS;AACL;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iCAAiC,mDAAmD;AACpF;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW,GAAG,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6FAA+B,EAAE,gBAAgB;AACrF;AACA,mCAAmC,6FAA+B,EAAE,iBAAiB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,iCAAiC;AACjC;AACA,+BAA+B,4CAAO;AACtC;AACA,wCAAwC,iDAAY;AACpD;AACA,sCAAsC,iDAAY;AAClD;AACA,mCAAmC,iDAAY;AAC/C;AACA,mCAAmC,iDAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA,2BAA2B,4CAAO;AAClC;AACA,4BAA4B,4CAAO;AACnC;AACA,yBAAyB,4CAAO;AAChC;AACA,2BAA2B,4CAAO;AAClC;AACA,0BAA0B,4CAAO;AACjC;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kBAAkB,GAAG,kBAAkB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2EAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,2EAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA,uCAAuC;AACvC,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO,GAAG,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6CAA6C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,qBAAqB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc,MAAM,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C,6BAA6B,kBAAkB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA,2BAA2B,4CAAO;AAClC;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iDAAY;AACvD;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAAO;AAC5C;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAQ,IAAI,4DAAuB;AAC/C,sBAAsB,gEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,2BAA2B;AAC5F;AACA;AACA;AACA,oEAAoE,2BAA2B;AAC/F;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,gBAAgB;AACnC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2EAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA,qBAAqB;AACrB;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4EAAc,CAAC,2EAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6FAA+B;AACnE;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8DAA8D,oCAAoC,sDAAe,CAAC,oDAAa,GAAG,sDAAe,CAAC,wDAAQ,GAAG;AAC7J,yBAAyB,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,+CAA+C;AAChN;AACA,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU,OAAO,oDAAa,EAAE,GAAG;AACxD,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,4BAA4B,sDAAe,CAAC,wDAAQ,GAAG,sDAAe,CAAC,oDAAa,GAAG,sDAAe,CAAC,oEAAoB,GAAG,sDAAe,oBAAoB;AAC/M,iBAAiB,wEAAkB,EAAE,uCAAuC,qBAAqB,8DAAQ,CAAC,wDAAQ,GAAG,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,oEAAa,GAAG,8DAAQ,oBAAoB,EAAE,uCAAuC;AACrO;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,oEAAa,EAAE;AAC3B,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG,OAAO,oDAAa,EAAE,GAAG,OAAO,oEAAoB,EAAE,GAAG,yBAAyB,EAAE,EAAE,QAAQ,EAAE;;AAEnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4DAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,wBAAwB,+DAAwB,EAAE,6EAA6E,qDAAqD,6CAA6C,gEAAyB,GAAG,8DAA8D,KAAK;AAChU;AACA,gBAAgB,OAAO,mDAAK,uCAAuC;AACnE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,6BAA6B,8DAA8D;AAC3F,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mFAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAS,mBAAmB,gEAAS;AAC3D;AACA;AACA;AACA,6BAA6B,yEAAW;AACxC;AACA;AACA;AACA,gGAAgG,KAAK;AACrG;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mFAAqB;AACvD,qCAAqC,mFAAqB;AAC1D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,uFAAuF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+BAA+B,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,YAAY,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,gEAAqB,MAAM,+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+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,6BAA6B,yDAAyD;AACtF,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,yDAAkB,EAAE,EAAE,EAAE,GAAG;AACjE,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA,2BAA2B,0DAAY;AACvC;AACA,4BAA4B,0DAAY;AACxC;AACA,yBAAyB,0DAAY;AACrC;AACA,2BAA2B,0DAAY;AACvC;AACA,0BAA0B,0DAAY;AACtC;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,yBAAyB,+CAAU;AACnC,0DAA0D,0DAAG;AAC7D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAI,KAAK,gEAAS;AACpC;AACA;AACA;AACA,uCAAuC,gEAAS;AAChD;AACA,YAAY,0DAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,gEAAS;AACrB,uBAAuB,kDAAK;AAC5B,mDAAmD,gEAAS;AAC5D,iBAAiB;AACjB,aAAa,GAAG,gEAAS;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qCAAqC,kFAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,eAAe;AAC/C,SAAS;AACT;AACA,6BAA6B,yCAAyC;AACtE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,oHAAoH;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,qBAAqB,+DAAwB,CAAC,wDAAQ,GAAG,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,8DAAuB,GAAG,+DAAwB,sBAAsB,+DAAwB,CAAC,gEAAqB,MAAM,+DAAwB,YAAY,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,uBAAuB;AAC1gB,eAAe,+DAAwB,EAAE,sHAAsH;AAC/J,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;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AAC,EAAE,CAAC;YACd,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,SAAS,EAAC,C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","file":"profile-profile-module-es2015.js","sourcesContent":["import { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, ElementRef, ChangeDetectorRef, Optional, SkipSelf, Output, TemplateRef, ViewContainerRef, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler, ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document, _viewportRuler) {\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this._viewportRuler.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element)\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = event.target;\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        // Used when figuring out whether an element is inside the scroll parent. If the scrolled\n        // parent is the `document`, we use the `documentElement`, because IE doesn't support\n        // `contains` on the `document`.\n        const scrolledParentNode = target === this._document ? target.documentElement : target;\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && scrolledParentNode.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    clone.value = source.value;\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch (_a) { }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._handles.find(handle => {\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains(target));\n                });\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            // Prevent the default action as early as possible in order to block\n            // native actions like dragging the selected text or images with the mouse.\n            event.preventDefault();\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!this._dropContainer || !this._dropContainer.isDragging()) {\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        this.withRootElement(element);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, false));\n        this._toggleNativeDragInteractions();\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeNode(this._rootElement);\n        }\n        removeNode(this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate =\n            this._previewTemplate = this._anchor = null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        this._disabledHandles.delete(handle);\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        if (this._preview) {\n            removeNode(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeNode(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const preview = this._preview = this._createPreviewElement();\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            const anchor = this._anchor = this._anchor || this._document.createComment('');\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            this.started.next({ source: this }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && event.target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor || '';\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.subscribe(scrollEvent => {\n            this._updateOnScroll(scrollEvent);\n        });\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement = previewTemplate && previewTemplate.template &&\n            !previewTemplate.matchSize ? { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition =\n            this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialContainer, isPointerOverContainer, distance, this._initialIndex);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled ? this._initialIndex : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this)\n                });\n            });\n        }\n        this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n        this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._rootElement.getBoundingClientRect() : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform =\n                    getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element.getBoundingClientRect());\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: `${this._config.zIndex || 1000}`\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event) ?\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n            // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n            // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n            // throwing an error. The value returned here will be incorrect, but since this only\n            // breaks inside a developer tool and the value is only used for secondary information,\n            // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n            (event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }) : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const previewRect = this._previewRect;\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            x = clamp(x, minX, maxX);\n            y = clamp(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = event.target;\n            // ClientRect dimensions are based on the scroll position of the page and its parent node so\n            // we have to update the cached boundary ClientRect if the user has scrolled. Check for\n            // the `document` specifically since IE doesn't support `contains` on it.\n            if (this._boundaryRect && (target === this._document ||\n                (target !== this._boundaryElement && target.contains(this._boundaryElement)))) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        const cachedPosition = this._parentPositions.positions.get(this._document);\n        return cachedPosition ? cachedPosition.scrollPosition :\n            this._viewportRuler.getViewportScrollPosition();\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove a node from the DOM and to do all the necessary null checks.\n * @param node Node to be removed.\n */\nfunction removeNode(node) {\n    if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the element into which the drag preview should be inserted. */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp$1(fromIndex, array.length - 1);\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n */\nconst AUTO_SCROLL_STEP = 2;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occured and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = { drag: null, delta: 0, overlaps: false };\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Direction in which the list is oriented. */\n        this._orientation = 'vertical';\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Layout direction of the drop list. */\n        this._direction = 'ltr';\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._siblings.forEach(sibling => sibling._startReceiving(this));\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else if (this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            const reference = activeDraggables[0].getRootElement();\n            reference.parentNode.insertBefore(placeholder, reference);\n            activeDraggables.unshift(item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed and also parent rects.\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param previousIndex Index of the item when dragging started.\n     *\n     * @breaking-change 11.0.0 `previousIndex` parameter to become required.\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer, distance, previousIndex) {\n        this._reset();\n        // @breaking-change 11.0.0 Remove this fallback logic once `previousIndex` is a required param.\n        if (previousIndex == null) {\n            previousIndex = previousContainer.getItemIndex(item);\n        }\n        this.dropped.next({ item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._cacheItems();\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        this._orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, currentItem => currentItem.drag === item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentIndex = findIndex(siblings, currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* NONE */;\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        }).sort((a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                rootElement.style.transform = '';\n            }\n        });\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this._orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n    }\n    /** Caches the current items in the list and their positions. */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!isInsideClientRect(this._clientRect, x, y) || !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    // Since we know the amount that the user has scrolled we can shift all of the\n                    // client rectangles ourselves. This is cheaper than re-measuring everything and\n                    // we can avoid inconsistent behavior where we might be measuring the element before\n                    // its position has changed.\n                    this._itemPositions.forEach(({ clientRect }) => {\n                        adjustClientRect(clientRect, scrollDifference.top, scrollDifference.left);\n                    });\n                    // We need two loops for this, because we want all of the cached\n                    // positions to be up-to-date before we re-sort the item.\n                    this._itemPositions.forEach(({ drag }) => {\n                        if (this._dragDropRegistry.isDragging(drag)) {\n                            // We need to re-sort the item manually, because the pointer move\n                            // events won't be dispatched while the user is scrolling.\n                            drag._sortFromLastPointerPosition();\n                        }\n                    });\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = shadowRoot || this._document;\n        }\n        return this._cachedShadowRoot;\n    }\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @param array Array in which to look for matches.\n * @param predicate Function used to determine whether an item is a match.\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* NONE */;\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = new Set();\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /** Emits when the viewport has been scrolled while the user is dragging an item. */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.has(drag);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) { return new (t || DragDropRegistry)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nDragDropRegistry.ɵprov = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = function DragDrop_Factory(t) { return new (t || DragDrop)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DragDropRegistry)); };\nDragDrop.ɵprov = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDrop, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.ViewportRuler }, { type: DragDropRegistry }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) { return new (t || CdkDropListGroup)(); };\nCdkDropListGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropListGroup, selectors: [[\"\", \"cdkDropListGroup\", \"\"]], inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, exportAs: [\"cdkDropListGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }])] });\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropListGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup',\n                providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }]\n            }]\n    }], function () { return []; }, { disabled: [{\n            type: Input,\n            args: ['cdkDropListGroupDisabled']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\nconst ɵ0 = undefined;\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _dir, _group, \n    /**\n     * @deprecated _scrollDispatcher parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    _scrollDispatcher, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        this._scrollDispatcher = _scrollDispatcher;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            // @breaking-change 11.0.0 Remove null check for _scrollDispatcher once it's required.\n            if (!this._scrollableParentsResolved && this._scrollDispatcher) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n}\nCdkDropList.ɵfac = function CdkDropList_Factory(t) { return new (t || CdkDropList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST_GROUP, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8)); };\nCdkDropList.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropList, selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]], hostAttrs: [1, \"cdk-drop-list\"], hostVars: 7, hostBindings: function CdkDropList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n    } }, inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], id: \"id\", enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], data: [\"cdkDropListData\", \"data\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, exportAs: [\"cdkDropList\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CDK_DROP_LIST_GROUP, useValue: ɵ0 },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ])] });\n/** Keeps track of the drop lists that are currently on the page. */\nCdkDropList._dropLists = [];\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DROP_LIST_GROUP,] }, { type: SkipSelf }] },\n    { type: ScrollDispatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] }\n];\nCdkDropList.propDecorators = {\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropList, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CDK_DROP_LIST_GROUP, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: CdkDropListGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DROP_LIST_GROUP]\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc1.ScrollDispatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }]; }, { connectedTo: [{\n            type: Input,\n            args: ['cdkDropListConnectedTo']\n        }], id: [{\n            type: Input\n        }], enterPredicate: [{\n            type: Input,\n            args: ['cdkDropListEnterPredicate']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDropListDropped']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDropListEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDropListExited']\n        }], sorted: [{\n            type: Output,\n            args: ['cdkDropListSorted']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDropListDisabled']\n        }], sortingDisabled: [{\n            type: Input,\n            args: ['cdkDropListSortingDisabled']\n        }], autoScrollDisabled: [{\n            type: Input,\n            args: ['cdkDropListAutoScrollDisabled']\n        }], orientation: [{\n            type: Input,\n            args: ['cdkDropListOrientation']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDropListLockAxis']\n        }], data: [{\n            type: Input,\n            args: ['cdkDropListData']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n    }\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) { return new (t || CdkDragHandle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 12)); };\nCdkDragHandle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragHandle, selectors: [[\"\", \"cdkDragHandle\", \"\"]], hostAttrs: [1, \"cdk-drag-handle\"], inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }])] });\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }, { type: SkipSelf }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragHandle, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                },\n                providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_PARENT]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, { disabled: [{\n            type: Input,\n            args: ['cdkDragHandleDisabled']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) { return new (t || CdkDragPlaceholder)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPlaceholder, selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]], inputs: { data: \"data\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }])] });\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPlaceholder]',\n                providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() { return this._matchSize; }\n    set matchSize(value) { this._matchSize = coerceBooleanProperty(value); }\n}\nCdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) { return new (t || CdkDragPreview)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPreview.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPreview, selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]], inputs: { matchSize: \"matchSize\", data: \"data\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }])] });\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }],\n    matchSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPreview, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPreview]',\n                providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { matchSize: [{\n            type: Input\n        }], data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            }))).subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ?\n                config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ?\n                config.pointerDirectionChangeThreshold : 5,\n            zIndex: config === null || config === void 0 ? void 0 : config.zIndex\n        });\n        this._dragRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((handles) => {\n                const childHandleElements = handles\n                    .filter(handle => handle._parentDrag === this)\n                    .map(handle => handle.element);\n                // Usually handles are only allowed to be a descendant of the drag element, but if\n                // the consumer defined a different drag root, we should allow the drag element\n                // itself to be a handle too.\n                if (this._selfHandle && this.rootElementSelector) {\n                    childHandleElements.push(this.element);\n                }\n                this._dragRef.withHandles(childHandleElements);\n            }), \n            // Listen if the state of any of the handles changes.\n            switchMap((handles) => {\n                return merge(...handles.map(item => {\n                    return item._stateChanges.pipe(startWith(item));\n                }));\n            }), takeUntil(this._destroyed)).subscribe(handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                const dragRef = this._dragRef;\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            });\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`cdkDrag must be attached to an element node. ` +\n                `Currently attached to \"${rootElement.nodeName}\".`);\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        const element = coerceElement(boundary);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    matchSize: this._previewTemplate.matchSize,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = (typeof dragStartDelay === 'object' && dragStartDelay) ?\n                    dragStartDelay : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(() => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(() => {\n            this.released.emit({ source: this });\n        });\n        ref.ended.subscribe(event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n    }\n}\nCdkDrag.ɵfac = function CdkDrag_Factory(t) { return new (t || CdkDrag)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_HANDLE, 10)); };\nCdkDrag.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDrag, selectors: [[\"\", \"cdkDrag\", \"\"]], contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_PREVIEW, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_PLACEHOLDER, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_HANDLE, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previewTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._handles = _t);\n    } }, hostAttrs: [1, \"cdk-drag\"], hostVars: 4, hostBindings: function CdkDrag_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n    } }, inputs: { disabled: [\"cdkDragDisabled\", \"disabled\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], data: [\"cdkDragData\", \"data\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, exportAs: [\"cdkDrag\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: CdkDragHandle, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [CDK_DRAG_HANDLE,] }] }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CDK_DRAG_HANDLE, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CDK_DRAG_PREVIEW,] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CDK_DRAG_PLACEHOLDER,] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    previewClass: [{ type: Input, args: ['cdkDragPreviewClass',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDrag, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': 'cdk-drag',\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DROP_LIST]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_HANDLE]\n            }] }]; }, { started: [{\n            type: Output,\n            args: ['cdkDragStarted']\n        }], released: [{\n            type: Output,\n            args: ['cdkDragReleased']\n        }], ended: [{\n            type: Output,\n            args: ['cdkDragEnded']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDragEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDragExited']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDragDropped']\n        }], moved: [{\n            type: Output,\n            args: ['cdkDragMoved']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDragDisabled']\n        }], dragStartDelay: [{\n            type: Input,\n            args: ['cdkDragStartDelay']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDragLockAxis']\n        }], constrainPosition: [{\n            type: Input,\n            args: ['cdkDragConstrainPosition']\n        }], previewClass: [{\n            type: Input,\n            args: ['cdkDragPreviewClass']\n        }], boundaryElement: [{\n            type: Input,\n            args: ['cdkDragBoundary']\n        }], rootElementSelector: [{\n            type: Input,\n            args: ['cdkDragRootElement']\n        }], _handles: [{\n            type: ContentChildren,\n            args: [CDK_DRAG_HANDLE, { descendants: true }]\n        }], _previewTemplate: [{\n            type: ContentChild,\n            args: [CDK_DRAG_PREVIEW]\n        }], _placeholderTemplate: [{\n            type: ContentChild,\n            args: [CDK_DRAG_PLACEHOLDER]\n        }], data: [{\n            type: Input,\n            args: ['cdkDragData']\n        }], freeDragPosition: [{\n            type: Input,\n            args: ['cdkDragFreeDragPosition']\n        }] }); })();\n/** Gets the closest ancestor of an element that matches a selector. */\nfunction getClosestMatchingAncestor(element, selector) {\n    let currentElement = element.parentElement;\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            currentElement.msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DragDropModule {\n}\nDragDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\nDragDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DragDropModule_Factory(t) { return new (t || DragDropModule)(); }, providers: [\n        DragDrop,\n    ], imports: [CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: function () { return [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder]; }, exports: function () { return [CdkScrollableModule,\n        CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n\n//# sourceMappingURL=drag-drop.js.map","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-clinic-details',\r\n  templateUrl: './clinic-details.component.html',\r\n  styleUrls: ['./clinic-details.component.scss']\r\n})\r\nexport class ClinicDetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"bg-white p-sm-3\">\r\n    <div class=\"progress \">\r\n        <div class=\"progress-bar \" role=\"progressbar\" style=\"width: 100%\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n            <div class=\" mb-4 h1 font-weight-bold text-dark pb-5\">Establishment basic details</div>\r\n\r\n            <form>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"RegistrationNumber\">Establishment name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"RegistrationNumber\" placeholder=\"1234 \">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"RegistrationCouncil\">City</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"RegistrationCouncil\" placeholder=\"\">\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"RegistrationCouncil\">Locality</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"RegistrationCouncil\" placeholder=\"\">\r\n                </div>\r\n                <hr class=\"mt-5 mb-5\">\r\n                <div class=\"row\">\r\n                    <button type=\"button\" class=\"btn btn-outline-dark px-5 h3\" [routerLink]=\"['/Doctor/Profile/Connect_clinic']\" routerLinkActive=\"router-link-active\"> <i class=\"fa fa-chevron-left\" aria-hidden=\"true\"></i> Back</button>\r\n                    <button type=\"button\" class=\"btn btn-warning px-5 h3 butsetr\" [routerLink]=\"['/Doctor/Profile']\" routerLinkActive=\"router-link-active\">Contnue</button></div>\r\n\r\n\r\n            </form>\r\n        </div>\r\n        <div class=\"col-md-3 col-lg-4 offset-md-1\">\r\n            <div class=\" d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\" style=\"border: 1px solid #14aa9b;\">\r\n\r\n                <div class=\" bg p-4 textcol\">\r\n                    <div><i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i> </div>\r\n                    <p class=\"stext font-weight-bold\">\r\n                        Basic details about your practice helps patients reach you easily for appointment booking and inquiries.</p>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</section>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MainService } from 'src/app/services/main.service';\r\nimport { UploadService } from 'src/app/services/upload.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-clinic-location',\r\n  templateUrl: './clinic-location.component.html',\r\n  styleUrls: ['./clinic-location.component.scss']\r\n})\r\nexport class ClinicLocationComponent implements OnInit {\r\n  items: any = [];\r\n  profileData: any;\r\n  profileForm: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  thirdFormGroup: FormGroup;\r\n\r\n  @ViewChild('stepper') stepper: MatStepper;\r\n\r\n  constructor(public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public router: Router,\r\n    public uploadService: UploadService,\r\n    public formBuilder:FormBuilder) {\r\n    \r\n    this.getProfile();\r\n  }\r\n\r\n  ngOnInit() { \r\n    this.profileForm = this.formBuilder.group({\r\n      mobileNumber: [''],\r\n      email: [''],\r\n      landmark: [''],\r\n    })\r\n\r\n    this.secondFormGroup = this.formBuilder.group({})\r\n    this.thirdFormGroup =this.formBuilder.group({})\r\n\r\n  }\r\n\r\n  getProfile() {\r\n    this.mainService.getProfile().then(resData => {\r\n      this.profileForm.patchValue({\r\n        ...resData.data,\r\n        landmark: resData.data.location.landmark\r\n      });\r\n      this.profileData = resData.data;\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> getProfile -> error\", error);\r\n    })\r\n  }\r\n\r\n  onSave(staper: MatStepper) {\r\n    var data = {\r\n      ...this.profileForm.value,\r\n      location: {\r\n        landmark: this.profileForm.value.landmark,\r\n        address: this.profileData.location.address,\r\n        state: this.profileData.location.state,\r\n        city: this.profileData.location.city,\r\n        pincode: this.profileData.location.pincode,\r\n        country: this.profileData.location.country,\r\n        isVerified: 'Yes'\r\n      }\r\n    }\r\n    this.mainService.updateUserprofile(data).then(resData => {\r\n      this.showToast('success', 'Profile', 'Profile updated successfully');\r\n      staper.next();\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> onSave -> error\", error)\r\n    })\r\n  }\r\n\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<p-toast class=\"custom-error\" [showTransformOptions]=\"'translateX(100%)'\"></p-toast>\r\n<section>\r\n    <mat-horizontal-stepper labelPosition=\"bottom\" linear mode #stepper>\r\n        <mat-step [stepControl]=\"profileForm\"  disableRipple=\"true\" >\r\n                <ng-template matStepLabel>Location</ng-template>\r\n                <section class=\"bg-white p-sm-3\">\r\n                    <form  [formGroup]=\"profileForm\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n                                    <p class=\"mb-2 \" style=\"font-size: 15px;\">\r\n                                        Dr. {{profileData?.firstName}} {{profileData?.lastName}}</p>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"RegistrationNumber\">Phone number</label>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-12\">\r\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"mobileNumber\"\r\n                                                    id=\"RegistrationNumber\" placeholder=\"+91 8989788988\" disabled=\"true\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"email\">Email Address</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"email\" id=\"email\" disabled=\"true\"\r\n                                            placeholder=\"example@gmail.com\">\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"landmark\">Street address</label>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"landmark\" formControlName=\"landmark\"\r\n                                            placeholder=\"Enter your address\">\r\n                                    </div>\r\n                                    <hr class=\"mt-5 mb-5\">\r\n                                    <div class=\"row\">\r\n                                        <button mat-raised-button [routerLink]=\"['/Doctor/Profile']\">\r\n                                            <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i>\r\n                                            Back\r\n                                        </button>\r\n                                        <button style=\"margin-left:10px;\" mat-raised-button color=\"warn\" (click)=\"onSave(stepper)\" class=\r\n                                        \"themeColorBtn\">\r\n                                        Save and continue\r\n                                        <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3 col-lg-4 offset-md-1\">\r\n                                    <div class=\" d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n                                        style=\"border: 1px solid #14aa9b;\">\r\n                                        <div class=\" bg p-4 textcol\">\r\n                                            <div><i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i> </div>\r\n                                            <p class=\"stext font-weight-bold\">\r\n                                                This will help your patients to reach your establishment easily.</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </section>\r\n        </mat-step>\r\n        <mat-step [stepControl]=\"secondFormGroup\" disableRipple=\"true\" >\r\n            <form [formGroup]=\"secondFormGroup\">\r\n                <ng-template matStepLabel>Details of consultant doctor</ng-template>\r\n                <app-consultant-details [stepper]=\"stepper\"></app-consultant-details>\r\n            </form>\r\n        </mat-step>\r\n        <mat-step [stepControl]=\"thirdFormGroup\" disableRipple=\"true\">\r\n            <form [formGroup]=\"thirdFormGroup\" >\r\n                <ng-template matStepLabel>Establishment Timings</ng-template>\r\n                <app-clinic-timings [stepper]=\"stepper\"></app-clinic-timings>\r\n            </form>\r\n        </mat-step>\r\n    </mat-horizontal-stepper>\r\n</section>\r\n\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MainService } from 'src/app/services/main.service';\r\nimport { UploadService } from 'src/app/services/upload.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-clinic-proof',\r\n  templateUrl: './clinic-proof.component.html',\r\n  styleUrls: ['./clinic-proof.component.scss']\r\n})\r\nexport class ClinicProofComponent implements OnInit {\r\n\r\n  @Input() stepper: MatStepper;\r\n\r\n  items: any = [];\r\n  establishmentProff: any;\r\n  profileData: any;\r\n\r\n  constructor(public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public router: Router,\r\n    public uploadService: UploadService) {\r\n    this.getProfile();\r\n  }\r\n\r\n  getProfile() {\r\n    this.mainService.getProfile().then(resData => {\r\n      this.profileData = resData.data;\r\n      this.establishmentProff = this.profileData.establishmentProff;\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> getProfile -> error\", error);\r\n    })\r\n  } \r\n\r\n  onSave() {\r\n\r\n    if(this.establishmentProff.length === ''){\r\n      return;\r\n    }\r\n\r\n\r\n    this.mainService.updateUserprofile({ establishmentProff: this.establishmentProff }).then(resData => {\r\n      this.showToast('success', 'Profile', 'Profile updated successfully');\r\n      this.stepper.next();\r\n      this.router.navigate(['/Doctor/Profile/']);\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> onSave -> error\", error)\r\n    })\r\n  }\r\n\r\n  browseFile(event) {\r\n    const file = event.target.files;\r\n    this.uploadService.upload(file).then(res => {\r\n      this.establishmentProff = res.files[0];\r\n    }).catch(error => {\r\n      console.error('error', error);\r\n    });\r\n  }\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","<section class=\"bg-white p-sm-3\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n      <p class=\"mb-2\" style=\"font-size: 15px;\">Dr. {{profileData?.firstName}} {{profileData?.lastName}}</p>\r\n      <form>\r\n        <div class=\"row\">\r\n          <div class=\"border bgh m-auto\">\r\n\r\n            <img src=\"{{establishmentProff}}\" class=\"img-fluid\"\r\n                                           \r\n            style=\"padding: 0px;width:100%; height: 150px;background-color: #eadfdf;\">\r\n\r\n            <input type=\"file\" class=\"d-none\" #file (change)=\"browseFile($event)\">\r\n            <span (click)=\"file.click()\" class=\"btn border bg-white  z-index\" style=\"position: absolute;top: 0;left: 0;font-size: 1rem !important;\">\r\n              <i class=\"fa fa-upload\" aria-hidden=\"true\" style=\"margin: 0px;\"></i>\r\n\r\n          </span>\r\n          \r\n          </div>\r\n\r\n          <div *ngIf=\"establishmentProff\" class=\"display-block text-center\">One file is Uploaded</div>\r\n          <div *ngIf=\"!establishmentProff\" class=\"error-block display-block text-center\">File Uplopad is required</div>\r\n\r\n          <p class=\"pt-2\" style=\"font-size: 12px;\">\r\n            Please provide your Establishment ownership proof to verify your\r\n            profile, so that no one else can get access to your information.\r\n          </p>\r\n          <p>Acceptable documents</p>\r\n        </div>\r\n        <div class=\"row\">\r\n          <ul class=\"inside1\">\r\n            <li>Clinic registration proof</li>\r\n            <li>Document for waste disposal</li>\r\n            <li>Tax receipt</li>\r\n          </ul>\r\n        </div>\r\n        <hr />\r\n        <div class=\"row\">\r\n          <button mat-raised-button matStepperPrevious>\r\n            <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i> Back\r\n          </button>\r\n          <button mat-raised-button style=\"margin-left: 10px;\" (click)=\"onSave()\" color=\"warn\" class=\r\n          \"themeColorBtn\">\r\n            Save and continue\r\n            <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n      <div class=\"d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n        style=\"border: 1px solid #14aa9b;\">\r\n        <div class=\"bg p-4 textcol\">\r\n          <div><i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i></div>\r\n          <p class=\"stext font-weight-bold\">\r\n            2.5M patients are looking for a doctor on WhealthyLife. Verify your\r\n            credentials and reach out to them\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>","import { DoctorProfileService } from 'src/app/services/doctor-profile.service';\r\nimport { UserService } from './../../../../services/user.service';\r\nimport { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { MainService } from '../../../../services/main.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { FormGroup, FormControlName, FormControl, FormBuilder } from '@angular/forms';\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: 'app-clinic-timings',\r\n  templateUrl: './clinic-timings.component.html',\r\n  styleUrls: ['./clinic-timings.component.scss']\r\n})\r\nexport class ClinicTimingsComponent implements OnInit {\r\n\r\n  columns: string[] = ['Day', 'MorningSlot', 'AfternoonSlots', 'EveningSlots', 'NightSlots'];\r\n  dataSource = ELEMENT_DATA;\r\n\r\n  \r\n\r\n  SlotForm: FormGroup;\r\n  dMO: boolean = false;\r\n  dTU: boolean = false;\r\n  dWE: boolean = false;\r\n  dTH: boolean = false;\r\n  dFR: boolean = false;\r\n  dSA: boolean = false;\r\n  dSU: boolean = false;\r\n  TimeSloat: any[];\r\n  @Input() stepper: any;\r\n  timeSlot: FormGroup;\r\n  timeSloats: any = [];\r\n  TimeSloat2: any = [];\r\n  doctorinfo: any;\r\n  days: any;\r\n  profile: any;\r\n  constructor(public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public UserService:UserService,\r\n    public DoctorProfileService:DoctorProfileService,\r\n    public  fb:FormBuilder) {\r\n    \r\n      this.SlotForm = this.fb.group({\r\n        MorStart0:[\"\"],\r\n          MorStart1:[\"\"],\r\n          MorStart2:[\"\"],\r\n          MorStart3:[\"\"],\r\n          MorStart4:[\"\"],\r\n          MorStart5:[\"\"],\r\n          MorStart6:[\"\"],\r\n          MorEnd0:[\"\"],\r\n          MorEnd1:[\"\"],\r\n          MorEnd2:[\"\"],\r\n          MorEnd3:[\"\"],\r\n          MorEnd4:[\"\"],\r\n          MorEnd5:[\"\"],\r\n          MorEnd6:[\"\"],\r\n          AftStart0:[\"\"],\r\n          AftStart1:[\"\"],\r\n          AftStart2:[\"\"],\r\n          AftStart3:[\"\"],\r\n          AftStart4:[\"\"],\r\n          AftStart5:[\"\"],\r\n          AftStart6:[\"\"],\r\n          AftEnd0:[\"\"],\r\n          AftEnd1:[\"\"],\r\n          AftEnd2:[\"\"],\r\n          AftEnd3:[\"\"],\r\n          AftEnd4:[\"\"],\r\n          AftEnd5:[\"\"],\r\n          AftEnd6:[\"\"],\r\n          EveStart0:[\"\"],\r\n          EveStart1:[\"\"],\r\n          EveStart2:[\"\"],\r\n          EveStart3:[\"\"],\r\n          EveStart4:[\"\"],\r\n          EveStart5:[\"\"],\r\n          EveStart6:[\"\"],\r\n          EveEnd0:[\"\"],\r\n          EveEnd1:[\"\"],\r\n          EveEnd2:[\"\"],\r\n          EveEnd3:[\"\"],\r\n          EveEnd4:[\"\"],\r\n          EveEnd5:[\"\"],\r\n          EveEnd6:[\"\"],\r\n          NigStart0:[\"\"],\r\n          NigStart1:[\"\"],\r\n          NigStart2:[\"\"],\r\n          NigStart3:[\"\"],\r\n          NigStart4:[\"\"],\r\n          NigStart5:[\"\"],\r\n          NigStart6:[\"\"],\r\n          NigEnd0:[\"\"],\r\n          NigEnd1:[\"\"],\r\n          NigEnd2:[\"\"],\r\n          NigEnd3:[\"\"],\r\n          NigEnd4:[\"\"],\r\n          NigEnd5:[\"\"],\r\n          NigEnd6:[\"\"],\r\n      })\r\n\r\n      this.getProfile();\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n\r\n  getProfile() {\r\n    this.mainService.getProfile().then(resData => {\r\n      this.profile = resData.data\r\n      console.log(\"ClinicTimingsComponent -> getProfile -> this.profile\", this.profile)\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> getProfile -> error\", error);\r\n    })\r\n  }\r\n\r\n  onSave(){\r\n    if(this.SlotForm.dirty && this.SlotForm.valid){\r\n        const data ={\r\n          slotsArray: [\r\n            {\r\n          day: \"monday\" ,\r\n          morningSlot: {\r\n            from : this.SlotForm.controls['MorStart0'].value ? this.SlotForm.controls['MorStart0'].value : null ,\r\n            to : this.SlotForm.controls['MorEnd0'].value ? this.SlotForm.controls['MorEnd0'].value : null\r\n          },\r\n          afternoonSlot: {\r\n            from: this.SlotForm.controls['AftStart0'].value ? this.SlotForm.controls['AftStart0'].value : null,\r\n            to: this.SlotForm.controls['AftEnd0'].value ? this.SlotForm.controls['AftEnd0'].value : null\r\n          },\r\n          eveningSlot: {\r\n            from: this.SlotForm.controls['EveStart0'].value ? this.SlotForm.controls['EveStart0'].value : null,\r\n            to: this.SlotForm.controls['EveEnd0'].value,\r\n          },\r\n          nightSlot: {\r\n            from: this.SlotForm.controls['NigStart0'].value ? this.SlotForm.controls['NigStart0'].value : null,\r\n            to: this.SlotForm.controls['NigEnd0'].value ? this.SlotForm.controls['NigEnd0'].value : null,\r\n          }\r\n        },\r\n        {\r\n          day: \"tuesday\" ,\r\n          morningSlot: {\r\n            from : this.SlotForm.controls['MorStart1'].value ? this.SlotForm.controls['MorStart1'].value : null,\r\n            to : this.SlotForm.controls['MorEnd1'].value ? this.SlotForm.controls['MorEnd1'].value : null\r\n          },\r\n          afternoonSlot: {\r\n            from: this.SlotForm.controls['AftStart1'].value ? this.SlotForm.controls['AftStart1'].value : null,\r\n            to: this.SlotForm.controls['AftEnd1'].value ? this.SlotForm.controls['AftEnd1'].value : null\r\n          },\r\n          eveningSlot: {\r\n            from: this.SlotForm.controls['EveStart1'].value ? this.SlotForm.controls['EveStart1'].value : null,\r\n            to: this.SlotForm.controls['EveEnd1'].value ? this.SlotForm.controls['EveEnd1'].value : null,\r\n          },\r\n          nightSlot: {\r\n            from: this.SlotForm.controls['NigStart1'].value ? this.SlotForm.controls['NigStart1'].value : null,\r\n            to: this.SlotForm.controls['NigEnd1'].value ? this.SlotForm.controls['NigEnd1'].value : null,\r\n          }\r\n        },\r\n        {\r\n        day: \"wednesday\" ,\r\n          morningSlot: {\r\n            from : this.SlotForm.controls['MorStart2'].value ? this.SlotForm.controls['MorStart2'].value : null,\r\n            to : this.SlotForm.controls['MorEnd2'].value ? this.SlotForm.controls['MorEnd2'].value : null\r\n          },\r\n          afternoonSlot: {\r\n            from: this.SlotForm.controls['AftStart2'].value ? this.SlotForm.controls['AftStart2'].value : null,\r\n            to: this.SlotForm.controls['AftEnd2'].value ? this.SlotForm.controls['AftEnd2'].value : null\r\n          },\r\n          eveningSlot: {\r\n            from: this.SlotForm.controls['EveStart2'].value ? this.SlotForm.controls['EveStart2'].value : null,\r\n            to: this.SlotForm.controls['EveEnd2'].value ? this.SlotForm.controls['EveEnd2'].value : null,\r\n          },\r\n          nightSlot: {\r\n            from: this.SlotForm.controls['NigStart2'].value ? this.SlotForm.controls['NigStart2'].value : null,\r\n            to: this.SlotForm.controls['NigEnd2'].value ? this.SlotForm.controls['NigEnd2'].value : null,\r\n          }\r\n        },\r\n        {\r\n          day: \"thursday\" ,\r\n          morningSlot: {\r\n            from : this.SlotForm.controls['MorStart3'].value ? this.SlotForm.controls['MorStart3'].value : null,\r\n            to : this.SlotForm.controls['MorEnd3'].value ? this.SlotForm.controls['MorEnd3'].value : null\r\n          },\r\n          afternoonSlot: {\r\n            from: this.SlotForm.controls['AftStart3'].value ? this.SlotForm.controls['AftStart3'].value : null,\r\n            to: this.SlotForm.controls['AftEnd3'].value ? this.SlotForm.controls['AftEnd3'].value : null\r\n          },\r\n          eveningSlot: {\r\n            from: this.SlotForm.controls['EveStart3'].value ? this.SlotForm.controls['EveStart3'].value : null,\r\n            to: this.SlotForm.controls['EveEnd3'].value ? this.SlotForm.controls['EveEnd3'].value : null,\r\n          },\r\n          nightSlot: {\r\n            from: this.SlotForm.controls['NigStart3'].value ? this.SlotForm.controls['NigStart3'].value : null,\r\n            to: this.SlotForm.controls['NigEnd3'].value ? this.SlotForm.controls['NigEnd3'].value : null,\r\n          }\r\n        },\r\n        {\r\n          day: \"friday\" ,\r\n          morningSlot: {\r\n            from : this.SlotForm.controls['MorStart4'].value ? this.SlotForm.controls['MorStart4'].value : null,\r\n            to : this.SlotForm.controls['MorEnd4'].value ? this.SlotForm.controls['MorStart4'].value : null\r\n          },\r\n          afternoonSlot: {\r\n            from: this.SlotForm.controls['AftStart4'].value ? this.SlotForm.controls['AftStart4'].value : null,\r\n            to: this.SlotForm.controls['AftEnd4'].value ? this.SlotForm.controls['AftEnd4'].value : null\r\n          },\r\n          eveningSlot: {\r\n            from: this.SlotForm.controls['EveStart4'].value ? this.SlotForm.controls['EveStart4'].value : null,\r\n            to: this.SlotForm.controls['EveEnd4'].value ? this.SlotForm.controls['EveEnd4'].value : null,\r\n          },\r\n          nightSlot: {\r\n            from: this.SlotForm.controls['NigStart4'].value ? this.SlotForm.controls['NigStart4'].value : null,\r\n            to: this.SlotForm.controls['NigEnd4'].value ? this.SlotForm.controls['NigEnd4'].value : null,\r\n          }\r\n          },\r\n        {\r\n          day: \"saturday\" ,\r\n          morningSlot: {\r\n            from : this.SlotForm.controls['MorStart5'].value  ? this.SlotForm.controls['MorStart5'].value : null,\r\n            to : this.SlotForm.controls['MorEnd5'].value  ? this.SlotForm.controls['MorEnd5'].value : null\r\n          },\r\n          afternoonSlot: {\r\n            from: this.SlotForm.controls['AftStart5'].value  ? this.SlotForm.controls['AftStart5'].value : null,\r\n            to: this.SlotForm.controls['AftEnd5'].value  ? this.SlotForm.controls['AftEnd5'].value : null\r\n          },\r\n          eveningSlot: {\r\n            from: this.SlotForm.controls['EveStart5'].value  ? this.SlotForm.controls['EveStart5'].value : null,\r\n            to: this.SlotForm.controls['EveEnd5'].value  ? this.SlotForm.controls['EveEnd5'].value : null\r\n          },\r\n          nightSlot: {\r\n            from: this.SlotForm.controls['NigStart5'].value  ? this.SlotForm.controls['NigStart5'].value : null,\r\n            to: this.SlotForm.controls['NigEnd5'].value  ? this.SlotForm.controls['NigEnd5'].value : null\r\n          }\r\n          },\r\n          {\r\n            day: \"sunday\" ,\r\n            morningSlot: {\r\n              from : this.SlotForm.controls['MorStart6'].value ? this.SlotForm.controls['MorStart6'].value : null,\r\n              to : this.SlotForm.controls['MorEnd6'].value ? this.SlotForm.controls['MorEnd6'].value : null\r\n            },\r\n            afternoonSlot: {\r\n              from: this.SlotForm.controls['AftStart6'].value ? this.SlotForm.controls['AftStart6'].value : null,\r\n              to: this.SlotForm.controls['AftEnd6'].value ? this.SlotForm.controls['AftEnd6'].value : null\r\n            },\r\n            eveningSlot: {\r\n              from: this.SlotForm.controls['EveStart6'].value ? this.SlotForm.controls['EveStart6'].value : null,\r\n              to: this.SlotForm.controls['EveEnd6'].value ? this.SlotForm.controls['EveEnd6'].value : null,\r\n            },\r\n            nightSlot: {\r\n              from: this.SlotForm.controls['NigStart6'].value ? this.SlotForm.controls['NigStart6'].value : null,\r\n              to: this.SlotForm.controls['NigEnd6'].value ? this.SlotForm.controls['NigEnd6'].value : null,\r\n            }\r\n            },\r\n          ]\r\n        }\r\n\r\n        this.mainService.addTimeSlot(data).then(resData =>{\r\n          console.log(\"ClinicTimingsComponent -> onSave -> resData\", resData)\r\n          this.showToast('success', 'Profile', 'Profile updated successfully');\r\n        }).catch(err =>{\r\n          console.log(\"ClinicTimingsComponent -> onSave -> err\", err)\r\n          this.showToast('warn', 'Profile', 'Something went wrong');\r\n        })\r\n\r\n\r\n    }else{\r\n      this.SlotForm.removeControl('FormControlName');\r\n    }\r\n  }\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  Day: any;\r\n  MorningSlot: string;\r\n  AfternoonSlots: string;\r\n  EveningSlots:string;\r\n  NightSlots:string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {Day: 'MON', MorningSlot: 'Hydrogen', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'TUE', MorningSlot: 'Helium', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'WED', MorningSlot: 'Lithium', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'THU', MorningSlot: 'Beryllium', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'FRI', MorningSlot: 'Boron', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'SAT', MorningSlot: 'Carbon', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'SUN', MorningSlot: 'Nitrogen', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  \r\n];\r\n","<section [formGroup]=\"SlotForm\">\r\n    <table mat-table [dataSource]=\"dataSource\" cdkDropList cdkDropListOrientation=\"horizontal\"\r\n        (cdkDropListDropped)=\"drop($event)\">\r\n\r\n        <ng-container matColumnDef=\"Day\">\r\n            <th mat-header-cell cdkDrag *matHeaderCellDef> Day </th>\r\n            <td mat-cell *matCellDef=\"let element\" style=\"width:8%\"> {{element.Day}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"MorningSlot\" align=\"center\">\r\n            <th mat-header-cell cdkDrag *matHeaderCellDef style=\"text-align: center;background-color: #ececec;\"> Morning Slot </th>\r\n            <!-- <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td> -->\r\n            <td mat-cell *matCellDef=\"let element;let i=index\" style=\"width:22.5%;background-color: #ececec;\"> \r\n                <div class=\"col-12\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                <mat-label>Sessions Start</mat-label>\r\n                                <mat-select required formControlName=\"MorStart{{i}}\">\r\n                                    <mat-option> -- None -- </mat-option>\r\n                                    <mat-option value=\"06:00\">06:00</mat-option>\r\n                                    <mat-option value=\"06:30\">06:30</mat-option>\r\n                                    <mat-option value=\"07:00\">07:00</mat-option>\r\n                                    <mat-option value=\"07:30\">07:30</mat-option>\r\n                                    <mat-option value=\"08:00\">08:00</mat-option>\r\n                                    <mat-option value=\"08:30\">08:30</mat-option>\r\n                                    <mat-option value=\"09:00\">09:00</mat-option>\r\n                                    <mat-option value=\"09:30\">09:30</mat-option>\r\n                                    <mat-option value=\"10:00\">10:00</mat-option>\r\n                                    <mat-option value=\"10:30\">10:30</mat-option>\r\n                                    <mat-option value=\"11:00\">11:00</mat-option>\r\n                                    <mat-option value=\"11:30\">11:30</mat-option>\r\n                                    <mat-option value=\"11:59\">11:59</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                <mat-label>Sessions Start</mat-label>\r\n                                <mat-select required formControlName=\"MorEnd{{i}}\">\r\n                                    <mat-option> -- None -- </mat-option>\r\n                                    <mat-option value=\"06:00\">06:00</mat-option>\r\n                                    <mat-option value=\"06:30\">06:30</mat-option>\r\n                                    <mat-option value=\"07:00\">07:00</mat-option>\r\n                                    <mat-option value=\"07:30\">07:30</mat-option>\r\n                                    <mat-option value=\"08:00\">08:00</mat-option>\r\n                                    <mat-option value=\"08:30\">08:30</mat-option>\r\n                                    <mat-option value=\"09:00\">09:00</mat-option>\r\n                                    <mat-option value=\"09:30\">09:30</mat-option>\r\n                                    <mat-option value=\"10:00\">10:00</mat-option>\r\n                                    <mat-option value=\"10:30\">10:30</mat-option>\r\n                                    <mat-option value=\"11:00\">11:00</mat-option>\r\n                                    <mat-option value=\"11:30\">11:30</mat-option>\r\n                                    <mat-option value=\"11:59\">11:59</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"AfternoonSlots\">\r\n            <th mat-header-cell *matHeaderCellDef style=\"text-align: center;\"> Afternoon Slots </th>\r\n            <td mat-cell *matCellDef=\"let element; let i=index\" style=\"width:22.5%\">  \r\n                <div class=\"col-12\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                <mat-label>Sessions Start</mat-label>\r\n                                <mat-select required formControlName=\"AftStart{{i}}\">\r\n                                    <mat-option> -- None -- </mat-option>\r\n                                    <mat-option value=\"12:00\">12:00</mat-option>\r\n                                    <mat-option value=\"12:30\">12:30</mat-option>\r\n                                    <mat-option value=\"13:00\">13:00</mat-option>\r\n                                    <mat-option value=\"13:30\">13:30</mat-option>\r\n                                    <mat-option value=\"14:00\">14:00</mat-option>\r\n                                    <mat-option value=\"14:30\">14:30</mat-option>\r\n                                    <mat-option value=\"15:00\">15:00</mat-option>\r\n                                    <mat-option value=\"15:30\">15:30</mat-option>\r\n                                    <mat-option value=\"16:00\">16:00</mat-option>\r\n                                    <mat-option value=\"16:30\">16:30</mat-option>\r\n                                    <mat-option value=\"17:00\">17:00</mat-option>\r\n                                    <mat-option value=\"17:30\">17:30</mat-option>\r\n                                    <mat-option value=\"17:59\">17:59</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                <mat-label>Sessions End</mat-label>\r\n                                <mat-select required formControlName=\"AftEnd{{i}}\">\r\n                                    <mat-option> -- None -- </mat-option>\r\n                                    <mat-option value=\"12:00\">12:00</mat-option>\r\n                                    <mat-option value=\"12:30\">12:30</mat-option>\r\n                                    <mat-option value=\"13:00\">13:00</mat-option>\r\n                                    <mat-option value=\"13:30\">13:30</mat-option>\r\n                                    <mat-option value=\"14:00\">14:00</mat-option>\r\n                                    <mat-option value=\"14:30\">14:30</mat-option>\r\n                                    <mat-option value=\"15:00\">15:00</mat-option>\r\n                                    <mat-option value=\"15:30\">15:30</mat-option>\r\n                                    <mat-option value=\"16:00\">16:00</mat-option>\r\n                                    <mat-option value=\"16:30\">16:30</mat-option>\r\n                                    <mat-option value=\"17:00\">17:00</mat-option>\r\n                                    <mat-option value=\"17:30\">17:30</mat-option>\r\n                                    <mat-option value=\"17:59\">17:59</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"EveningSlots\">\r\n            <th mat-header-cell *matHeaderCellDef style=\"text-align: center;background-color: #ececec;\"> Evening Slots </th>\r\n            <td mat-cell *matCellDef=\"let element;let i = index\" style=\"width:22.5%;background-color: #ececec;\">  <div class=\"col-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                <mat-label>Sessions Start</mat-label>\r\n                                <mat-select required formControlName=\"EveStart{{i}}\">\r\n                                    <mat-option> -- None -- </mat-option>\r\n                                    <mat-option value=\"18:00\">18:00</mat-option>\r\n                                    <mat-option value=\"18:30\">18:30</mat-option>\r\n                                    <mat-option value=\"19:00\">19:00</mat-option>\r\n                                    <mat-option value=\"19:30\">19:30</mat-option>\r\n                                    <mat-option value=\"20:00\">20:00</mat-option>\r\n                                    <mat-option value=\"20:30\">20:30</mat-option>\r\n                                    <mat-option value=\"21:00\">21:00</mat-option>\r\n                                    <mat-option value=\"21:30\">21:30</mat-option>\r\n                                    <mat-option value=\"22:00\">22:00</mat-option>\r\n                                    <mat-option value=\"22:30\">22:30</mat-option>\r\n                                    <mat-option value=\"23:00\">23:00</mat-option>\r\n                                    <mat-option value=\"23:30\">23:30</mat-option>\r\n                                    <mat-option value=\"23:59\">23:59</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                <mat-label>Sessions End</mat-label>\r\n                                <mat-select required formControlName=\"EveEnd{{i}}\">\r\n                                    <mat-option> -- None -- </mat-option>\r\n                                    <mat-option value=\"18:00\">18:00</mat-option>\r\n                                    <mat-option value=\"18:30\">18:30</mat-option>\r\n                                    <mat-option value=\"19:00\">19:00</mat-option>\r\n                                    <mat-option value=\"19:30\">19:30</mat-option>\r\n                                    <mat-option value=\"20:00\">20:00</mat-option>\r\n                                    <mat-option value=\"20:30\">20:30</mat-option>\r\n                                    <mat-option value=\"21:00\">21:00</mat-option>\r\n                                    <mat-option value=\"21:30\">21:30</mat-option>\r\n                                    <mat-option value=\"22:00\">22:00</mat-option>\r\n                                    <mat-option value=\"22:30\">22:30</mat-option>\r\n                                    <mat-option value=\"23:00\">23:00</mat-option>\r\n                                    <mat-option value=\"23:30\">23:30</mat-option>\r\n                                    <mat-option value=\"23:59\">23:59</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"NightSlots\">\r\n            <th mat-header-cell *matHeaderCellDef style=\"text-align: center;\"> Night Slots </th>\r\n            <td mat-cell *matCellDef=\"let element;let i = index\" style=\"width:22.5%\">  <div class=\"col-12\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-6\">\r\n                        <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                            <mat-label>Sessions Start</mat-label>\r\n                            <mat-select required formControlName=\"NigStart{{i}}\">\r\n                                <mat-option> -- None -- </mat-option>\r\n                                <mat-option value=\"00:00 \"> 00:00  </mat-option>\r\n                                    <mat-option value=\"00:30\">00:30</mat-option>\r\n                                    <mat-option value=\"01:00\">01:00</mat-option>\r\n                                    <mat-option value=\"01:30\">01:30</mat-option>\r\n                                    <mat-option value=\"02:00\">02:00</mat-option>\r\n                                    <mat-option value=\"02:30\">02:30</mat-option>\r\n                                    <mat-option value=\"03:00\">03:00</mat-option>\r\n                                    <mat-option value=\"03:30\">03:30</mat-option>\r\n                                    <mat-option value=\"04:00\">04:00</mat-option>\r\n                                    <mat-option value=\"04:30\">04:30</mat-option>\r\n                                    <mat-option value=\"05:00\">05:00</mat-option>\r\n                                    <mat-option value=\"05:30\">05:30</mat-option>\r\n                                    <mat-option value=\"05:59\">05:59</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                <mat-label>Sessions End</mat-label>\r\n                                <mat-select required formControlName=\"NigEnd{{i}}\" >\r\n                                    <mat-option> -- None -- </mat-option>\r\n                                    <mat-option value=\"00:00\">00:00</mat-option>\r\n                                    <mat-option value=\"00:30\">00:30</mat-option>\r\n                                    <mat-option value=\"01:00\">01:00</mat-option>\r\n                                    <mat-option value=\"01:30\">01:30</mat-option>\r\n                                    <mat-option value=\"02:00\">02:00</mat-option>\r\n                                    <mat-option value=\"02:30\">02:30</mat-option>\r\n                                    <mat-option value=\"03:00\">03:00</mat-option>\r\n                                    <mat-option value=\"03:30\">03:30</mat-option>\r\n                                    <mat-option value=\"04:00\">04:00</mat-option>\r\n                                    <mat-option value=\"04:30\">04:30</mat-option>\r\n                                    <mat-option value=\"05:00\">05:00</mat-option>\r\n                                    <mat-option value=\"05:30\">05:30</mat-option>\r\n                                    <mat-option value=\"05:59\">05:59</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\r\n    </table>\r\n</section>  \r\n  \r\n\r\n\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <button mat-raised-button matStepperPrevious>\r\n            <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i>\r\n            Back\r\n        </button>\r\n        <button style=\"position: absolute; right: 0;\" mat-raised-button color=\"warn\"  class=\r\n            \"themeColorBtn\" (click)=\"onSave()\">\r\n            Save and continue\r\n            <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { MainService } from 'src/app/services/main.service';\r\nimport { UploadService } from 'src/app/services/upload.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-connect-clinic',\r\n  templateUrl: './connect-clinic.component.html',\r\n  styleUrls: ['./connect-clinic.component.scss']\r\n})\r\nexport class ConnectClinicComponent implements OnInit {\r\n\r\n  items: any = [];\r\n  profileform: FormGroup;\r\n  avatar: any;\r\n\r\n  @Input() stepper: MatStepper;\r\n  hide: boolean = false;\r\n\r\n  constructor(public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public router: Router,\r\n    public uploadService: UploadService) {\r\n    this.profileform = new FormGroup({\r\n      typeOfEstablishment: new FormControl('')\r\n    })\r\n    this.items.length = 100;\r\n    this.getProfile();\r\n  }\r\n\r\n\r\n  ngOnInit() { }\r\n\r\n\r\n  getProfile() {\r\n    this.mainService.getProfile().then(resData => {\r\n      this.profileform.patchValue(resData.data);\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> getProfile -> error\", error)\r\n    })\r\n  }\r\n\r\n  onSave() {\r\n    this.mainService.updateUserprofile(this.profileform.value).then(resData => {\r\n      this.showToast('success', 'Profile', 'Profile updated successfully');\r\n      this.stepper.next();\r\n      this.router.navigate(['/Doctor/Profile']);\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> onSave -> error\", error)\r\n    })\r\n  }\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n\r\n  \r\n\r\n}","<section class=\"bg-white p-sm-3\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n            <p style=\"font-size: 15px;\">Please select any one of the following:</p>\r\n            <div class=\"form-group\" [formGroup]=\"profileform\">\r\n                <mat-radio-group aria-label=\"Select an option\" formControlName=\"typeOfEstablishment\">\r\n                    <div class=\"row py-2 pl-2\">\r\n                        <mat-radio-button value=\"OwnEstablishment\">I own a establishment</mat-radio-button>\r\n                    </div>\r\n                    <div class=\"row py-2 pl-2\">\r\n                        <mat-radio-button value=\"VisitEstablishment\" >I visit a establishment</mat-radio-button>\r\n                    </div>\r\n                </mat-radio-group>\r\n            </div>\r\n            <hr class=\"mt-5 mb-5\">\r\n            <div class=\"row\">\r\n                <button mat-raised-button matStepperPrevious>\r\n                    <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i>\r\n                    Back\r\n                </button>\r\n                <button class=\"themeColorBtn\" style=\"margin-left: 10px !important;\"  mat-raised-button color=\"warn\" \r\n                 (click)=\"onSave()\" routerLinkActive=\"router-link-active\">\r\n                    Save and Continue\r\n                    <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n            <div class=\"d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n                style=\"border: 1px solid #14aa9b;\">\r\n                <div class=\"bg p-4 textcol\">\r\n                    <div>\r\n                        <i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                    <p class=\"stext font-weight-bold\">Patients often search for doctors by locality. Therefore, adding\r\n                        all your practice establishments ensures that your profile is visible to patients in all the\r\n                        relevant searches.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { MainService } from 'src/app/services/main.service';\r\nimport { UploadService } from 'src/app/services/upload.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, FormArray } from '@angular/forms';\r\nimport { UserService } from './../../../../services/user.service';\r\nimport { UserAccountsRoutingModule } from './../../../user-accounts/user-accounts-routing.module';\r\nimport { LocationService } from './../../../../services/location.service';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-consultant-details',\r\n  templateUrl: './consultant-details.component.html',\r\n  styleUrls: ['./consultant-details.component.scss']\r\n})\r\nexport class ConsultantDetailsComponent implements OnInit {\r\n\r\n\r\n  displayedColumns = [];\r\n  dataSource1: any;\r\n  displayedRows: [string, unknown][];\r\n\r\n  columns: string[] = ['Day', 'MorningSlot', 'AfternoonSlots', 'EveningSlots', 'NightSlots'];\r\n  dataSource = ELEMENT_DATA;\r\n\r\n  \r\n\r\n\r\n  dMO: boolean = false;\r\n  dTU: boolean = false;\r\n  dWE: boolean = false;\r\n  dTH: boolean = false;\r\n  dFR: boolean = false;\r\n  dSA: boolean = false;\r\n  dSU: boolean = false;\r\n  timeSlot: FormGroup;\r\n  timeSloats: any = [];\r\n  TimeSloat2: any = [];\r\n  doctorinfo: any;\r\n  days: any;\r\n\r\n  @Input() stepper: any;\r\n  items: any = [];\r\n  // empForm: FormGroup;\r\n  memberForm : FormGroup;\r\n  profileData: any;\r\n  TimeSloat: any[];\r\n  data12: any[];\r\n  data:any[];\r\n  hide: boolean = true;\r\n  time1: any;\r\n  ClinicName: any;\r\n  profile: any;\r\n  length: any;\r\n  val: any;\r\n  fix: { key: number; value: any; }[];\r\n  countryList: any;\r\n  countryId: any;\r\n  stateList: any;\r\n  cityList: any;\r\n  cityId: any;\r\n  stateId: any;\r\n  clinicId: any;\r\n  lat: any;\r\n  lang: any;\r\n  locationId: any;\r\n  ClinicId: any;\r\n  timeId: any;\r\n  DOCClicnicId: any;\r\n  locClinicId: any;\r\n  timeClinicId: any;\r\n  VisiteclinicId: any;\r\n  LocDetail: any;\r\n  clinicList: any[]=[];\r\n \r\n  DocClinic: any;\r\n  hide1: boolean = true;\r\n  ClinicDetails: any;\r\n  IdClinic: any;\r\n  IdLocation: any;\r\n  IdTime: any;\r\n  DoctorId: any;\r\n  DataClinic: boolean = false;\r\n\r\n\r\n \r\n  constructor(public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public router: Router,\r\n    private fb:FormBuilder,\r\n    public dialog: MatDialog,\r\n    private  location:LocationService\r\n   ) {\r\n     \r\n    this.getProfile();\r\n    \r\n    this.mainService.getAllClinic().then(AllClinicName =>{\r\n    console.log(\"ConsultantDetailsComponent -> AllClinicName\", AllClinicName);\r\n\r\n    const dfgf= AllClinicName.data;\r\n    this.data = AllClinicName.data;\r\n    console.log(\"ConsultantDetailsComponent -> dfgf\", dfgf)\r\n\r\n    // for( let i=0 ; i < dfgf.length ; i++ ){\r\n    //   this.data12.push(dfgf[i]);\r\n    //   // this.data.push(dfgf[i]);\r\n    // }\r\n    // console.log(\"ConsultantDetailsComponent ->  this.data12\",  this.data12);\r\n    //  this.data12 = AllClinicName\r\n\r\n    }).catch(error =>{\r\n    console.log(\"ConsultantDetailsComponent -> error\", error);\r\n    })\r\n\r\n    this.getClinicName()\r\n    this.getCountry()\r\n    this.getLocation()\r\n\r\n\r\n    this.displayedColumns = [\r\n      \"Sr_No\",\r\n      \"Clinic_Name\",\r\n      \"Address\",\r\n      \"Action\",\r\n    ];\r\n   \r\n  }\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  ngOnInit() { \r\n    // this.getTime();\r\n\r\n    this.memberForm = this.fb.group({\r\n      clinicName: [''],\r\n      ClinicName1:[''],\r\n      address: [''],\r\n      landmark: [''],\r\n      country: [''],\r\n      state: [''],\r\n      city: [''],\r\n      fees : [''],\r\n      establishmentHour : [''],\r\n      hours : [\"\"],\r\n      MorStart0:[\"\"],\r\n      MorStart1:[\"\"],\r\n      MorStart2:[\"\"],\r\n      MorStart3:[\"\"],\r\n      MorStart4:[\"\"],\r\n      MorStart5:[\"\"],\r\n      MorStart6:[\"\"],\r\n      MorEnd0:[\"\"],\r\n      MorEnd1:[\"\"],\r\n      MorEnd2:[\"\"],\r\n      MorEnd3:[\"\"],\r\n      MorEnd4:[\"\"],\r\n      MorEnd5:[\"\"],\r\n      MorEnd6:[\"\"],\r\n      AftStart0:[\"\"],\r\n      AftStart1:[\"\"],\r\n      AftStart2:[\"\"],\r\n      AftStart3:[\"\"],\r\n      AftStart4:[\"\"],\r\n      AftStart5:[\"\"],\r\n      AftStart6:[\"\"],\r\n      AftEnd0:[\"\"],\r\n      AftEnd1:[\"\"],\r\n      AftEnd2:[\"\"],\r\n      AftEnd3:[\"\"],\r\n      AftEnd4:[\"\"],\r\n      AftEnd5:[\"\"],\r\n      AftEnd6:[\"\"],\r\n      EveStart0:[\"\"],\r\n      EveStart1:[\"\"],\r\n      EveStart2:[\"\"],\r\n      EveStart3:[\"\"],\r\n      EveStart4:[\"\"],\r\n      EveStart5:[\"\"],\r\n      EveStart6:[\"\"],\r\n      EveEnd0:[\"\"],\r\n      EveEnd1:[\"\"],\r\n      EveEnd2:[\"\"],\r\n      EveEnd3:[\"\"],\r\n      EveEnd4:[\"\"],\r\n      EveEnd5:[\"\"],\r\n      EveEnd6:[\"\"],\r\n      NigStart0:[\"\"],\r\n      NigStart1:[\"\"],\r\n      NigStart2:[\"\"],\r\n      NigStart3:[\"\"],\r\n      NigStart4:[\"\"],\r\n      NigStart5:[\"\"],\r\n      NigStart6:[\"\"],\r\n      NigEnd0:[\"\"],\r\n      NigEnd1:[\"\"],\r\n      NigEnd2:[\"\"],\r\n      NigEnd3:[\"\"],\r\n      NigEnd4:[\"\"],\r\n      NigEnd5:[\"\"],\r\n      NigEnd6:[\"\"],\r\n    })\r\n\r\n    this.memberForm.controls.ClinicName1.valueChanges.subscribe((resData) => {\r\n      this.clinicId= resData\r\n      console.log(\"file: consultant-details.component.ts ~ line 85 ~ ConsultantDetailsComponent ~ ngOnInit ~ this.clinicId\", this.clinicId)\r\n      this.visiteClinic(resData)\r\n    })\r\n\r\n    this.memberForm.controls.clinicName.valueChanges.subscribe((resData) => {\r\n      this.VisiteclinicId = resData\r\n      console.log(\"file: consultant-details.component.ts ~ line 85 ~ ConsultantDetailsComponent ~ ngOnInit ~ this.VisiteclinicId\", this.VisiteclinicId)\r\n      this.visiteClinic(this.VisiteclinicId)\r\n    })\r\n    \r\n\r\n  }\r\n\r\n  getLocation(){\r\n    this.location.getPosition().subscribe(res =>{\r\n      this.lat= res.coords.latitude\r\n      this.lang = res.coords.longitude\r\n    })\r\n  }\r\n\r\n  getCountry(){\r\n    this.mainService\r\n    .getCountry()\r\n    .then((resData) => {\r\n      this.countryList = resData.data;\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n    });\r\n  }\r\n\r\n  CountryId(event){\r\n    this.countryId =  event.value\r\n    this.mainService\r\n    .getState(this.countryId)\r\n    .then((resData) => {\r\n      this.stateList = resData.data;\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n    });\r\n  }\r\n\r\n  State(event){\r\n    this.stateId = event.value\r\n    this.mainService\r\n      .getCity(this.stateId)\r\n      .then((resData) => {\r\n        this.cityList = resData.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n      });\r\n  }\r\n\r\n  City(event){\r\n    this.cityId = event.value\r\n  }\r\n\r\n  getClinicName(){\r\n    this.mainService.getAllClinic().then(resData =>{\r\n      console.log(\"file: consultant-details.component.ts ~ line 189 ~ ConsultantDetailsComponent ~ this.mainService.getAllClinic ~ resData\", resData)\r\n      this.ClinicName = resData.data\r\n      console.log(\"file: consultant-details.component.ts ~ line 192 ~ ConsultantDetailsComponent ~ this.mainService.getAllClinic ~ this.ClinicName\", this.ClinicName)\r\n      \r\n    })\r\n  }\r\n\r\n  getProfile() {\r\n    this.mainService.getProfile().then(resData => {\r\n      this.profile = resData.data\r\n      \r\n       this.getDocClinic(this.profile._id);\r\n      this.memberForm.patchValue(resData.data);\r\n      if(resData.data.typeOfEstablishment == \"OwnEstablishment\"){\r\n        this.hide = false\r\n      }else{\r\n        this.hide = true\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> getProfile -> error\", error);\r\n    })\r\n  }\r\n\r\n  getDocClinic(id){\r\n    this.clinicList = [];\r\n    this.DataClinic = true;\r\n    if(id != ''){\r\n      const data ={\r\n        doctorId:  id\r\n      }\r\n      this.mainService.getDOCClinic(data).then(resDataDoc =>{\r\n      console.log(\"ConsultantDetailsComponent -> getDocClinic -> resDataDoc\", resDataDoc)\r\n          for (let i = 0; i < resDataDoc.data.length; i++){\r\n            this.DocClinic = resDataDoc.data[i]\r\n            console.log(\"ConsultantDetailsComponent -> getDocClinic -> this.DocClinic\", this.DocClinic)\r\n            const element = resDataDoc.data[i];\r\n            const arr = {\r\n              Sr_No: \"\",\r\n              Clinic_Name: element.clinicId.name,\r\n              Address: element.locationId.location.address,\r\n              Action: element.clinicId._id,\r\n            };\r\n            this.clinicList.push(arr);\r\n          }\r\n          this.dataSource1 = new MatTableDataSource(\r\n            this.clinicList ? this.clinicList : null\r\n          );\r\n          console.log(\"ConsultantDetailsComponent -> getDocClinic -> this.dataSource1\", this.dataSource1)\r\n          this.dataSource1.paginator = this.paginator;\r\n          console.log(\"ConsultantDetailsComponent -> getDocClinic -> this.dataSource1.paginator\", this.dataSource1.paginator)\r\n        \r\n      }).catch(err =>{\r\n        console.log(\"ConsultantDetailsComponent -> getDocClinic -> err\", err)\r\n      })\r\n    }\r\n  }\r\n\r\n  openEdit(id) {\r\n  console.log(\"ConsultantDetailsComponent -> openEdit -> id\", id)\r\n  const data ={\r\n    clinicId: id\r\n  }\r\n    this.mainService.getDOCClinic(data).then(resData =>{\r\n    console.log(\"ConsultantDetailsComponent -> openEdit -> resData\", resData)\r\n    this.ClinicDetails = resData.data[0]\r\n    this.IdClinic = this.ClinicDetails.clinicId._id\r\n    this.IdLocation = this.ClinicDetails.locationId._id\r\n    this.IdTime = this.ClinicDetails._id\r\n    console.log(\"ConsultantDetailsComponent -> openEdit -> this.IdClinic  +  this.IdLocation + this.IdTime\", this.IdClinic ,  this.IdLocation ,  this.IdTime)\r\n      for (let i = 0; i < resData.data.length; i++){\r\n        this.memberForm.patchValue({\r\n          clinicName: resData.data[i].clinicId.name,\r\n          address: resData.data[i].locationId.location.address,\r\n          landmark: resData.data[i].locationId.location.landmark,\r\n          country: resData.data[i].locationId.location.country,\r\n          state: resData.data[i].locationId.location.state,\r\n          city: resData.data[i].locationId.location.city,\r\n         \r\n        })\r\n        \r\n\r\n        for (let k = 0; k < resData.data[0].timing.length; k++){\r\n          if(k==0){\r\n            this.memberForm.patchValue({\r\n              MorStart0: resData.data[i].timing[k].morningSlot.startTime,\r\n              MorEnd0: resData.data[i].timing[k].morningSlot.endTime,\r\n              AftStart0: resData.data[i].timing[k].afternoonSlot.startTime,\r\n              AftEnd0: resData.data[i].timing[k].afternoonSlot.endTime,\r\n              EveStart0: resData.data[i].timing[k].eveningSlot.startTime,\r\n              EveEnd0: resData.data[i].timing[k].eveningSlot.endTime,\r\n              NigStart0: resData.data[i].timing[k].nightSlot.startTime,\r\n              NigEnd0: resData.data[i].timing[k].nightSlot.endTime,\r\n            })\r\n          }\r\n          else if(k==1){\r\n            this.memberForm.patchValue({\r\n              MorStart1: resData.data[i].timing[k].morningSlot.startTime,\r\n              MorEnd1: resData.data[i].timing[k].morningSlot.endTime,\r\n              AftStart1: resData.data[i].timing[k].afternoonSlot.startTime,\r\n              AftEnd1: resData.data[i].timing[k].afternoonSlot.endTime,\r\n              EveStart1: resData.data[i].timing[k].eveningSlot.startTime,\r\n              EveEnd1: resData.data[i].timing[k].eveningSlot.endTime,\r\n              NigStart1: resData.data[i].timing[k].nightSlot.startTime,\r\n              NigEnd1: resData.data[i].timing[k].nightSlot.endTime,\r\n            })\r\n          }else if(k == 2){\r\n            this.memberForm.patchValue({\r\n              MorStart2: resData.data[i].timing[k].morningSlot.startTime,\r\n              MorEnd2: resData.data[i].timing[k].morningSlot.endTime,\r\n              AftStart2: resData.data[i].timing[k].afternoonSlot.startTime,\r\n              AftEnd2: resData.data[i].timing[k].afternoonSlot.endTime,\r\n              EveStart2: resData.data[i].timing[k].eveningSlot.startTime,\r\n              EveEnd2: resData.data[i].timing[k].eveningSlot.endTime,\r\n              NigStart2: resData.data[i].timing[k].nightSlot.startTime,\r\n              NigEnd2: resData.data[i].timing[k].nightSlot.endTime,\r\n            })\r\n          }else if(k == 3){\r\n            this.memberForm.patchValue({\r\n              MorStart3: resData.data[i].timing[k].morningSlot.startTime,\r\n              MorEnd3: resData.data[i].timing[k].morningSlot.endTime,\r\n              AftStart3: resData.data[i].timing[k].afternoonSlot.startTime,\r\n              AftEnd3: resData.data[i].timing[k].afternoonSlot.endTime,\r\n              EveStart3: resData.data[i].timing[k].eveningSlot.startTime,\r\n              EveEnd3: resData.data[i].timing[k].eveningSlot.endTime,\r\n              NigStart3: resData.data[i].timing[k].nightSlot.startTime,\r\n              NigEnd3: resData.data[i].timing[k].nightSlot.endTime,\r\n            })\r\n          }else if(k == 4){\r\n            this.memberForm.patchValue({\r\n              MorStart4: resData.data[i].timing[k].morningSlot.startTime,\r\n              MorEnd4: resData.data[i].timing[k].morningSlot.endTime,\r\n              AftStart4: resData.data[i].timing[k].afternoonSlot.startTime,\r\n              AftEnd4: resData.data[i].timing[k].afternoonSlot.endTime,\r\n              EveStart4: resData.data[i].timing[k].eveningSlot.startTime,\r\n              EveEnd4: resData.data[i].timing[k].eveningSlot.endTime,\r\n              NigStart4: resData.data[i].timing[k].nightSlot.startTime,\r\n              NigEnd4: resData.data[i].timing[k].nightSlot.endTime,\r\n            })\r\n          }else if(k == 5){\r\n            this.memberForm.patchValue({\r\n              MorStart5: resData.data[i].timing[k].morningSlot.startTime,\r\n              MorEnd5: resData.data[i].timing[k].morningSlot.endTime,\r\n              AftStart5: resData.data[i].timing[k].afternoonSlot.startTime,\r\n              AftEnd5: resData.data[i].timing[k].afternoonSlot.endTime,\r\n              EveStart5: resData.data[i].timing[k].eveningSlot.startTime,\r\n              EveEnd5: resData.data[i].timing[k].eveningSlot.endTime,\r\n              NigStart5: resData.data[i].timing[k].nightSlot.startTime,\r\n              NigEnd5: resData.data[i].timing[k].nightSlot.endTime,\r\n            })\r\n          }else if(k == 6){\r\n            this.memberForm.patchValue({\r\n              MorStart6: resData.data[i].timing[k].morningSlot.startTime,\r\n              MorEnd6: resData.data[i].timing[k].morningSlot.endTime,\r\n              AftStart6: resData.data[i].timing[k].afternoonSlot.startTime,\r\n              AftEnd6: resData.data[i].timing[k].afternoonSlot.endTime,\r\n              EveStart6: resData.data[i].timing[k].eveningSlot.startTime,\r\n              EveEnd6: resData.data[i].timing[k].eveningSlot.endTime,\r\n              NigStart6: resData.data[i].timing[k].nightSlot.startTime,\r\n              NigEnd6: resData.data[i].timing[k].nightSlot.endTime,\r\n            })\r\n          }else{\r\n            this.hide1 = true\r\n          }\r\n        }\r\n      }\r\n      console.log(\"ConsultantDetailsComponent -> openEdit ->  this.memberForm\",  this.memberForm)\r\n    }).catch(err =>{\r\n      console.log(\"ConsultantDetailsComponent -> openEdit -> err\", err)\r\n    })\r\n  }\r\n\r\n  onDelete(id){\r\n    console.log(\"ConsultantDetailsComponent -> onDelete -> id\", id)\r\n    const data ={\r\n      clinicId: id\r\n    }\r\n    this.mainService.getDOCClinic(data).then(resDataDel => {\r\n      console.log(\"ConsultantDetailsComponent -> onDelete -> resDataDel\", resDataDel)\r\n      this.DoctorId = resDataDel.data[0].doctorId\r\n      this.IdClinic = resDataDel.data[0].clinicId._id\r\n      this.IdLocation = resDataDel.data[0].locationId._id\r\n      this.IdTime = resDataDel.data[0]._id\r\n      console.log(\"ConsultantDetailsComponent -> openEdit -> this.IdClinic  +  this.IdLocation + this.IdTime\", this.IdClinic ,  this.IdLocation ,  this.IdTime)\r\n    \r\n      this.mainService.deleteClinicById(this.IdClinic).then(DeleteCres =>{\r\n        console.log(\"ConsultantDetailsComponent -> onDelete -> DeleteCres\", DeleteCres)\r\n      }).catch(err =>{\r\n       console.log(\"ConsultantDetailsComponent -> onDelete -> err\", err)\r\n      })\r\n\r\n      this.mainService.deleteLocationById(this.IdLocation).then(deleteLRes =>{\r\n       console.log(\"ConsultantDetailsComponent -> onDelete -> deleteLRes\", deleteLRes)\r\n      }).catch(error =>{\r\n        console.log(\"ConsultantDetailsComponent -> onDelete -> error\", error)\r\n      })\r\n\r\n      this.mainService.deleteTimeById(this.IdTime).then(deleteTRes =>{\r\n        console.log(\"ConsultantDetailsComponent -> onDelete -> deleteTRes\", deleteTRes)\r\n       }).catch(err =>{\r\n         console.log(\"ConsultantDetailsComponent -> onDelete -> err\", err)\r\n       })\r\n\r\n       this.ngOnInit();\r\n       this.getDocClinic(this.DoctorId)\r\n\r\n    }).catch(error =>{\r\n      console.log(\"ConsultantDetailsComponent -> onDelete -> error\", error)\r\n    })\r\n  }\r\n\r\n  SaveSlots(){\r\n    const data123 ={\r\n      doctorId: this.profile._id,\r\n      clinicId: this.ClinicId ,\r\n      locationId: this.locationId,\r\n      timing: [\r\n          {\r\n        day: \"monday\" ,\r\n        morningSlot: {\r\n          startTime : this.memberForm.controls['MorStart0'].value,\r\n          endTime : this.memberForm.controls['MorEnd0'].value\r\n        },\r\n        afternoonSlot: {\r\n          startTime: this.memberForm.controls['AftStart0'].value,\r\n          endTime: this.memberForm.controls['AftEnd0'].value\r\n        },\r\n        eveningSlot: {\r\n          startTime: this.memberForm.controls['EveStart0'].value,\r\n          endTime: this.memberForm.controls['EveEnd0'].value,\r\n        },\r\n        nightSlot: {\r\n          startTime: this.memberForm.controls['NigStart0'].value,\r\n          endTime: this.memberForm.controls['NigEnd0'].value,\r\n        }\r\n       },\r\n      {\r\n        day: \"tuesday\" ,\r\n        morningSlot: {\r\n          startTime : this.memberForm.controls['MorStart1'].value,\r\n          endTime : this.memberForm.controls['MorEnd1'].value\r\n        },\r\n        afternoonSlot: {\r\n          startTime: this.memberForm.controls['AftStart1'].value,\r\n          endTime: this.memberForm.controls['AftEnd1'].value\r\n        },\r\n        eveningSlot: {\r\n          startTime: this.memberForm.controls['EveStart1'].value,\r\n          endTime: this.memberForm.controls['EveEnd1'].value,\r\n        },\r\n        nightSlot: {\r\n          startTime: this.memberForm.controls['NigStart1'].value,\r\n          endTime: this.memberForm.controls['NigEnd1'].value,\r\n        }\r\n      },\r\n      {\r\n      day: \"wednesday\" ,\r\n        morningSlot: {\r\n          startTime : this.memberForm.controls['MorStart2'].value,\r\n          endTime : this.memberForm.controls['MorEnd2'].value\r\n        },\r\n        afternoonSlot: {\r\n          startTime: this.memberForm.controls['AftStart2'].value,\r\n          endTime: this.memberForm.controls['AftEnd2'].value\r\n        },\r\n        eveningSlot: {\r\n          startTime: this.memberForm.controls['EveStart2'].value,\r\n          endTime: this.memberForm.controls['EveEnd2'].value,\r\n        },\r\n        nightSlot: {\r\n          startTime: this.memberForm.controls['NigStart2'].value,\r\n          endTime: this.memberForm.controls['NigEnd2'].value,\r\n        }\r\n      },\r\n      {\r\n        day: \"thursday\" ,\r\n        morningSlot: {\r\n          startTime : this.memberForm.controls['MorStart3'].value,\r\n          endTime : this.memberForm.controls['MorEnd3'].value\r\n        },\r\n        afternoonSlot: {\r\n          startTime: this.memberForm.controls['AftStart3'].value,\r\n          endTime: this.memberForm.controls['AftEnd3'].value\r\n        },\r\n        eveningSlot: {\r\n          startTime: this.memberForm.controls['EveStart3'].value,\r\n          endTime: this.memberForm.controls['EveEnd3'].value,\r\n        },\r\n        nightSlot: {\r\n          startTime: this.memberForm.controls['NigStart3'].value,\r\n          endTime: this.memberForm.controls['NigEnd3'].value,\r\n        }\r\n      },\r\n      {\r\n        day: \"friday\" ,\r\n        morningSlot: {\r\n          startTime : this.memberForm.controls['MorStart4'].value,\r\n          endTime : this.memberForm.controls['MorEnd4'].value\r\n        },\r\n        afternoonSlot: {\r\n          startTime: this.memberForm.controls['AftStart4'].value,\r\n          endTime: this.memberForm.controls['AftEnd4'].value\r\n        },\r\n        eveningSlot: {\r\n          startTime: this.memberForm.controls['EveStart4'].value,\r\n          endTime: this.memberForm.controls['EveEnd4'].value,\r\n        },\r\n        nightSlot: {\r\n          startTime: this.memberForm.controls['NigStart4'].value,\r\n          endTime: this.memberForm.controls['NigEnd4'].value,\r\n        }\r\n        },\r\n       {\r\n         day: \"saturday\" ,\r\n         morningSlot: {\r\n          startTime : this.memberForm.controls['MorStart5'].value,\r\n          endTime : this.memberForm.controls['MorEnd5'].value\r\n        },\r\n        afternoonSlot: {\r\n          startTime: this.memberForm.controls['AftStart5'].value,\r\n          endTime: this.memberForm.controls['AftEnd5'].value\r\n        },\r\n        eveningSlot: {\r\n          startTime: this.memberForm.controls['EveStart5'].value,\r\n          endTime: this.memberForm.controls['EveEnd5'].value,\r\n        },\r\n        nightSlot: {\r\n          startTime: this.memberForm.controls['NigStart5'].value,\r\n          endTime: this.memberForm.controls['NigEnd5'].value,\r\n        }\r\n        },\r\n        {\r\n           day: \"sunday\" ,\r\n           morningSlot: {\r\n            startTime : this.memberForm.controls['MorStart6'].value,\r\n            endTime : this.memberForm.controls['MorEnd6'].value\r\n          },\r\n          afternoonSlot: {\r\n            startTime: this.memberForm.controls['AftStart6'].value,\r\n            endTime: this.memberForm.controls['AftEnd6'].value\r\n          },\r\n          eveningSlot: {\r\n            startTime: this.memberForm.controls['EveStart6'].value,\r\n            endTime: this.memberForm.controls['EveEnd6'].value,\r\n          },\r\n          nightSlot: {\r\n            startTime: this.memberForm.controls['NigStart6'].value,\r\n            endTime: this.memberForm.controls['NigEnd6'].value,\r\n          }\r\n          },\r\n      ]\r\n    }\r\n    console.log(\"ConsultantDetailsComponent -> SaveSlots -> data123\", data123)\r\n    this.mainService.addTime(data123).then(slotData =>{\r\n      console.log(\"ConsultantDetailsComponent -> SaveSlots -> slotData\", slotData)\r\n      this.timeId = slotData.data._id\r\n    }).catch(error =>{\r\n      console.log(\"ConsultantDetailsComponent -> SaveSlots -> error\", error)\r\n    })\r\n  }\r\n\r\n  onSave(stepper: MatStepper): void {  \r\n      if(this.profile.typeOfEstablishment === \"OwnEstablishment\"){\r\n        const data ={\r\n          name: this.memberForm.controls.clinicName.value\r\n        }\r\n        console.log(\"ConsultantDetailsComponent -> onSave -> data\", data)\r\n\r\n        this.mainService.addclinic(data).then(ClinicData =>{\r\n          console.log(\"file: consultant-details.component.ts ~ line 156 ~ ConsultantDetailsComponent ~ this.mainService.addclinic ~ ClinicData\", ClinicData)\r\n          this.ClinicId = ClinicData.data._id\r\n          const data1 ={\r\n            clinicId: ClinicData.data._id,\r\n            location: {\r\n              address: this.memberForm.controls.address.value,\r\n              landmark: this.memberForm.controls.landmark.value,\r\n              country: this.countryId,\r\n              state: this.stateId,\r\n              city: this.cityId,\r\n              lat: this.lat,\r\n              lng: this.lang \r\n            }\r\n          }\r\n          console.log(\"ConsultantDetailsComponent -> onSave -> data1\", data1)\r\n    \r\n          this.mainService.addlocation(data1).then(locData =>{\r\n            console.log(\"file: consultant-details.component.ts ~ line 175 ~ ConsultantDetailsComponent ~ this.mainService.addlocation ~ locData\", locData)\r\n            this.locationId = locData.data._id\r\n            this.SaveSlots()\r\n          }).catch(error =>{\r\n            console.log(\"file: consultant-details.component.ts ~ line 182 ~ ConsultantDetailsComponent ~ this.mainService.addlocation ~ error\", error)\r\n          })\r\n        \r\n        }).catch(err =>{\r\n          console.log(\"file: consultant-details.component.ts ~ line 163 ~ ConsultantDetailsComponent ~ this.mainService.addclinic ~ err\", err)\r\n        })\r\n      }else{\r\n        if(this.memberForm.controls.establishmentHour.value === \"sameAsEstablishmentHour\"){\r\n          const memData ={\r\n            clinicId: this.clinicId,\r\n            locationId: this.locClinicId,\r\n            timingId: this.timeClinicId\r\n          }\r\n          console.log(\"ConsultantDetailsComponent -> onSave -> memData\", memData)\r\n          this.mainService.addTimingVisit(memData).then(memDataTime =>{\r\n            console.log(\"ConsultantDetailsComponent -> onSave -> memDataTime\", memDataTime)\r\n            this.showToast('success', 'Profile', 'Profile updated successfully');\r\n          })\r\n        }else{\r\n          const memData1 ={\r\n            clinicId: this.clinicId,\r\n            locationId: this.locClinicId,\r\n          }\r\n\r\n          console.log(\"ConsultantDetailsComponent -> onSave -> memData1\", memData1)\r\n            this.mainService.addTimingVisit(memData1).then(memDataTime =>{\r\n            console.log(\"ConsultantDetailsComponent -> onSave -> memDataTime\", memDataTime)\r\n            this.showToast('success', 'Profile', 'Profile updated successfully');\r\n          })\r\n        }\r\n        \r\n      }\r\n       \r\n     \r\n\r\n      if(this.memberForm.controls.establishmentHour.value === \"sameAsEstablishmentHour\"){\r\n        this.mainService.updateUserprofile(this.memberForm.value).then(resData => {\r\n        console.log(\"ConsultantDetailsComponent -> onSave -> resData\", resData)\r\n          if(resData.status == 'SUCCESS'){\r\n            this.showToast('success', 'Profile', 'Profile updated successfully');\r\n            this.router.navigate(['/Doctor/Profile']);\r\n          }else{\r\n            this.showToast('Faild', 'Profile', 'Something Went Wrong');\r\n          }\r\n        }).catch(error => {\r\n          console.log(\"EditProfileComponent -> onSave -> error\", error)\r\n        })\r\n\r\n      }else{\r\n        this.mainService.updateUserprofile(this.memberForm.value).then(resData => {\r\n          if(resData.status == 'SUCCESS'){\r\n            this.showToast('success', 'Profile', 'Profile updated successfully');\r\n          stepper.next();\r\n          }else{\r\n            this.showToast('Faild', 'Profile', 'Something Went Wrong');\r\n          }\r\n        }).catch(error => {\r\n          console.log(\"EditProfileComponent -> onSave -> error\", error)\r\n        })\r\n      }\r\n\r\n\r\n\r\n  }\r\n\r\n  visiteClinic(id){\r\n    console.log(\"ConsultantDetailsComponent -> visiteClinic -> event\", event)\r\n    this.mainService.getDOCClinic(id).then(DocClinic =>{\r\n    console.log(\"ConsultantDetailsComponent -> visiteClinic -> DocClinic\", DocClinic)\r\n      this.DOCClicnicId = DocClinic.data[0]?.clinicId?._id\r\n      this.locClinicId = DocClinic.data[0]?.locationId?._id\r\n      this.timeClinicId = DocClinic.data[0]?._id\r\n    }).catch(err =>{\r\n      console.log(\"ConsultantDetailsComponent -> visiteClinic -> err\", err)\r\n    })\r\n  }\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n  // getTime() {\r\n  //   this.TimeSloat = [];\r\n    \r\n  //   for (var i = 0; i < 24; i++) {\r\n  //     var hour = i < 10 ? '0' + i : i;\r\n  //     // if (i <= 13) {\r\n  //       this.TimeSloat.push({ label: hour + ':00', value: hour + ':00' });\r\n  //       this.TimeSloat.push({ label: hour + ':30', value: hour + ':30' });\r\n  //       // } else {\r\n  //         //   this.TimeSloat2.push({ label: hour + ':00', value: hour + ':00' });\r\n  //         //   this.TimeSloat2.push({ label: hour + ':30', value: hour + ':30' });\r\n  //         // }\r\n  //       }\r\n        \r\n  //       console.log(\"ConsultantDetailsComponent -> getTime -> this.TimeSloat\", this.TimeSloat)\r\n  // }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  MorningSlot: string;\r\n  AfternoonSlots: string;\r\n  Day: any;\r\n  EveningSlots:string;\r\n  NightSlots:string;\r\n}\r\n\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {Day: 'MON', MorningSlot: 'Hydrogen', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'TUE', MorningSlot: 'Helium', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'WED', MorningSlot: 'Lithium', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'THU', MorningSlot: 'Beryllium', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'FRI', MorningSlot: 'Boron', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'SAT', MorningSlot: 'Carbon', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'SUN', MorningSlot: 'Nitrogen', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  \r\n];\r\n","<section>\r\n    <div class=\"container\">\r\n        <div class=\"row\" style=\"margin-top: 20px;\">\r\n                <div class=\"\" >\r\n                    <form [formGroup]=\"memberForm\">\r\n                        <!-- <div class=\"\" >\r\n                            <ng-container formArrayName=\"clinicDetails\"  *ngFor=\"let quantity of ClinicDetails().controls; let j=index\"  >\r\n                            <div  [formGroupName]=\"j\" style=\"border: 2px solid ; border-radius: 5px;padding: 20px;\">\r\n                            \r\n                                <div class=\"col-12\" style=\"display: flex;justify-content: flex-end;padding: 0px;\">\r\n                                    <button type=\"button\" class=\"btn\" style=\"color: red;cursor: pointer;\" (click)=\" deleteClinicDetails(j)\" *ngIf=\"j > 0\"><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-dash-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                                        <path fill-rule=\"evenodd\" d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"/>\r\n                                    </svg></button>\r\n                                </div>\r\n\r\n                            <div class=\"form-group\">\r\n                                <label for=\"RegistrationNumber\">Clinic Name</label>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12\">\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"clinicName\"\r\n                                            placeholder=\"eg. Ram Clinic\" >\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div  style=\"margin: 0px 0px 25px 0px;padding: 0px;\"  >\r\n                            <label for=\"RegistrationNumber\">Clinic Name</label>\r\n                            <div class=\"ng-autocomplete\" style=\"width: 100%;\">\r\n                                <ng-autocomplete \r\n                                [data]=\"data\"\r\n                                [searchKeyword]=\"keyword\"\r\n                                (selected)='selectEvent($event)'\r\n                                (inputChanged)='onChangeSearch($event)'\r\n                                (inputFocused)='onFocused($event)'\r\n                                [itemTemplate]=\"itemTemplate\"\r\n                                [notFoundTemplate]=\"notFoundTemplate\"\r\n                                formControlName=\"clinicName\">  \r\n                                </ng-autocomplete>\r\n                                \r\n                                <ng-template #itemTemplate let-item>\r\n                                <a [innerHTML]=\"item.name\"></a>\r\n                                </ng-template>\r\n                                \r\n                                <ng-template #notFoundTemplate let-notFound>\r\n                                <div [innerHTML]=\"notFound\"></div>\r\n                                </ng-template>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div class=\"form-group\">\r\n                                <label for=\"RegistrationNumber\">Clinic Address</label>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12\">\r\n                                        <textarea type=\"text\" class=\"form-control\" formControlName=\"clinicAddress\">\r\n                                    </textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div  style=\"margin: 0px 0px 25px 0px;padding: 0px;\" >\r\n                                <label for=\"RegistrationNumber\">Location</label>\r\n                                <div class=\"ng-autocomplete\" style=\"width: 100%;\">\r\n                                    <ng-autocomplete \r\n                                    [data]=\"data\"\r\n                                    [searchKeyword]=\"keyword1\"\r\n                                    (selected)='selectEvent1($event)'\r\n                                    (inputChanged)='onChangeSearch1($event)'\r\n                                    (inputFocused)='onFocused1($event)'\r\n                                    [itemTemplate]=\"itemTemplate\"\r\n                                    [notFoundTemplate]=\"notFoundTemplate\"\r\n                                    formControlName=\"clinicAddress\"\r\n                                    >  \r\n                                    \r\n                                    </ng-autocomplete>\r\n                                    \r\n                                    <ng-template #itemTemplate let-item>\r\n                                    <a [innerHTML]=\"item.name\"></a>\r\n                                    </ng-template>\r\n                                    \r\n                                    <ng-template #notFoundTemplate let-notFound>\r\n                                    <div [innerHTML]=\"notFound\"></div>\r\n                                    </ng-template>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                \r\n\r\n\r\n\r\n                            <ng-container formArrayName=\"times\">\r\n                                <div *ngFor=\"let quantity of times(j).controls; let k=index\" [formGroupName]=\"k\">\r\n\r\n                                <div style=\"border: 2px solid ; border-radius: 5px;padding: 20px;\"> \r\n                                <div class=\"col-12\" style=\"display: flex;justify-content: flex-end;padding: 0px;\">\r\n                                    <button type=\"button\" class=\"btn\" style=\"color: red;cursor: pointer;\" (click)=\"deleteTime(j,k)\" *ngIf=\"k > 0\"><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-dash-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                                        <path fill-rule=\"evenodd\" d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"/>\r\n                                    </svg></button>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"RegistrationNumber\">Select Day</label>\r\n                                    <select class=\"form-control\" formControlName=\"timeday\">\r\n                                        <option value=\"Monday\"> Monday </option>\r\n                                        <option value=\"Tuesday\"> Tuesday </option>\r\n                                        <option value=\"Wednesday\"> Wednesday </option>\r\n                                        <option value=\"Thursday\"> Thursday </option>\r\n                                        <option value=\"Friday\"> Friday </option>\r\n                                        <option value=\"Saturday\"> Saturday </option>\r\n                                        <option value=\"Sunday\"> Sunday </option>\r\n                                    </select>\r\n                                </div>\r\n                            <div class=\"form-group\" >\r\n                                <label for=\"RegistrationNumber\">Timming</label>\r\n                                <div class=\"row\">\r\n                                <div class=\"form-group col-md-6\" >\r\n                                    <label for=\"startSession\"> Start</label>\r\n                                    <select class=\"form-control\" formControlName=\"session1Start\" >\r\n                                        <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"form-group col-md-6\">\r\n                                    <label for=\"startSession\"> End</label>\r\n                                    <select class=\"form-control\"  formControlName=\"session1End\" >\r\n                                        <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div style=\"display: flex;justify-content: flex-end;\">\r\n                            <button type=\"button\" class=\"btn \" style=\"color: green;cursor: pointer;\" (click)=\"addTime(j)\"><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-plus-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                                <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n                            </svg></button>\r\n                            </div>\r\n\r\n                            </ng-container>\r\n                        </div>\r\n                        </ng-container>\r\n                        <div style=\" display: flex; justify-content: flex-end; \">\r\n                            <button type=\"button\" class=\"btn \" style=\"color: green;cursor: pointer;\" (click)=\"addClinicDetails()\"  >\r\n                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-plus-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                                    <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n                                </svg>\r\n                            </button>\r\n                         </div>\r\n                        </div>  -->\r\n                        <div class=\"\">\r\n                            <div class=\"col-sm-12 col-md-12 col-lg-12\"  *ngIf=\"!hide\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3 col-md-3 col-lg-3\" >\r\n                                        <mat-form-field appearance=\"outline\">\r\n                                            <mat-label>Clinic Name</mat-label>\r\n                                            <input  matInput placeholder=\"Clinic Name\" formControlName=\"clinicName\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3 col-md-3 col-lg-3\">\r\n                                        <mat-form-field appearance=\"outline\" >\r\n                                            <mat-label>Address</mat-label>\r\n                                            <input matInput placeholder=\"Address\" formControlName=\"address\" >\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3 col-md-3 col-lg-3\">\r\n                                        <mat-form-field appearance=\"outline\"  >\r\n                                            <mat-label>Landmark</mat-label>\r\n                                            <input matInput placeholder=\"Landmark\" formControlName=\"landmark\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3 col-md-3 col-lg-3\">\r\n                                        <mat-form-field appearance=\"outline\"  >\r\n                                            <mat-label>Country</mat-label>\r\n                                            <mat-select (selectionChange)=\"CountryId($event)\" formControlName=\"country\" >\r\n                                                <mat-option *ngFor=\"let country of countryList\" [value]=\"country.id\">{{country?.name}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3 col-md-3 col-lg-3\">\r\n                                        <mat-form-field appearance=\"outline\"  >\r\n                                            <mat-label>State</mat-label>\r\n                                            <mat-select (selectionChange)=\"State($event)\" formControlName=\"state\">\r\n                                                <mat-option *ngFor=\"let state of stateList\" [value]=\"state.id\">{{state.name}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3 col-md-3 col-lg-3\">\r\n                                        <mat-form-field appearance=\"outline\"  >\r\n                                            <mat-label>City</mat-label>\r\n                                            <mat-select (selectionChange)=\"City($event)\" formControlName=\"city\">\r\n                                                <mat-option *ngFor=\"let city of cityList\" [value]=\"city.id\">{{city?.name}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\" style=\"margin-bottom: 1rem;\" >\r\n                                    <div class=\"col-sm-12\" >\r\n                                        <table mat-table [dataSource]=\"dataSource1?.filteredData\" style=\"width: 100%;\">\r\n                                            <ng-container *ngFor=\"let disCol of displayedColumns; let colIndex = index\" matColumnDef=\"{{disCol}}\">\r\n                                                <mat-header-cell *matHeaderCellDef>{{disCol}}</mat-header-cell>\r\n                                                <mat-cell *matCellDef=\"let element ; let i =index\"> \r\n                                                    <div *ngIf= \"disCol != 'Action'\" >{{element[disCol]}}</div>\r\n                                                    <div *ngIf=\"disCol =='Sr_No'\">\r\n                                                        {{ i+1 }}\r\n                                                    </div>\r\n                                                    <div *ngIf=\"disCol =='Action'\">\r\n                                                        <span class=\"material-icons\" style=\"cursor: pointer;\" (click)=\"openEdit(element.Action)\" >\r\n                                                            create\r\n                                                        </span>\r\n                                                        <span class=\"material-icons\"  style=\"cursor: pointer;\"  (click)=\"onDelete(element.Action)\">\r\n                                                            delete\r\n                                                            </span>\r\n                                                    </div>\r\n                                                </mat-cell>\r\n                                            </ng-container>\r\n                                \r\n                                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                                            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n                                        </table>\r\n                                        <mat-paginator\r\n                                        [pageSizeOptions]=\"[5, 10, 25]\"\r\n                                    ></mat-paginator>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\" style=\"margin-bottom: 1rem;\">\r\n                                    <div class=\"\">\r\n                                        <mat-accordion>\r\n                                            <mat-expansion-panel>\r\n                                                <mat-expansion-panel-header>\r\n                                                    <mat-panel-title>\r\n                                                        Add Clinic Time\r\n                                                    </mat-panel-title>\r\n                                                </mat-expansion-panel-header>\r\n                                                <table mat-table [dataSource]=\"dataSource\" cdkDropList cdkDropListOrientation=\"horizontal\"\r\n                                                        (cdkDropListDropped)=\"drop($event)\">\r\n\r\n                                                        <ng-container matColumnDef=\"Day\">\r\n                                                            <th mat-header-cell cdkDrag *matHeaderCellDef> Day </th>\r\n                                                            <td mat-cell *matCellDef=\"let element\" style=\"width:8%\"> {{element.Day}} </td>\r\n                                                        </ng-container>\r\n\r\n                                                        <ng-container matColumnDef=\"MorningSlot\" align=\"center\">\r\n                                                            <th mat-header-cell cdkDrag *matHeaderCellDef style=\"text-align: center;background-color: #ececec;\"> Morning Slot </th>\r\n                                                            <!-- <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td> -->\r\n                                                            <td mat-cell *matCellDef=\"let element;let i=index\" style=\"width:22.5%;background-color: #ececec;\"> \r\n                                                                <div class=\"col-12\">\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-6\">\r\n                                                                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                                <mat-label>Sessions Start</mat-label>\r\n                                                                                <mat-select required formControlName=\"MorStart{{i}}\">\r\n                                                                                    <mat-option> -- None -- </mat-option>\r\n                                                                                    <mat-option value=\"06:00\">06:00</mat-option>\r\n                                                                                    <mat-option value=\"06:30\">06:30</mat-option>\r\n                                                                                    <mat-option value=\"07:00\">07:00</mat-option>\r\n                                                                                    <mat-option value=\"07:30\">07:30</mat-option>\r\n                                                                                    <mat-option value=\"08:00\">08:00</mat-option>\r\n                                                                                    <mat-option value=\"08:30\">08:30</mat-option>\r\n                                                                                    <mat-option value=\"09:00\">09:00</mat-option>\r\n                                                                                    <mat-option value=\"09:30\">09:30</mat-option>\r\n                                                                                    <mat-option value=\"10:00\">10:00</mat-option>\r\n                                                                                    <mat-option value=\"10:30\">10:30</mat-option>\r\n                                                                                    <mat-option value=\"11:00\">11:00</mat-option>\r\n                                                                                    <mat-option value=\"11:30\">11:30</mat-option>\r\n                                                                                    <mat-option value=\"11:59\">11:59</mat-option>\r\n                                                                                </mat-select>\r\n                                                                            </mat-form-field>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-6\">\r\n                                                                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                                <mat-label>Sessions Start</mat-label>\r\n                                                                                <mat-select required formControlName=\"MorEnd{{i}}\">\r\n                                                                                    <mat-option> -- None -- </mat-option>\r\n                                                                                    <mat-option value=\"06:00\">06:00</mat-option>\r\n                                                                                    <mat-option value=\"06:30\">06:30</mat-option>\r\n                                                                                    <mat-option value=\"07:00\">07:00</mat-option>\r\n                                                                                    <mat-option value=\"07:30\">07:30</mat-option>\r\n                                                                                    <mat-option value=\"08:00\">08:00</mat-option>\r\n                                                                                    <mat-option value=\"08:30\">08:30</mat-option>\r\n                                                                                    <mat-option value=\"09:00\">09:00</mat-option>\r\n                                                                                    <mat-option value=\"09:30\">09:30</mat-option>\r\n                                                                                    <mat-option value=\"10:00\">10:00</mat-option>\r\n                                                                                    <mat-option value=\"10:30\">10:30</mat-option>\r\n                                                                                    <mat-option value=\"11:00\">11:00</mat-option>\r\n                                                                                    <mat-option value=\"11:30\">11:30</mat-option>\r\n                                                                                    <mat-option value=\"11:59\">11:59</mat-option>\r\n                                                                                </mat-select>\r\n                                                                            </mat-form-field>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        </ng-container>\r\n\r\n                                                        <ng-container matColumnDef=\"AfternoonSlots\">\r\n                                                            <th mat-header-cell *matHeaderCellDef style=\"text-align: center;\"> Afternoon Slots </th>\r\n                                                            <td mat-cell *matCellDef=\"let element; let i=index\" style=\"width:22.5%\">  \r\n                                                                <div class=\"col-12\">\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-6\">\r\n                                                                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                                <mat-label>Sessions Start</mat-label>\r\n                                                                                <mat-select required formControlName=\"AftStart{{i}}\">\r\n                                                                                    <mat-option> -- None -- </mat-option>\r\n                                                                                    <mat-option value=\"12:00\">12:00</mat-option>\r\n                                                                                    <mat-option value=\"12:30\">12:30</mat-option>\r\n                                                                                    <mat-option value=\"13:00\">13:00</mat-option>\r\n                                                                                    <mat-option value=\"13:30\">13:30</mat-option>\r\n                                                                                    <mat-option value=\"14:00\">14:00</mat-option>\r\n                                                                                    <mat-option value=\"14:30\">14:30</mat-option>\r\n                                                                                    <mat-option value=\"15:00\">15:00</mat-option>\r\n                                                                                    <mat-option value=\"15:30\">15:30</mat-option>\r\n                                                                                    <mat-option value=\"16:00\">16:00</mat-option>\r\n                                                                                    <mat-option value=\"16:30\">16:30</mat-option>\r\n                                                                                    <mat-option value=\"17:00\">17:00</mat-option>\r\n                                                                                    <mat-option value=\"17:30\">17:30</mat-option>\r\n                                                                                    <mat-option value=\"17:59\">17:59</mat-option>\r\n                                                                                </mat-select>\r\n                                                                            </mat-form-field>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-6\">\r\n                                                                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                                <mat-label>Sessions End</mat-label>\r\n                                                                                <mat-select required formControlName=\"AftEnd{{i}}\">\r\n                                                                                    <mat-option> -- None -- </mat-option>\r\n                                                                                    <mat-option value=\"12:00\">12:00</mat-option>\r\n                                                                                    <mat-option value=\"12:30\">12:30</mat-option>\r\n                                                                                    <mat-option value=\"13:00\">13:00</mat-option>\r\n                                                                                    <mat-option value=\"13:30\">13:30</mat-option>\r\n                                                                                    <mat-option value=\"14:00\">14:00</mat-option>\r\n                                                                                    <mat-option value=\"14:30\">14:30</mat-option>\r\n                                                                                    <mat-option value=\"15:00\">15:00</mat-option>\r\n                                                                                    <mat-option value=\"15:30\">15:30</mat-option>\r\n                                                                                    <mat-option value=\"16:00\">16:00</mat-option>\r\n                                                                                    <mat-option value=\"16:30\">16:30</mat-option>\r\n                                                                                    <mat-option value=\"17:00\">17:00</mat-option>\r\n                                                                                    <mat-option value=\"17:30\">17:30</mat-option>\r\n                                                                                    <mat-option value=\"17:59\">17:59</mat-option>\r\n                                                                                </mat-select>\r\n                                                                            </mat-form-field>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        </ng-container>\r\n\r\n                                                        <ng-container matColumnDef=\"EveningSlots\">\r\n                                                            <th mat-header-cell *matHeaderCellDef style=\"text-align: center;background-color: #ececec;\"> Evening Slots </th>\r\n                                                            <td mat-cell *matCellDef=\"let element;let i = index\" style=\"width:22.5%;background-color: #ececec;\">  <div class=\"col-12\">\r\n                                                            <div class=\"row\">\r\n                                                                <div class=\"col-6\">\r\n                                                                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                                <mat-label>Sessions Start</mat-label>\r\n                                                                                <mat-select required formControlName=\"EveStart{{i}}\">\r\n                                                                                    <mat-option> -- None -- </mat-option>\r\n                                                                                    <mat-option value=\"18:00\">18:00</mat-option>\r\n                                                                                    <mat-option value=\"18:30\">18:30</mat-option>\r\n                                                                                    <mat-option value=\"19:00\">19:00</mat-option>\r\n                                                                                    <mat-option value=\"19:30\">19:30</mat-option>\r\n                                                                                    <mat-option value=\"20:00\">20:00</mat-option>\r\n                                                                                    <mat-option value=\"20:30\">20:30</mat-option>\r\n                                                                                    <mat-option value=\"21:00\">21:00</mat-option>\r\n                                                                                    <mat-option value=\"21:30\">21:30</mat-option>\r\n                                                                                    <mat-option value=\"22:00\">22:00</mat-option>\r\n                                                                                    <mat-option value=\"22:30\">22:30</mat-option>\r\n                                                                                    <mat-option value=\"23:00\">23:00</mat-option>\r\n                                                                                    <mat-option value=\"23:30\">23:30</mat-option>\r\n                                                                                    <mat-option value=\"23:59\">23:59</mat-option>\r\n                                                                                </mat-select>\r\n                                                                            </mat-form-field>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-6\">\r\n                                                                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                                <mat-label>Sessions End</mat-label>\r\n                                                                                <mat-select required formControlName=\"EveEnd{{i}}\">\r\n                                                                                    <mat-option> -- None -- </mat-option>\r\n                                                                                    <mat-option value=\"18:00\">18:00</mat-option>\r\n                                                                                    <mat-option value=\"18:30\">18:30</mat-option>\r\n                                                                                    <mat-option value=\"19:00\">19:00</mat-option>\r\n                                                                                    <mat-option value=\"19:30\">19:30</mat-option>\r\n                                                                                    <mat-option value=\"20:00\">20:00</mat-option>\r\n                                                                                    <mat-option value=\"20:30\">20:30</mat-option>\r\n                                                                                    <mat-option value=\"21:00\">21:00</mat-option>\r\n                                                                                    <mat-option value=\"21:30\">21:30</mat-option>\r\n                                                                                    <mat-option value=\"22:00\">22:00</mat-option>\r\n                                                                                    <mat-option value=\"22:30\">22:30</mat-option>\r\n                                                                                    <mat-option value=\"23:00\">23:00</mat-option>\r\n                                                                                    <mat-option value=\"23:30\">23:30</mat-option>\r\n                                                                                    <mat-option value=\"23:59\">23:59</mat-option>\r\n                                                                                </mat-select>\r\n                                                                            </mat-form-field>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div> \r\n                                                            </td>\r\n                                                        </ng-container>\r\n\r\n                                                        <ng-container matColumnDef=\"NightSlots\">\r\n                                                            <th mat-header-cell *matHeaderCellDef style=\"text-align: center;\"> Night Slots </th>\r\n                                                            <td mat-cell *matCellDef=\"let element;let i = index\" style=\"width:22.5%\">  <div class=\"col-12\">\r\n                                                                <div class=\"row\">\r\n                                                                    <div class=\"col-6\">\r\n                                                                        <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                            <mat-label>Sessions Start</mat-label>\r\n                                                                            <mat-select required formControlName=\"NigStart{{i}}\">\r\n                                                                                <mat-option> -- None -- </mat-option>\r\n                                                                                <mat-option value=\"00:00\">00:00</mat-option>\r\n                                                                                <mat-option value=\"00:30\">00:30</mat-option>\r\n                                                                                <mat-option value=\"01:00\">01:00</mat-option>\r\n                                                                                <mat-option value=\"01:30\">01:30</mat-option>\r\n                                                                                <mat-option value=\"02:00\">02:00</mat-option>\r\n                                                                                <mat-option value=\"02:30\">02:30</mat-option>\r\n                                                                                <mat-option value=\"03:00\">03:00</mat-option>\r\n                                                                                <mat-option value=\"03:30\">03:30</mat-option>\r\n                                                                                <mat-option value=\"04:00\">04:00</mat-option>\r\n                                                                                <mat-option value=\"04:30\">04:30</mat-option>\r\n                                                                                <mat-option value=\"05:00\">05:00</mat-option>\r\n                                                                                <mat-option value=\"05:30\">05:30</mat-option>\r\n                                                                                <mat-option value=\"05:59\">05:59</mat-option>\r\n                                                                            </mat-select>\r\n                                                                        </mat-form-field>\r\n                                                                    </div>\r\n                                                                        <div class=\"col-6\">\r\n                                                                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                                <mat-label>Sessions End</mat-label>\r\n                                                                                <mat-select required formControlName=\"NigEnd{{i}}\" >\r\n                                                                                    <mat-option> -- None -- </mat-option>\r\n                                                                                    <mat-option value=\"00:00\">00:00</mat-option>\r\n                                                                                    <mat-option value=\"00:30\">00:30</mat-option>\r\n                                                                                    <mat-option value=\"01:00\">01:00</mat-option>\r\n                                                                                    <mat-option value=\"01:30\">01:30</mat-option>\r\n                                                                                    <mat-option value=\"02:00\">02:00</mat-option>\r\n                                                                                    <mat-option value=\"02:30\">02:30</mat-option>\r\n                                                                                    <mat-option value=\"03:00\">03:00</mat-option>\r\n                                                                                    <mat-option value=\"03:30\">03:30</mat-option>\r\n                                                                                    <mat-option value=\"04:00\">04:00</mat-option>\r\n                                                                                    <mat-option value=\"04:30\">04:30</mat-option>\r\n                                                                                    <mat-option value=\"05:00\">05:00</mat-option>\r\n                                                                                    <mat-option value=\"05:30\">05:30</mat-option>\r\n                                                                                    <mat-option value=\"05:59\">05:59</mat-option>\r\n                                                                                </mat-select>\r\n                                                                            </mat-form-field>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div> \r\n                                                            </td>\r\n                                                        </ng-container>\r\n\r\n                                                        <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\r\n                                                        <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\r\n                                                </table>\r\n                                            </mat-expansion-panel>\r\n                                        </mat-accordion>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <mat-form-field appearance=\"fill\" *ngIf=\"hide\" style=\"width: 100%;\" >\r\n                            <mat-label>Clinic Name</mat-label>\r\n                            <mat-select formControlName=\"ClinicName1\">\r\n                            <mat-option>None</mat-option>\r\n                            <mat-option *ngFor=\"let clinic of ClinicName\" [value]=\"clinic?._id\">{{clinic.name}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n\r\n                        <div class=\"form-group \">\r\n                            <label for=\"startSession\"> Fees </label>\r\n                            <input type=\"number\" class=\"form-control\" formControlName=\"fees\"\r\n                            placeholder=\"Enter your consultation charges\" aria-label=\"Username\"\r\n                            aria-describedby=\"basic-addon1\" />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"startSession\">Doctor’s hours</label>\r\n                            <mat-radio-group aria-label=\"Select an option\" formControlName=\"establishmentHour\">\r\n                                <div class=\"form-group-sm border py-2 pl-2\">\r\n                                    <mat-radio-button value=\"sameAsEstablishmentHour\">Same as establishment hours</mat-radio-button>\r\n                                </div>\r\n                                <div class=\"form-group-sm border py-2 pl-2\">\r\n                                    <mat-radio-button value=\"diffrentAsEstablishmentHour\">Different from establishment hours\r\n                                    </mat-radio-button>\r\n                                </div>\r\n                            </mat-radio-group>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <button mat-raised-button matStepperPrevious style=\"left: 16px;\">\r\n                                <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i>\r\n                                Back\r\n                            </button>\r\n                            <button style=\"position: absolute; right: 150px;\" mat-raised-button color=\"warn\" (click)=\"onSave(stepper)\" class=\r\n                            \"themeColorBtn\">\r\n                              Save and continue\r\n                              <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3 col-lg-3 offset-md-1\" style=\"margin-top: 120px;\">\r\n                    <div class=\"\" style=\"border: 1px solid #14aa9b;\">\r\n                        <div class=\"bg p-4 textcol\">\r\n                            <div>\r\n                                <i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i>\r\n                            </div>\r\n                            <p class=\"stext font-weight-bold\">\r\n                                Establishments with more doctors get more visibility on whealthylife.in\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n\r\n\r\n\r\n<!-- <section>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n            <form [formGroup]=\"empForm\" >\r\n                <div *ngFor=\"let employee of employees().controls; let empIndex=index\">\r\n                    <div class=\"\" [formGroupName]=\"empIndex\">\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"RegistrationNumber\">Clinic Name</label>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"clinicName\"\r\n                                         placeholder=\"eg. Ram Clinic\" >\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button (click)=\"removeEmployee(empIndex)\">Remove</button>\r\n\r\n                        <div formArrayName=\"skills\">\r\n                            <div *ngFor=\"let skill of employeeSkills(empIndex).controls; let skillIndex=index\">\r\n                                <div [formGroupName]=\"skillIndex\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"RegistrationNumber\">Timming</label>\r\n                                        <div class=\"row\">\r\n                                        <div class=\"form-group col-md-6\">\r\n                                            <label for=\"startSession\"> Start</label>\r\n                                            <select class=\"form-control\"    formControlName=\"session1Start\">\r\n                                                <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div class=\"form-group col-md-6\">\r\n                                            <label for=\"startSession\"> End</label>\r\n                                            <select class=\"form-control\"  formControlName=\"session1End\">\r\n                                                <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                                <button (click)=\"removeEmployeeSkill(empIndex,skillIndex)\">Remove</button>\r\n                            </div>\r\n                            <button type=\"button\" (click)=\"addEmployeeSkill(empIndex)\">Add Skill</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <p>\r\n            <button type=\"button\" (click)=\"addEmployee()\">Add Employee</button>\r\n          </p>\r\n        <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n\r\n        </div>\r\n    </div>\r\n</section> -->\r\n \r\n<!-- <section>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n            <form [formGroup]=\"empForm\" >\r\n                <div formArrayName=\"addresssOne\" *ngFor=\"let quantity of addresssOne().controls; let j=index\" >\r\n                    <div class=\"\" [formGroupName]=\"j\">\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"RegistrationNumber\">Clinic Name</label>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"clinicName\"\r\n                                         placeholder=\"eg. Ram Clinic\" >\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n              \r\n\r\n                        <div formArrayName=\"Plots\">\r\n                            <div *ngFor=\"let quantity of Plots(j).controls; let p = index\" [formGroupName]=\"p\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"RegistrationNumber\">Timming</label>\r\n                                        <div class=\"row\">\r\n                                        <div class=\"form-group col-md-6\">\r\n                                            <label for=\"startSession\"> Start</label>\r\n                                            <select class=\"form-control\"    formControlName=\"session1Start\">\r\n                                                <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div class=\"form-group col-md-6\">\r\n                                            <label for=\"startSession\"> End</label>\r\n                                            <select class=\"form-control\"  formControlName=\"session1End\">\r\n                                                <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span class=\"material-icons\" style=\"color: red;cursor: pointer;\" (click)=\"deletePlots(j,p)\" *ngIf=\"p > 0\" >\r\n                                            remove_circle\r\n                                        </span>\r\n                                        <span class=\"material-icons\" style=\"color: green;cursor: pointer;\" (click)=\"addPlots(j)\"  *ngIf=\"p == 0\" >\r\n                                            add_circle\r\n                                        </span>\r\n                                    </div>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <span class=\"material-icons \" style=\"color: red;cursor: pointer;\" *ngIf=\"j > 0\" (click)=\"deleteAddresssOne(j)\">\r\n                                remove_circle_outline\r\n                            </span>\r\n                            <span class=\"material-icons \" style=\"color: green;cursor: pointer;\" *ngIf=\"j == 0\" (click)=\"addAddresssOne()\"> \r\n                                add_circle_outline\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <p>\r\n            <button type=\"button\" (click)=\"addEmployee()\">Add Employee</button>\r\n          </p>\r\n        <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n\r\n        </div>\r\n    </div>\r\n</section> -->\r\n\r\n<!-- <section class=\"bg-white p-sm-3\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 col-lg-3 offset-md-2\" [formGroup]=\"empForm\">\r\n\r\n           \r\n            <div class=\"form-group\">\r\n                <label for=\"RegistrationNumber\">Clinic Name</label>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"clinicName\"\r\n                             placeholder=\"eg. Ram Clinic\" >\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n                <label for=\"RegistrationNumber\">Timming</label>\r\n                <div class=\"row\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"startSession\"> Start</label>\r\n                    <select class=\"form-control\"    formControlName=\"session1Start\">\r\n                        <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"startSession\"> End</label>\r\n                    <select class=\"form-control\"  formControlName=\"session1End\">\r\n                        <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n\r\n            <label for=\"RegistrationNumber\">Consultation Fees</label>\r\n            <div class=\"input-group sm mb-2\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text bg-white\" id=\"basic-addon1\">Fees</span>\r\n                </div>\r\n                <input type=\"number\" class=\"form-control\" formControlName=\"fees\"\r\n                    placeholder=\"Enter your consultation charges\" aria-label=\"Username\"\r\n                    aria-describedby=\"basic-addon1\" />\r\n            </div>\r\n            \r\n\r\n\r\n            <p>Doctor’s hours</p>\r\n            <div class=\"form-group\">\r\n                <mat-radio-group aria-label=\"Select an option\" formControlName=\"establishmentHour\">\r\n                    <div class=\"form-group-sm border py-2 pl-2\">\r\n                        <mat-radio-button value=\"sameAsEstablishmentHour\">Same as establishment hours</mat-radio-button>\r\n                    </div>\r\n                    <div class=\"form-group-sm border py-2 pl-2\">\r\n                        <mat-radio-button value=\"diffrentAsEstablishmentHour\">Different from establishment hours\r\n                        </mat-radio-button>\r\n                    </div>\r\n                </mat-radio-group>\r\n            </div>\r\n            <p>Note: you can add more doctors later.</p>\r\n            <hr class=\"mt-5 mb-5\" />\r\n            <div class=\"row\">\r\n                <button mat-raised-button matStepperPrevious>\r\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">chevron_left</mat-icon>\r\n                    Back\r\n                </button>\r\n                <button style=\"position: absolute; right: 0;\" mat-raised-button color=\"warn\" (click)=\"onSave()\">\r\n                    Save and contnue\r\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">chevron_right</mat-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n            <div class=\"d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n                style=\"border: 1px solid #14aa9b;\">\r\n                <div class=\"bg p-4 textcol\">\r\n                    <div>\r\n                        <i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                    <p class=\"stext font-weight-bold\">\r\n                        Establishments with more doctors get more visibility on whealthylife.in\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section> -->\r\n","import { Component, EventEmitter, forwardRef, HostBinding, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MainService } from 'src/app/services/main.service';\r\n\r\n@Component({\r\n  selector: 'app-dynamic-autocomplete',\r\n  templateUrl: './dynamic-autocomplete.component.html',\r\n  styleUrls: ['./dynamic-autocomplete.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => DynamicAutocompleteComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class DynamicAutocompleteComponent implements OnInit {\r\n\r\n  myControl = new FormControl();\r\n  selectedValue;\r\n  filteredOptions: Observable<string[]>;\r\n  question = 'Would you like to add ';\r\n  @Input() options: string[];\r\n  @Output() added = new EventEmitter();\r\n\r\n  constructor(public mainService: MainService,) {\r\n\r\n  }\r\n\r\n  // Function to call when the option changes.\r\n  onChange = (option: string) => {\r\n    console.log(\"DynamicAutocompleteComponent -> onChange -> option\", option)\r\n\r\n  };\r\n\r\n  // Function to call when the input is touched (when the autocomplete is clicked).\r\n  onTouched = () => { };\r\n\r\n  get value() {\r\n    return this.selectedValue;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n  }\r\n\r\n  getList() {\r\n    this.mainService.getDegree().then((resData) => {\r\n      console.log(\"EducationComponent -> resData\", resData.data);\r\n      this.filteredOptions = this.myControl.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(option => option ? this.filter(option) : resData.data.slice())\r\n        );\r\n    }).catch((error) => {\r\n      console.log(\"EducationComponent -> error\", error);\r\n    })\r\n  }\r\n\r\n  optionSelected(option) {\r\n    if (option.value.indexOf(this.question) === 0) {\r\n      let newOption = option.value.substring(this.question.length).split('?')[0];\r\n      this.options.push(newOption);\r\n      this.added.emit(newOption);\r\n      this.myControl.setValue(newOption);\r\n      this.writeValue(newOption);\r\n    } else {\r\n      this.myControl.setValue(option.value);\r\n      this.writeValue(option.value);\r\n    }\r\n  }\r\n\r\n  enter() {\r\n    const controlValue = this.myControl.value;\r\n    console.log(\"DynamicAutocompleteComponent -> enter -> controlValue\", controlValue);\r\n    if (!this.options.some((entry: any) => entry.shortName === controlValue)) {\r\n      this.added.emit(controlValue);\r\n      const index = this.options.push(controlValue);\r\n      setTimeout(\r\n        () => {\r\n          this.myControl.setValue(controlValue);\r\n          this.writeValue(controlValue);\r\n        }\r\n      );\r\n    } else {\r\n      // this.writeValue(controlValue);\r\n      this.getList();\r\n    }\r\n  }\r\n\r\n  // Allows Angular to update the model (option).\r\n  // Update the model and changes needed for the view here.\r\n  writeValue(option: string): void {\r\n    this.selectedValue = option;\r\n    this.onChange(option);\r\n  }\r\n\r\n  // Allows Angular to register a function to call when the model (rating) changes.\r\n  // Save the function as a property to call later here.\r\n  registerOnChange(fn: (option: string) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  // Allows Angular to register a function to call when the input has been touched.\r\n  // Save the function as a property to call later here.\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  private filter(value: string): string[] {\r\n    let results;\r\n    if (value) {\r\n      results = this.options\r\n        .filter(option => option.toLowerCase().indexOf(value.toLowerCase()) === 0);\r\n      if (results.length < 1) {\r\n        results = [this.question + value + '?'];\r\n      }\r\n    } else {\r\n      results = this.options.slice();\r\n    }\r\n    return results;\r\n  }\r\n}\r\n","<input type=\"text\" style=\"width: 100%;\" class=\"form-control\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\" (keyup.enter)=\"enter()\">\r\n<mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"optionSelected($event.option)\">\r\n    <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.shortName\">\r\n        {{option.shortName}}\r\n    </mat-option>\r\n</mat-autocomplete>","import { TreatmentsService } from \"./../../../../services/treatments.service\";\r\nimport { SpecialityService } from \"./../../../../services/speciality.service\";\r\nimport { Component, OnInit, ElementRef, ViewChild } from \"@angular/core\";\r\nimport { MainService } from \"src/app/services/main.service\";\r\nimport { FormGroup, FormControl, FormControlName, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { UploadService } from \"src/app/services/upload.service\";\r\nimport { MessageService } from \"primeng/api\";\r\nimport { COMMA, ENTER } from \"@angular/cdk/keycodes\";\r\nimport { MatAutocompleteSelectedEvent, MatAutocomplete, } from \"@angular/material/autocomplete\";\r\nimport { MatChipInputEvent } from \"@angular/material/chips\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, startWith, filter } from \"rxjs/operators\";\r\nimport { Router } from '@angular/router';\r\nimport { DataSecurityComponent } from './../../settings/data-security/data-security.component';\r\n\r\n@Component({\r\n  selector: \"app-edit-profile\",\r\n  templateUrl: \"./edit-profile.component.html\",\r\n  styleUrls: [\"./edit-profile.component.scss\"],\r\n})\r\nexport class EditProfileComponent implements OnInit {\r\n  countryList: any = [];\r\n  stateList: any = [];\r\n  cityList: any = [];\r\n\r\n  profileForm: FormGroup;\r\n  profileData: any;\r\n  avatar: any;\r\n  timeZone: any;\r\n  speciality: any;\r\n  specialityId: any;\r\n\r\n  languages = [\r\n    { label: \"kanada\", value: \"kanada\" },\r\n    { label: \"English\", value: \"English\" },\r\n    { label: \"Marathi\", value: \"Marathi\" },\r\n    { label: \"Hindi\", value: \"Hindi\" },\r\n    { label: \"Bengali\", value: \"Bengali\" },\r\n  ];\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  fruitCtrl = new FormControl();\r\n  filteredFruits: Observable<string[]>;\r\n  fruits: any;\r\n  allFruits: string[] = [\"Apple\", \"Lemon\", \"Lime\", \"Orange\", \"Strawberry\"];\r\n\r\n  @ViewChild(\"fruitInput\") fruitInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild(\"auto\") matAutocomplete: MatAutocomplete;\r\n  treatment: any[]=[];\r\n  addedValue: any;\r\n  tempData: any;\r\n  addOption: any = false;\r\n  element1: any = [];\r\n  treatment1: any;\r\n  element2: any[];\r\n  addOption1: boolean;\r\n  tempData1: any=[];\r\n  specialitie: any[]=[];\r\n  specializationArray: any[]=[];\r\n  treatmentArray: any[]=[];\r\n  data1:any;\r\n  data2:any;\r\n  specialityFilter: any[]=[];\r\n  specialitiesId: any=[];\r\n  treatmentId: any;\r\n  treatmentID: any=[];\r\n  countryId: any;\r\n  stateid: any;\r\n  cityid: any;\r\n\r\n  constructor(\r\n    public mainService: MainService,\r\n    public uploadService: UploadService,\r\n    public messageService: MessageService,\r\n    public SpecialityService: SpecialityService,\r\n    public TreatmentsService: TreatmentsService,\r\n    public  router:Router,\r\n    public fb :FormBuilder\r\n  ) {\r\n      this.profileForm = fb.group({\r\n        avatar: [''],\r\n        firstName: [''],\r\n        lastName: [''],\r\n        mobileNumber: [''],\r\n        email: [''],\r\n        gender: [''],\r\n        dob: [''],\r\n        specialitie: [''],\r\n        treatment: [''],\r\n        bloodGroup: [''],\r\n        timeZone: [''],\r\n        address: [''],\r\n        landmark: [''],\r\n        country: [''],\r\n        state: [''],\r\n        city: [''],\r\n        pincode: [''],\r\n        extraPhoneNumber: [''],\r\n        language: ['']\r\n      });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfile();\r\n    this.getSpeciality();\r\n    this.treatmentAll();\r\n    this.getCountry();\r\n    this.getTimeZone();\r\n\r\n\r\n    this.profileForm.controls.specialitie.valueChanges.subscribe(resData =>{\r\n      this.specialityId = resData   \r\n    })\r\n\r\n    this.profileForm.controls.treatment.valueChanges.subscribe(resData =>{\r\n      this.treatmentId = resData   \r\n    })\r\n\r\n    this.profileForm.controls.country.valueChanges.subscribe(resData =>{\r\n      this.countryId = resData   \r\n    })\r\n\r\n    this.profileForm.controls.state.valueChanges.subscribe(resData =>{\r\n      this.stateid = resData   \r\n    })\r\n\r\n    this.profileForm.controls.city.valueChanges.subscribe(resData =>{\r\n        this.cityid = resData   \r\n    })\r\n\r\n\r\n\r\n  }\r\n\r\n  browseFile(event) {\r\n    const file = event.target.files;\r\n    this.uploadService\r\n      .upload(file)\r\n      .then((res) => {\r\n        this.avatar = res.files[0];\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error\", error);\r\n      });\r\n  }\r\n\r\n  getProfile() {\r\n    this.mainService\r\n      .getProfile()\r\n      .then((resData) => {\r\n      console.log(\"file: edit-profile.component.ts ~ line 138 ~ EditProfileComponent ~ .then ~ resData\", resData)\r\n\r\n      const profileData = resData.data\r\n      console.log(\"file: edit-profile.component.ts ~ line 157 ~ EditProfileComponent ~ .then ~ profileData\", profileData)\r\n        \r\n        this.SpecialityService.getDoctorSpecility().then(specData =>{\r\n          for(let i = 0; i < specData.data.length; i++){\r\n            this.specialitiesId[i] = specData.data[i].specializationId._id\r\n          }\r\n          this.profileForm.controls.specialitie.patchValue(this.specialitiesId)\r\n        })\r\n\r\n        this.TreatmentsService.getDoctreatment().then(trtData =>{\r\n          for(let i = 0; i < trtData.data.length; i++ ){\r\n            this.treatmentID[i] = trtData.data[i].treatmentId._id\r\n          }\r\n          this.profileForm.controls.treatment.patchValue(this.treatmentID) \r\n        })\r\n\r\n        this.profileForm.patchValue({\r\n          firstName: profileData.firstName,\r\n          lastName: profileData.lastName,\r\n          mobileNumber: profileData.mobileNumber,\r\n          email: profileData.email,\r\n          gender: profileData.gender,\r\n          dob: profileData.dob ? new Date(profileData.dob) : null,\r\n          bloodGroup: profileData.bloodGroup,\r\n          timeZone: profileData.timeZone,\r\n          address: profileData.location.address,\r\n          landmark: profileData.location.landmark,\r\n          country:  profileData.location.country,\r\n          state: profileData.location.state,\r\n          city: profileData.location.city,\r\n          pincode: profileData.location.pincode,\r\n          extraPhoneNumber: profileData.extraPhoneNumber,\r\n          language: profileData.language\r\n          \r\n        });\r\n        this.avatar= profileData.avatar\r\n\r\n\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> getProfile -> error\", error);\r\n      });\r\n\r\n\r\n     \r\n  }\r\n\r\n  getSpeciality() {\r\n    this.SpecialityService.getSpecialization()\r\n      .then((resData) => {\r\n        this.speciality = resData.data; \r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n      });\r\n\r\n  }\r\n  \r\n  treatmentAll(){\r\n    this.TreatmentsService.getAllTreatment()\r\n          .then((resdata) => {\r\n            this.treatment1 = resdata.data;\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"EditProfileComponent -> onChange -> err\", err);\r\n          });\r\n  }\r\n\r\n  getCountry() {\r\n    this.mainService\r\n      .getCountry()\r\n      .then((resData) => {\r\n        this.countryList = resData.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n      });\r\n  }\r\n\r\n  getState() {\r\n    this.mainService\r\n      .getState(this.countryId)\r\n      .then((resData) => {\r\n        this.stateList = resData.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n      });\r\n  }\r\n\r\n  getCity() {\r\n    this.mainService\r\n      .getCity(this.stateid)\r\n      .then((resData) => {\r\n        this.cityList = resData.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n      });\r\n  }\r\n\r\n  getTimeZone() {\r\n    this.mainService\r\n      .getTimeZone()\r\n      .then((resData) => {\r\n        this.timeZone = resData.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n      });\r\n  }\r\n\r\n  onInput(e) {\r\n    this.speciality = this.speciality.filter((ele) =>\r\n      ele.fullName.toLowerCase().includes(e.target.value.toLowerCase())\r\n    );\r\n    if (this.speciality.length === 0) {\r\n      this.ngOnInit()\r\n    }\r\n  }\r\n\r\n  onInput1(e){\r\n      this.treatment1 = this.treatment1.filter((ele) =>\r\n        ele.fullName.toLowerCase().includes(e.target.value.toLowerCase())\r\n      );\r\n      this.treatment1 = []\r\n      if (this.treatment1.length === 0) {\r\n        this.ngOnInit()\r\n      }\r\n  \r\n  }\r\n\r\n  \r\n\r\n  onSave() {\r\n    var data = {\r\n      ...this.profileForm.value,\r\n      avatar: this.avatar,\r\n      dob: this.profileForm.value.dob,\r\n      location: {\r\n        address: this.profileForm.value.address,\r\n        landmark: this.profileForm.value.landmark,\r\n        state: this.stateid,\r\n        city: this.cityid,\r\n        pincode: this.profileForm.value.pincode,\r\n        country: this.countryId,\r\n      },\r\n      timeZone: this.profileForm.value.timeZone\r\n    };\r\n    this.mainService\r\n      .updateUserprofile(data)\r\n      .then((resData) => {\r\n        this.showToast(\"success\", \"Profile\", \"Profile updated successfully\");\r\n        this.router.navigate(['/Doctor'])\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> onSave -> error\", error);\r\n      });\r\n\r\n    const data1 ={\r\n        specializationArray: this.specialityId\r\n    }\r\n      \r\n    this.SpecialityService.addSpecialization(data1).then(SpecData => {\r\n    }).catch(err => {\r\n        console.log(\"file: edit-profile.component.ts ~ line 276 ~ EditProfileComponent ~ this.TreatmentsService.addDoctorTreatment ~ err\", err)\r\n    })\r\n\r\n    const data2= {\r\n      treatmentArray:  this.treatmentId \r\n    }\r\n      \r\n    this.TreatmentsService.addDoctorTreatment(data2).then(TreatData => {\r\n    }).catch(err => {\r\n      console.log(\"file: edit-profile.component.ts ~ line 313 ~ EditProfileComponent ~ this.TreatmentsService.addDoctorTreatment ~ err\", err)\r\n    })\r\n\r\n  }\r\n \r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({\r\n        severity: type,\r\n        summary: messageType,\r\n        detail: message,\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  isNumber(evt) {\r\n    evt = evt ? evt : window.event;\r\n    var charCode = evt.which ? evt.which : evt.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      console.log(\"EditProfileComponent -> isNumber -> evt\", evt);\r\n      evt.preventDefault();\r\n      return;\r\n    }\r\n    return;\r\n  }\r\n}\r\n","<p-toast class=\"custom-error\" [showTransformOptions]=\"'translateX(100%)'\"></p-toast>\r\n<div class=\"card shadow mb-4\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"card-header\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-3 first\">\r\n                        <h2 class=\"font-weight-bold text-primary\">Accounts</h2>\r\n                    </div>\r\n                    <div class=\"col-sm-9\">\r\n                        <button mat-raised-button color=\"warn\" class=\"float-right themeColorBtn\" (click)=\"onSave()\">Save\r\n                            Changes</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"row\" [formGroup]=\"profileForm\">\r\n                <div class=\"col-md-12 col-sm-12\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6  maincol\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n\r\n                                    <div class=\"row\">\r\n\r\n                                        <div class=\"col-sm-6 m-auto containerq\">\r\n                                            <img [src]=\"avatar\"\r\n                                                onerror=\"this.src='./../../../../../assets/images/doc.jpg'\"\r\n                                                (click)=\"image.click()\" class=\"profile-avtar \" style=\"cursor: pointer;\">\r\n                                            <input type=\"file\" style=\"display: none;\" #image\r\n                                                (change)=\"browseFile($event)\">\r\n\r\n                                            <div class=\"overlay profile-avtar \" (click)=\"image.click()\"\r\n                                                style=\"margin: auto;text-align: center; cursor: pointer;\">\r\n                                                <!-- <span style=\"margin-top: 86px;\" class=\"material-icons\">\r\n                                                    cloud_upload\r\n                                                </span> -->\r\n                                                <span class=\"material-icons\">\r\n                                                    cloud_upload\r\n                                                </span>\r\n                                            </div>\r\n                                            <div style=\"margin: auto;\r\n                                            text-align: center;\">Profile photo</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <hr class=\"bodhr\">\r\n                                <div class=\"col-sm-6 \">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"firstname\">First Name<span>*</span></label>\r\n                                        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"\r\n                                            id=\"firstname\">\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"lastName\">Last Name<span>*</span></label>\r\n                                        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"\r\n                                            id=\"lastName\">\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-6  mt-4\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Specialization\">Phone number</label>\r\n                                        <!-- <a style=\"float: right ;color:blue\">Edit</a> -->\r\n                                        <input type=\"number\" formControlName=\"mobileNumber\" class=\"form-control\"\r\n                                            readonly id=\"Contact\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6  mt-4\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"gstin\">Email Address</label>\r\n                                        <!-- <a style=\"float: right; color:blue\">Edit</a> -->\r\n                                        <input type=\"email\" formControlName=\"email\" class=\"form-control\" readonly\r\n                                            id=\"gstin\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"gender\">Gender</label>\r\n                                        <select class=\"form-control\" formControlName=\"gender\" id=\"gender\">\r\n                                            <option>Male</option>\r\n                                            <option>Female</option>\r\n                                            <option>Other</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"website\">Date of birth</label><br />\r\n                                        <p-calendar formControlName=\"dob\" placeholder=\"mm/dd/yyyy\"></p-calendar>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Specialisations\">Specialisations</label>\r\n                                     \r\n                                            <mat-select formControlName=\"specialitie\" placeholder=\"Serach\" class=\"form-control\"   multiple>\r\n                                              <mat-option >\r\n                                                <ngx-mat-select-search  placeholderLabel=\"Search\"   (onFilter)=\"onInput($event)\" ></ngx-mat-select-search>\r\n                                              </mat-option>\r\n                                              <mat-option *ngFor=\"let spec of speciality \" [value]=\"spec?._id\">\r\n                                                {{spec.fullName}}\r\n                                              </mat-option>\r\n                                            </mat-select>\r\n                                          \r\n                                        <!-- <p-multiSelect formControlName=\"specialitie\" defaultLabel=\"Select Specialities\"\r\n                                            [options]=\"speciality\" [filter]=\"true\" filterBy=\"fullName\"\r\n                                            [showToggleAll]=\"false\" optionLabel=\"fullName\"\r\n                                            (onFilter)=\"onInput($event)\" (onChange)=\"onOptionsSelected($event)\">\r\n                                            <ng-template let-it pTemplate=\"item\">\r\n                                                <span>{{it.fullName}}</span>\r\n                                            </ng-template>\r\n                                            <ng-template let-sitem pTemplate=\"selectedItems\">\r\n                                                <span *ngFor=\"let spec of speciality\" >\r\n                                                    <span>{{spec.fullName}}</span>\r\n                                                </span>\r\n                                            </ng-template>\r\n                                        </p-multiSelect> -->\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Treatment\">Treatment</label>\r\n                                     \r\n                                            <mat-select id=\"Treatment\" formControlName=\"treatment\"  placeholder=\"Serach\" class=\"form-control\"  multiple>\r\n                                              <mat-option>\r\n                                                <ngx-mat-select-search  placeholderLabel=\"Search\"  (input)=\"onInput1($event)\" ></ngx-mat-select-search>\r\n                                              </mat-option>\r\n                                              <!-- <mat-option *ngIf=\"addOption1\" > \r\n                                                  {{addOption1}}\r\n                                              </mat-option> -->\r\n                                              <mat-option *ngFor=\"let treat of treatment1\" [value]=\"treat._id\">\r\n                                                {{treat.fullName}}\r\n                                              </mat-option>\r\n                                            </mat-select>\r\n                                          \r\n                                    \r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!-- <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"treatment\">Treatment Types</label>\r\n                                        <p-multiSelect formControlName=\"treatment\" [options]=\"treatment\"\r\n                                            [showToggleAll]=\"false\" optionLabel=\"fullName\">\r\n                                        </p-multiSelect>\r\n                                    </div>\r\n                                </div> -->\r\n\r\n                                <hr style=\"border-top: 1px solid lightgray;\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"bloodGroup\"> Blood group</label>\r\n                                        <select class=\"form-control\" id=\"bloodGroup\" formControlName=\"bloodGroup\"\r\n                                            placeholder=\"Select an Option\">\r\n                                            <option>O+</option>\r\n                                            <option>O-</option>\r\n                                            <option>A+</option>\r\n                                            <option>A-</option>\r\n                                            <option>B+</option>\r\n                                            <option>B-</option>\r\n                                            <option>AB+</option>\r\n                                            <option>AB-</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"timezone\"> Time Zone</label>\r\n                                        <select class=\"form-control\" id=\"timezone\" formControlName=\"timeZone\"\r\n                                            placeholder=\"Select an Option\">\r\n                                            <option *ngFor=\"let time of timeZone\" [value]=\"time?.name\">{{time?.value}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr class=\"bodhr\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6  maincol \">\r\n                            <div class=\"mainhed\">Address</div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Specialization\">\r\n                                            House No./ Street Name/ Area</label>\r\n                                        <input type=\"text\" formControlName=\"address\" class=\"form-control\" id=\"address\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Specialization\">\r\n                                            Colony / Street / Locality</label>\r\n                                        <input type=\"text\" formControlName=\"landmark\" class=\"form-control\" id=\"landmark\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>\r\n                                            Country<span>\r\n                                                *\r\n                                            </span></label>\r\n                                        <select class=\"form-control\" formControlName=\"country\"\r\n                                            (change)=\"getState()\">\r\n                                            <option *ngFor=\"let country of countryList\" [value]=\"country?.id\">\r\n                                                {{country?.name}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6 \">\r\n                                    <div class=\"form-group\">\r\n                                        <label>\r\n                                            State\r\n                                        </label>\r\n                                        <select class=\"form-control\" formControlName=\"state\"\r\n                                            (change)=\"getCity()\">\r\n                                            <option *ngFor=\"let state of stateList\" [value]=\"state?.id\">\r\n                                                {{state?.name}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>City</label>\r\n                                        <select class=\"form-control\"  formControlName=\"city\">\r\n                                            <option *ngFor=\"let city of cityList\" [value]=\"city?.id\">\r\n                                                {{city?.name}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"Specialization\">\r\n                                                    Pincode</label>\r\n                                                <input type=\"text\" maxlength=\"6\" formControlName=\"pincode\"\r\n                                                    id=\"onlynumber\" class=\"form-control\" id=\"pincode\">\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr class=\"bodhr\">\r\n                </div>\r\n\r\n                <div class=\"col-sm-6  maincol\">\r\n                    <div class=\"mainhed\">Other information</div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"Specialization\">\r\n                                    Extra phone numbers</label>\r\n                                <input type=\"text\" formControlName=\"extraPhoneNumber\" maxlength=\"10\"\r\n                                    class=\"form-control\" id=\"extraNo\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"country\">Language</label>\r\n                                <!-- <p-multiSelect formControlName=\"language\" [options]=\"languages\" class=\"form-control\">\r\n                                </p-multiSelect> -->\r\n\r\n                                <mat-form-field style=\"width: 100%;\">\r\n                                    <mat-select formControlName=\"language\" multiple class=\"form-control\">\r\n                                        <mat-option *ngFor=\"let language of languages\" [value]=\"language.label\">\r\n                                            {{language.label}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n\r\n                                <!-- <select formControlName=\"language\" class=\"form-control\" id=\"language\">\r\n                                    <option>English</option>\r\n                                    <option>Marathi</option>\r\n                                    <option>Hindi</option>\r\n                                    <option>Telgu</option>\r\n                                </select> -->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>","import { filter } from 'rxjs/operators';\r\nimport { MainService } from \"./../../../../services/main.service\";\r\nimport { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { MatStepper } from \"@angular/material/stepper\";\r\nimport { MessageService } from 'primeng/api';\r\n@Component({\r\n  selector: \"app-education\",\r\n  templateUrl: \"./education.component.html\",\r\n  styleUrls: [\"./education.component.scss\"],\r\n})\r\nexport class EducationComponent implements OnInit {\r\n  @Input() stepper: MatStepper;\r\n  reg = this.fb.group({});\r\n  arrdata: any = [];\r\n  lengthValue: any = 0;\r\n  ylength:any=[];\r\n  year: number;\r\n  allDegree: any;\r\n  Degree: any;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private MainService: MainService, public messageService: MessageService, ) {}\r\n  ngOnInit() {\r\n    this.InitPostService();\r\n    this.getDegreesOnline();\r\n\r\nthis.getAll()\r\n\r\n\r\n\r\n    this.reg.valueChanges.subscribe((resData) => {\r\n      this.ylength.length=85\r\n      this.year=new Date().getFullYear()\r\n      console.log(\"EducationComponent -> ngOnInit -> resData\", resData);\r\n    });\r\n\r\n\r\n\r\n\r\n    this.reg.controls[\"qualificationArray\"].valueChanges.subscribe((resData)=>{\r\n    console.log(\"EducationComponent -> ngOnInit -> resData\", resData)\r\n  \r\n})\r\n\r\n\r\n\r\n   \r\n  }\r\ngetAll(){\r\n\r\n  this.MainService.getDegree().then((resD)=>{\r\n    this.allDegree=resD.data\r\n      this.Degree=this.allDegree\r\n      \r\n    }).catch((err)=>{\r\n    console.log(\"EducationComponent -> ngOnInit -> err\", err)\r\n    })\r\n}\r\n\r\n  AddDegree(val){\r\n  console.log(\"EducationComponent -> AddDegree -> val\", val)\r\n  this.MainService.addDegree({degree:val}).then((resData)=>{\r\n  console.log(\"EducationComponent -> AddDegree -> resData\", resData)\r\n  this.getAll()\r\n\r\n  }).catch((err)=>{\r\n  console.log(\"EducationComponent -> AddDegree -> err\", err)\r\n  })\r\n  }\r\n\r\n\r\nEnterValu(val){\r\n const data=val.toLowerCase()\r\n this.Degree= this.allDegree.filter((x)=> x.degree.toLowerCase().includes(data))\r\nif(this.Degree.length!=0){\r\n  console.log(\"true\")\r\n}else{\r\n  console.log(\"false\")\r\n}\r\n}\r\n  getDegreesOnline() {\r\n    this.MainService.getDoctorEducation().then((resDtat) => {\r\n      const Data = [];\r\n      resDtat.data.forEach((element, i) => {\r\n        if(i + 1 != resDtat.data.length) {\r\n          this.reg.controls[\"qualificationArray\"][\"controls\"].push(\r\n            this.fb.group({\r\n              degree:[\"\"],\r\n              qualificationId: [\"\"],\r\n              completionYear: [\"\"],\r\n              college: [\"\"],\r\n            })\r\n          );\r\n        } \r\n        Data.push({\r\n          degree:element.degree,\r\n          qualificationId: element.qualificationId,\r\n          completionYear: element.completionYear,\r\n          college: element.college,\r\n        });\r\n      });\r\n      this.reg.controls[\"qualificationArray\"].patchValue(Data);\r\n    });\r\n  }\r\n  InitPostService() {\r\n    this.reg.addControl(\r\n      \"qualificationArray\",\r\n      this.fb.array([\r\n        this.fb.group({\r\n          degree:[\"\"],\r\n          qualificationId: [\"\"],\r\n          completionYear: [\"\"],\r\n          college: [\"\"],\r\n        }),\r\n      ])\r\n    );\r\n  }\r\n  addPostService() {\r\n    this.reg.controls[\"qualificationArray\"][\"controls\"].push(\r\n      this.fb.group({\r\n        degree:[\"\"],\r\n        qualificationId: [\"\"],\r\n        completionYear: [\"\"],\r\n        college: [\"\"],\r\n      })\r\n    );\r\n  }\r\n\r\n  getControlName(controlName) {\r\n    return this.reg.controls[controlName][\"controls\"];\r\n  }\r\n\r\n  remDegree(rem) {\r\n    this.reg.controls[\"qualificationArray\"][\"controls\"].splice(rem, 1);\r\n  }\r\n  save() {\r\n    this.arrdata=[]\r\n    this.reg.value;\r\n    const data = this.reg.controls[\"qualificationArray\"][\"controls\"];\r\n    data.forEach((element) => {\r\n      this.arrdata.push(element.value);\r\n    });\r\n  this.arrdata.forEach((element ,i)=> {\r\nconst degId= this.allDegree.filter((x)=>x.degree ==element.degree )\r\nconsole.log(\"EducationComponent -> save -> degId\", degId[0]._id)\r\nthis.arrdata[i].qualificationId=degId[0]._id\r\n\r\n  }); \r\n\r\n  \r\n  console.log(\"EducationComponent -> save -> this.arrdata\", this.arrdata)\r\n  const daya ={qualificationArray:this.arrdata}\r\n  this.MainService.addDoctorDegree(daya).then((resData)=>{\r\n  console.log(\"EducationComponent -> save -> resData\", resData)\r\n    this.showToast('success', 'Profile', 'Education Qualification Add Succefully');\r\n    this.stepper.next();\r\n  }).catch((err)=>{\r\n  console.log(\"EducationComponent -> save -> err\", err)\r\n    \r\n  })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n}\r\n","<section class=\"bg-white p-sm-3\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n      <div [formGroup]=\"reg\">\r\n        <div formArrayName=\"qualificationArray\">\r\n          <div\r\n            *ngFor=\"\r\n              let ite of getControlName('qualificationArray');\r\n              let fo = index\r\n            \"\r\n            [formGroupName]=\"fo\"\r\n          >\r\n            <div class=\"form-group-sm mb-3\">\r\n              <label for=\"RegistrationNumber\">Degree</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter Degree\"\r\n                formControlName=\"degree\"\r\n                #box\r\n                (keyup)=\"EnterValu(box.value)\"\r\n                class=\"form-control\"\r\n                [matAutocomplete]=\"auto\"\r\n              />\r\n              <mat-autocomplete #auto=\"matAutocomplete\">\r\n                <mat-option\r\n                  *ngFor=\"let street of Degree\"\r\n                  [value]=\"street.degree\"\r\n                >\r\n                  {{ street.degree }}\r\n                </mat-option>\r\n\r\n                <mat-option (click)=\"AddDegree(box.value)\"  [value]=\"box.value\">{{box.value +\" \"}} Click to add Degree </mat-option>\r\n              </mat-autocomplete>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"RegistrationCouncil\">College</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"registrationNumber\"\r\n                formControlName=\"college\"\r\n                placeholder=\"Enter your council\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"RegistrationYear\">Registration Year</label>\r\n              <select\r\n                id=\"completionYear\"\r\n                class=\"form-control\"\r\n                formControlName=\"completionYear\"\r\n              >\r\n                <option\r\n                  *ngFor=\"let item of ylength; let i = index\"\r\n                  [value]=\"year - i\"\r\n                >\r\n                  {{ year - i }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col-12 mb-5\">\r\n              <button\r\n                *ngIf=\"getControlName('qualificationArray').length > 1\"\r\n                mat-mini-fab\r\n                color=\"warn\"\r\n                (click)=\"remDegree(fo)\"\r\n                class=\"mx-2 float-right\"\r\n                aria-label=\"Example icon button with a menu icon\"\r\n              >\r\n              <i class=\"fa fa-minus text-white\" aria-hidden=\"true\"></i></button>\r\n              <button\r\n                mat-mini-fab\r\n                color=\"primary\"\r\n                (click)=\"addPostService()\"\r\n                class=\"mx-2 float-right\"\r\n                aria-label=\"Example icon button with a menu icon\"\r\n              >\r\n                <i class=\"fa fa-plus text-white\" aria-hidden=\"true\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr class=\"mt-5 mb-3\" />\r\n\r\n        <div class=\"row\">\r\n          <button class=\"mr-2\" mat-raised-button matStepperPrevious>\r\n            <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i>\r\n            Back\r\n          </button>\r\n          <button class=\"ml-2 themeColorBtn\" mat-raised-button color=\"warn\" \r\n           (click)=\"save()\">\r\n            Save and Continue\r\n            <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n      <div\r\n        class=\"d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n        style=\"border: 1px solid #14aa9b\"\r\n      >\r\n        <div class=\"bg p-4 textcol\">\r\n          <div><i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i></div>\r\n          <p class=\"stext font-weight-bold\">\r\n            On WhealthyLife, doctors are listed under the relevant\r\n            specializations based on their academic degrees. Both, education and\r\n            years of experience, showcase doctor’s expertise and are among the\r\n            top 3 things that patients consider while making their decision\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\r\nimport { MainService } from 'src/app/services/main.service';\r\nimport { UploadService } from 'src/app/services/upload.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatStepper } from '@angular/material/stepper';\r\n\r\n@Component({\r\n  selector: 'app-identity-proof',\r\n  templateUrl: './identity-proof.component.html',\r\n  styleUrls: ['./identity-proof.component.scss']\r\n})\r\nexport class IdentityProofComponent implements OnInit {\r\n  items: any = [];\r\n  identityFile: any;\r\n  profileData: any;\r\n  submitted: boolean =false;\r\n  identityFile2: any;\r\n  identityFile1: any;\r\n  Twoimgarray: any=['',''];\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  thirdFormGroup: FormGroup;\r\n  \r\n  @ViewChild('stepper') stepper: MatStepper;\r\n\r\n  constructor(public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public uploadService: UploadService,\r\n    public fb :FormBuilder) {\r\n  \r\n    this.getProfile();\r\n  }\r\n\r\n  ngOnInit() { \r\n    this.firstFormGroup = this.fb.group({})\r\n    this.secondFormGroup = this.fb.group({})\r\n    this.thirdFormGroup = this.fb.group({})\r\n  }\r\n\r\n\r\n\r\n\r\n  getProfile() {\r\n    this.mainService.getProfile().then(resData => {\r\n    console.log(\"IdentityProofComponent -> getProfile -> resData\", resData)\r\n      this.profileData = resData.data;\r\n      this.Twoimgarray=resData.data.identityFile\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> getProfile -> error\", error)\r\n    })\r\n  }\r\n\r\n  onSave(stepper) {\r\n\r\n    if(this.identityFile == ''){\r\n      return;\r\n    }\r\n\r\n\r\nconst data= {\r\n  identityFile: this.Twoimgarray\r\n}\r\nconsole.log(\"IdentityProofComponent -> onSave -> data\", data)\r\n    \r\n    this.mainService.updateUserprofile(data).then(resData => {\r\n      this.showToast('success', 'Profile', 'Profile updated successfully');\r\n      stepper.next();\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> onSave -> error\", error)\r\n    })\r\n  }\r\n\r\n  browseFile1(event) {\r\n    const file = event.target.files;\r\n    this.uploadService.upload(file).then(res => {\r\n      this.Twoimgarray[0]= res.files[0];\r\n     \r\n    }).catch(error => {\r\n      console.error('error', error);\r\n    });\r\n  }\r\n  browseFile2(event) {\r\n    const file = event.target.files;\r\n    this.uploadService.upload(file).then(res => {\r\n      this.Twoimgarray[1] = res.files[0];\r\n     \r\n    }).catch(error => {\r\n      console.error('error', error);\r\n    });\r\n  }\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<p-toast class=\"custom-error\" [showTransformOptions]=\"'translateX(100%)'\"></p-toast>\r\n<section>\r\n    <mat-horizontal-stepper labelPosition=\"bottom\" [linear]=\"true\"  linear mode #stepper>\r\n        <mat-step [stepControl]=\"firstFormGroup\" disableRipple=\"true\">\r\n            \r\n                <ng-template matStepLabel> Identity Proof</ng-template>\r\n                <section class=\"bg-white p-sm-3\">\r\n                    <div class=\"row\">\r\n                            <form [formGroup]=\"firstFormGroup\">\r\n                                <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n                                    <div>\r\n                                        <p class=\"mb-2\" style=\"font-size: 15px;\">Dr. {{profileData?.firstName}}\r\n                                            {{profileData?.lastName}}</p>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <div class=\"row\" style=\"border: 1px solid lightgray;\">\r\n                                                <div class=\"col-6\" style=\"padding: 0px;\">\r\n                                                    <img src=\"{{Twoimgarray[0]}}\" class=\"img-fluid\"\r\n                                                        \r\n                                                        style=\"padding: 0px;width: 100%;height: 150px;background-color: #eadfdf;\">\r\n                                                    <input type=\"file\" class=\"d-none\" #file1 (change)=\"browseFile1($event)\">\r\n                                                    <span (click)=\"file1.click()\" class=\"btn border bg-white  z-index\" style=\"position: absolute;top: 0;left: 0;font-size: 1rem !important;\">\r\n                                                        <i class=\"fa fa-upload\" aria-hidden=\"true\" style=\"margin: 0px;\"></i>\r\n                \r\n                                                    </span>\r\n                                                </div>\r\n                                                <div class=\"col-6\" style=\"padding: 0px;\">\r\n                                                    <img src=\"{{Twoimgarray[1]}}\" class=\"img-fluid\"\r\n                                                    \r\n                                                        style=\"padding: 0px;width:100%; height: 150px;background-color: #eadfdf;\">\r\n                                                        \r\n                                                \r\n                                                <input type=\"file\" class=\"d-none\" #file2 (change)=\"browseFile2($event)\">\r\n                                                <span (click)=\"file2.click()\" class=\"btn border bg-white  z-index\" style=\"position: absolute;top: 0;left: 0;font-size: 1rem !important;\">\r\n                                                    <i class=\"fa fa-upload\" aria-hidden=\"true\" style=\"margin: 0px;\"></i>\r\n\r\n                                                </span>\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <!-- <div style=\"display: flex;\">\r\n                                        <img src=\"{{identityFile}}\" onerror=\"this.src=''\" style=\" height: 150px; position: absolute;\">\r\n                                        <img src=\"{{identityFile}}\" onerror=\"this.src=''\" style=\" height: 150px; position: relative;\">\r\n                                    </div> -->\r\n                                        <div class=\"border m-auto\">\r\n\r\n                                            <!-- <input type=\"file\" class=\"d-none\" #file (change)=\"browseFile($event)\">\r\n                                            <button type=\"button\" (click)=\"file.click()\"\r\n                                                class=\"btn border bg-white px-5 h3 z-index\">\r\n                                                Upload\r\n                                            </button> -->\r\n                                            <div *ngIf=\"identityFile\">One file is Uploaded</div>\r\n                                            <div *ngIf=\"!identityFile\" class=\"error-block display-block\">File Uplopad is required\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <p class=\"pt-2\" style=\"font-size: 12px;\">\r\n                                            Please upload your identity proof to ensure that the ownership\r\n                                            of your profile remains with only you.\r\n                                        </p>\r\n                                        <p>Acceptable documents</p>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <ul class=\"inside1\">\r\n                                            <li>Aadhar Card</li>\r\n                                            <li>Driving License</li>\r\n                                            <li>Voter Card</li>\r\n                                            <li>Any other Govt. ID</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div class=\"row\">\r\n                                        <p>Extra proofs required to be uploaded:</p>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <ul>\r\n                                            <li>1. Medical Registration Proof</li>\r\n                                            <li>2. Establishment Proof</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div class=\"row\">\r\n                                        <button mat-raised-button [routerLink]=\"['/Doctor/Profile']\"\r\n                                            routerLinkActive=\"router-link-active\">\r\n                                            <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i> Back\r\n                                        </button>\r\n                                        <button style=\"margin-left: 10px;\" mat-raised-button (click)=\"onSave(stepper)\"  color=\"warn\" class=\r\n                                        \"themeColorBtn\">\r\n                                        Save and continue\r\n                                        <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n                                    <div class=\"d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n                                        style=\"border: 1px solid #14aa9b;\">\r\n                                        <div class=\"bg p-4 textcol\">\r\n                                            <div>\r\n                                                <i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i>\r\n                                            </div>\r\n                                            <p class=\"stext font-weight-bold\">\r\n                                                2.5M patients are looking for a doctor on WhealthyLife. Verify your\r\n                                                credentials and reach out to them\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        </form>\r\n                    </div>\r\n                </section>\r\n        </mat-step>\r\n        <mat-step [stepControl]=\"secondFormGroup\" disableRipple=\"true\">\r\n            <form [formGroup]=\"secondFormGroup\">\r\n                <ng-template matStepLabel>Registration</ng-template>\r\n                <app-registration-proof [stepper]=\"stepper\"></app-registration-proof>\r\n            </form>\r\n        </mat-step>\r\n        <mat-step [stepControl]=\"thirdFormGroup\" disableRipple=\"true\">\r\n            <form [formGroup]=\"thirdFormGroup\">\r\n                <ng-template matStepLabel>Establishment Proof</ng-template>\r\n                <app-clinic-proof [stepper]=\"stepper\"></app-clinic-proof>\r\n            </form>\r\n        </mat-step>\r\n    </mat-horizontal-stepper>\r\n</section>","import { EditProfileComponent } from './edit-profile/edit-profile.component';\r\nimport { ClinicDetailsComponent } from './clinic-details/clinic-details.component';\r\nimport { ConnectClinicComponent } from './connect-clinic/connect-clinic.component';\r\nimport { EducationComponent } from './education/education.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { ProfileComponent } from './profile.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IdentityProofComponent } from './identity-proof/identity-proof.component';\r\nimport { RegistrationProofComponent } from './registration-proof/registration-proof.component';\r\nimport { ClinicProofComponent } from './clinic-proof/clinic-proof.component';\r\nimport { ClinicLocationComponent } from './clinic-location/clinic-location.component';\r\nimport { ClinicTimingsComponent } from './clinic-timings/clinic-timings.component';\r\nimport { ConsultantDetailsComponent } from './consultant-details/consultant-details.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: ProfileComponent\r\n  },\r\n  {\r\n    path: 'Registration', component: RegistrationComponent\r\n  },\r\n  {\r\n    path: 'Education', component: EducationComponent\r\n  },\r\n  {\r\n    path: 'Connect_clinic', component: ConnectClinicComponent\r\n  },\r\n  {\r\n    path: 'Clinic_details', component: ClinicDetailsComponent\r\n  },\r\n  {\r\n    path: 'Identity_proof', component: IdentityProofComponent\r\n  },\r\n  {\r\n    path: 'Registration_proof', component: RegistrationProofComponent\r\n  },\r\n  {\r\n    path: 'Clinic_proof', component: ClinicProofComponent\r\n  },\r\n  {\r\n    path: 'Clinic_location', component: ClinicLocationComponent\r\n  },\r\n  {\r\n    path: 'Clinic_timings', component: ClinicTimingsComponent\r\n  },\r\n  {\r\n    path: 'Consultant_details', component: ConsultantDetailsComponent\r\n  },\r\n  {\r\n    path: 'edit_profile', component: EditProfileComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProfileRoutingModule { }\r\n","import { DoctorProfileService } from './../../../services/doctor-profile.service';\r\nimport { UserService } from './../../../services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MainService } from 'src/app/services/main.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  Doctor: any;\r\n  cook: any;\r\n\r\n  constructor(public mainService: MainService,public UserService:UserService,public DoctorProfileService:DoctorProfileService) {\r\n    this.cook=UserService.getUserInfo();\r\n    this.getDoctodata(this.cook._id);\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n   getDoctodata(data){\r\n     \r\n    this.DoctorProfileService.getDoctorProfileid(data).then((resData)=>{\r\n    console.log(\"ProfileComponent -> getDoctodata -> resData\", resData)\r\n\r\n    }).catch((errr)=>{\r\n    console.log(\"ProfileComponent -> getDoctodata -> errr\", errr)\r\n      \r\n    })\r\n   }\r\n\r\n  ngOnInit(): void {\r\n   \r\n  }\r\n\r\n}\r\n","<section>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\" mb-4 h1 font-weight-bold text-dark \">Profile</div>\r\n            <div class=\"col-10 ofsset-2\">\r\n                <button mat-raised-button style=\"background-color:#45a29e; color: white; float: right;\" [routerLink]=\"['edit_profile']\"\r\n                    routerLinkActive=\"router-link-active\">Edit Profile \r\n                </button>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"bg-white\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 col-md-5 col-lg-5\">\r\n                    <div class=\"pl-5 pr-5 pt-5 pb-2\">\r\n                        <div class=\"h1 font-weight-bold text-dark mt-0\"> Great Progress!</div>\r\n                        <P class=\"text-dark large pt-2 pb-4\">Your profile is just few steps away from going live.</P>\r\n                        <p class=\"stext mb-0\"> Section A: Profile details</p>\r\n                        <p class=\"text-dark large \">\r\n                            Doctor’s basic details, medical registration, education qualification, establishment details\r\n                            etc\r\n                        </p>\r\n                        <button mat-raised-button style=\"background-color:#45a29e; color: white;\" [routerLink]=\"['Registration']\"\r\n                            routerLinkActive=\"router-link-active\">Continue <i class=\"fa fa-certificate\" aria-hidden=\"true\"></i>\r\n                            <!-- <span class=\"material-icons\">\r\n                                verified\r\n                                </span>  -->\r\n                            </button>\r\n                                    <!-- <p class=\"text-danger\">unverified   <span class=\"material-icons\">\r\n                                        new_releases\r\n                                        </span> </p> -->\r\n                        <hr>\r\n                        <p class=\"stext mb-0\"> Section B: Profile verification</p>\r\n                        <p class=\"text-dark large \">\r\n                            Doctor identity proof, registration proof, establishment ownership proof etc.\r\n                        </p>\r\n                        <button mat-raised-button style=\"background-color:#45a29e; color: white;\" [routerLink]=\"['Identity_proof']\"\r\n                            routerLinkActive=\"router-link-active\">Continue <i class=\"fa fa-certificate\" aria-hidden=\"true\"></i>\r\n                            <!-- <span class=\"material-icons\">\r\n                                verified\r\n                                </span>  --> </button>\r\n                                    <!-- <p class=\"text-danger\">unverified   <span class=\"material-icons\">\r\n                                        new_releases\r\n                                        </span> </p> -->\r\n                        <hr>\r\n                        <p class=\"stext mb-0\"> Step C: Start getting patients</p>\r\n                        <p class=\"text-dark large \">\r\n                            Location, Timings, Fees\r\n                        </p>\r\n                        <button mat-raised-button style=\"background-color: #45a29e; color: white;\" [routerLink]=\"['Clinic_location']\"\r\n                            routerLinkActive=\"router-link-active\">Continue <i class=\"fa fa-certificate\" aria-hidden=\"true\"></i>\r\n                            <!-- <span class=\"material-icons\">\r\n                                verified\r\n                                </span>  --></button>\r\n                                    <!-- <p class=\"text-danger\">unverified  <span class=\"material-icons\">\r\n                                        new_releases\r\n                                        </span>  </p> -->\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\" d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 mb-5 ml-5 pr-0 pl-0\"\r\n                        style=\"border: 1px solid #14aa9b;\">\r\n                        <div class=\" bg p-4 textcol\">\r\n                            <div><i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i> </div>\r\n                            <p class=\"stext font-weight-bold\">Basic details about your practice helps patients reach you\r\n                                easily for appointment booking and inquiries.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-none d-sm-none d-md-block col-md-7\">\r\n                    <div>\r\n                        <img src=\"../../../../assets/img/Practo.jpg\" class=\"img pl-md-5\" alt=\"\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { ProfileComponent } from \"./profile.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { ProfileRoutingModule } from \"./profile-routing.module\";\r\nimport { RegistrationComponent } from \"./registration/registration.component\";\r\nimport { EducationComponent } from \"./education/education.component\";\r\nimport { ConnectClinicComponent } from \"./connect-clinic/connect-clinic.component\";\r\nimport { ClinicDetailsComponent } from \"./clinic-details/clinic-details.component\";\r\nimport { IdentityProofComponent } from \"./identity-proof/identity-proof.component\";\r\nimport { RegistrationProofComponent } from \"./registration-proof/registration-proof.component\";\r\nimport { ClinicProofComponent } from \"./clinic-proof/clinic-proof.component\";\r\nimport { ClinicLocationComponent } from \"./clinic-location/clinic-location.component\";\r\nimport { ClinicTimingsComponent } from \"./clinic-timings/clinic-timings.component\";\r\nimport { ConsultantDetailsComponent } from \"./consultant-details/consultant-details.component\";\r\nimport { SharedModule } from \"./../../../shared/shared.module\";\r\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DynamicAutocompleteComponent } from './dynamic-autocomplete/dynamic-autocomplete.component';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProfileComponent,\r\n    RegistrationComponent,\r\n    EducationComponent,\r\n    ConnectClinicComponent,\r\n    ClinicDetailsComponent,\r\n    IdentityProofComponent,\r\n    RegistrationProofComponent,\r\n    ClinicProofComponent,\r\n    ClinicLocationComponent,\r\n    ClinicTimingsComponent,\r\n    ConsultantDetailsComponent,\r\n    EditProfileComponent,\r\n    DynamicAutocompleteComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProfileRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    AutocompleteLibModule\r\n  ]\r\n})\r\nexport class ProfileModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MainService } from 'src/app/services/main.service';\r\nimport { UploadService } from 'src/app/services/upload.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatStepper } from '@angular/material/stepper';\r\n\r\n@Component({\r\n  selector: 'app-registration-proof',\r\n  templateUrl: './registration-proof.component.html',\r\n  styleUrls: ['./registration-proof.component.scss']\r\n})\r\nexport class RegistrationProofComponent implements OnInit {\r\n  @Input() stepper: MatStepper;\r\n\r\n  items: any = [];\r\n  registrationProff: any;\r\n  profileData: any;\r\n\r\n  constructor(public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public uploadService: UploadService) {\r\n    this.getProfile();\r\n  }\r\n\r\n  getProfile() {\r\n    this.mainService.getProfile().then(resData => {\r\n      this.profileData = resData.data;\r\n      this.registrationProff = this.profileData.registrationProff;\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> getProfile -> error\", error)\r\n    })\r\n  }\r\n\r\n  onSave() {\r\n\r\n    if(this.registrationProff.length == ''){\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    this.mainService.updateUserprofile({ registrationProff: this.registrationProff }).then(resData => {\r\n      this.showToast('success', 'Profile', 'Profile updated successfully');\r\n      this.stepper.next();\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> onSave -> error\", error)\r\n    })\r\n  }\r\n\r\n  browseFile(event) {\r\n    const file = event.target.files;\r\n    this.uploadService.upload(file).then(res => {\r\n      this.registrationProff = res.files[0];\r\n    }).catch(error => {\r\n      console.error('error', error);\r\n    });\r\n  }\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","<section class=\"bg-white p-sm-3\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n            <p class=\"mb-2\" style=\"font-size: 15px;\">Dr. {{profileData?.firstName}} {{profileData?.lastName}}</p>\r\n            <div class=\"row\">\r\n                <div class=\"border bgh m-auto\">\r\n\r\n                    <img src=\"{{registrationProff}}\" class=\"img-fluid\"\r\n                                           \r\n                    style=\"padding: 0px;width:100%; height: 150px;background-color: #eadfdf;\">\r\n\r\n                    <input type=\"file\" class=\"d-none\" #file (change)=\"browseFile($event)\">\r\n                    <span (click)=\"file.click()\" class=\"btn border bg-white  z-index\" style=\"position: absolute;top: 0;left: 0;font-size: 1rem !important;\">\r\n                        <i class=\"fa fa-upload\" aria-hidden=\"true\" style=\"margin: 0px;\"></i>\r\n\r\n                    </span>\r\n                   \r\n                </div>\r\n                <div  *ngIf=\"registrationProff\" class=\"text-center display-block \">One file is Uploaded</div>\r\n                <div *ngIf=\"!registrationProff\" class=\"error-block display-block text-center\">File Uplopad is required</div>\r\n                <p class=\"pt-2\" style=\"font-size: 12px;\">\r\n                    Please upload your identity proof to ensure that the ownership of your\r\n                    profile remains with only you.\r\n                </p>\r\n                <p>Acceptable documents</p>\r\n            </div>\r\n            <div class=\"row\">\r\n                <ul>\r\n                    <li>Medical Registration Certification</li>\r\n                    <li>214 Maharashtra Medical Council</li>\r\n                </ul>\r\n            </div>\r\n            <hr />\r\n            <div class=\"row\">\r\n                <p>Extra proofs required to be uploaded:</p>\r\n            </div>\r\n            <div class=\"row\">\r\n                <ul>\r\n                    <li>1. Establishment Proof</li>\r\n                </ul>\r\n            </div>\r\n            <hr />\r\n            <div class=\"row\">\r\n                <button mat-raised-button matStepperPrevious>\r\n                    <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i> Back\r\n                </button>\r\n                <button mat-raised-button style=\"position: absolute ; right: 0;\" (click)=\"onSave()\" color=\"warn\" class=\r\n                \"themeColorBtn\">\r\n                  Save and continue\r\n                  <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n            <div class=\"d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n                style=\"border: 1px solid #14aa9b;\">\r\n                <div class=\"bg p-4 textcol\">\r\n                    <div><i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i></div>\r\n                    <p class=\"stext font-weight-bold\">\r\n                        2.5M patients are looking for a doctor on WhealthyLife. Verify your\r\n                        credentials and reach out to them\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { MainService } from 'src/app/services/main.service';\r\nimport { UploadService } from 'src/app/services/upload.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatStepper } from '@angular/material/stepper';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.scss']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  items: any = [];\r\n  isLinear = false;\r\n  profileform: FormGroup;\r\n  avatar: any;\r\n  submitted: boolean =false;\r\n  hide: boolean=false;\r\n\r\n  @ViewChild('stepper') stepper: MatStepper;\r\n\r\n\r\n\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  thirdFormGroup: FormGroup;\r\n\r\n  constructor(public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public uploadService: UploadService,\r\n    private formBuilder: FormBuilder) {\r\n\r\n\r\n\r\n    \r\n    this.items.length = 81;\r\n    this.getProfile();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.profileform = this.formBuilder.group({\r\n      registrationNumber: ['',Validators.required],\r\n      registrationCouncil: ['',Validators.required],\r\n      registrationYear: ['',Validators.required]\r\n    })\r\n\r\n    this.secondFormGroup = this.formBuilder.group({})\r\n    this.thirdFormGroup = this.formBuilder.group({})\r\n  }\r\n\r\n\r\n  \r\n\r\n  get f() { return this.profileform.controls; }\r\n\r\n  getProfile() {\r\n    this.mainService.getProfile().then(resData => {\r\n      this.profileform.patchValue(resData.data);\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> getProfile -> error\", error)\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  onSave(next: MatStepper) {\r\n    console.log(this.profileform.value);\r\n    this.submitted = true;\r\n\r\n    if (this.profileform.invalid) {\r\n      return;\r\n  }\r\n    var data = {\r\n      ...this.profileform.value,\r\n      avatar: this.avatar,\r\n    }\r\n    this.mainService.updateUserprofile(data).then(resData => {\r\n      console.log(\"EditProfileComponent -> onSave -> resData\", resData)\r\n      this.showToast('success', 'Profile', 'Profile updated successfully');\r\n      next.next();\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> onSave -> error\", error)\r\n    })\r\n  }\r\n\r\n  browseFile(event) {\r\n    const file = event.target.files;\r\n    this.uploadService.upload(file).then(res => {\r\n      this.avatar = res.files[0];\r\n    }).catch(error => {\r\n      console.error('error', error);\r\n    });\r\n  }\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n\r\n  nextClicked(event) {\r\n    // complete the current step\r\n    this.stepper.selected.completed = true;\r\n    // move to next step\r\n    this.stepper.next();\r\n  }\r\n\r\n \r\n}\r\n","<p-toast class=\"custom-error\" [showTransformOptions]=\"'translateX(100%)'\"></p-toast>\r\n<section >\r\n    <mat-horizontal-stepper  linear mode #stepper>\r\n          <mat-step [stepControl]=\"profileform\" disableRipple=\"true\" >\r\n            <ng-template matStepLabel> Medical Registration</ng-template>\r\n            <section class=\"bg-white p-sm-3\">\r\n                <form [formGroup]=\"profileform\">\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"row\">\r\n                                <div class=\"col-md-5 col-lg-3 offset-md-2 paddingonxs\" >\r\n                                    <div class=\"form-group-sm mb-3\">\r\n                                        <label for=\"RegistrationNumber\">Registration Number</label>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"RegistrationNumber\" placeholder=\"R-898977\"\r\n                                            formControlName=\"registrationNumber\" />\r\n                                            <div *ngIf=\"submitted && f.registrationNumber.errors\" class=\"error-block display-block\">\r\n                                                <div *ngIf=\"f.registrationNumber.errors.required\">Registration Number is required</div>\r\n                                            </div>\r\n                                            \r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"RegistrationCouncil\">Registration Council</label>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"registrationNumber\"\r\n                                            formControlName=\"registrationCouncil\" placeholder=\"Enter your council\" />\r\n                                            <div *ngIf=\"submitted && f.registrationCouncil.errors\" class=\"error-block display-block\">\r\n                                                <div *ngIf=\"f.registrationCouncil.errors.required\">Registration Number is required</div>\r\n                                            </div>\r\n                                                \r\n                                            </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"RegistrationYear\">Registration Year</label>\r\n                                        <select id=\"RegistrationYear\" class=\"form-control\" formControlName=\"registrationYear\">\r\n                                            <option *ngFor=\"let item of items; index as i\" [value]=\"2019 - i + 1\">\r\n                                                {{ 2019 - i + 1 }}\r\n                                            </option>\r\n                                        </select>\r\n                                        <div *ngIf=\"submitted && f.registrationCouncil.errors\" class=\"error-block display-block\">\r\n                                            <div *ngIf=\"f.registrationCouncil.errors.required\">Registration Number is required</div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                    <hr class=\"mt-5 mb-3\" />\r\n                                    <div class=\"row\">\r\n                                        <button class=\"mr-2\" mat-raised-button  [routerLink]=\"['/Doctor/Profile']\">\r\n                                            <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i>\r\n                                            Back\r\n                                        </button>\r\n                                        <button  class=\"ml-2 themeColorBtn\" mat-raised-button  color=\"warn\" \r\n                                        [disabled]=\"!profileform.valid\" (click)=\"onSave(stepper)\">Save and Continue\r\n                                            <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n                                    </div>\r\n        \r\n                                </div>\r\n                                <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n                                    <div class=\"d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n                                        style=\"border: 1px solid #14aa9b;\">\r\n                                        <div class=\"bg p-4 textcol\">\r\n                                            <div>\r\n                                                <i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i>\r\n                                            </div>\r\n                                            <p class=\"stext font-weight-bold\">\r\n                                                This information helps us perform critical checks to ensure\r\n                                                that only licensed and genuine medical practitioners are\r\n                                                listed on WhealthyLife. Your profile will get a “Verified” badge\r\n                                                on verification. Doctors with verified profiles get 95% more\r\n                                                patient views on WhealthyLife.\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n          </mat-step>\r\n          <mat-step  [stepControl]=\"secondFormGroup\" disableRipple=\"true\">\r\n            <form [formGroup]=\"secondFormGroup\">\r\n                <ng-template matStepLabel>Education Qualification</ng-template>\r\n                <app-education  [stepper]=\"stepper\"  ></app-education>\r\n            </form>\r\n          </mat-step>\r\n          <mat-step [stepControl]=\"thirdFormGroup\" disableRipple=\"true\">\r\n              <form [formGroup]=\"thirdFormGroup\"> \r\n                <ng-template matStepLabel>Connect a practice</ng-template>\r\n                <app-connect-clinic [stepper]=\"stepper\"></app-connect-clinic>\r\n              </form>\r\n          </mat-step>\r\n        </mat-horizontal-stepper>\r\n</section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ","import { Injectable } from '@angular/core';\r\nimport { ApiCallService } from './api/apicall.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UploadService {\r\n\r\n  constructor(private apiCall: ApiCallService) { }\r\n \r\n  upload(file: any) {\r\n    const url = environment.apiUrl + this.apiCall.uploadUrl;\r\n    return this.apiCall.upload(file, url);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}