{"version":3,"sources":["webpack:///src/app/modules/doctor-dashbord/settings/import-export/import-export-routing.module.ts","webpack:///src/app/modules/doctor-dashbord/settings/import-export/import-export.component.ts","webpack:///src/app/modules/doctor-dashbord/settings/import-export/import-export.component.html","webpack:///src/app/modules/doctor-dashbord/settings/import-export/import-export.module.ts","webpack:///src/app/modules/doctor-dashbord/settings/import-export/request-import-export/request-import-export.component.ts","webpack:///src/app/modules/doctor-dashbord/settings/import-export/request-import-export/request-import-export.component.html"],"names":["routes","path","component","ImportExportRoutingModule","forChild","imports","exports","ImportExportComponent","dialog","showImportExport","importtask","exporttask","dialogRef","open","afterClosed","subscribe","result","console","log","RequestExpImpModalOpen","selector","templateUrl","styleUrls","ImportExportModule","declarations","RequestImportExportComponent","val","onClick"],"mappings":"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","file":"import-export-import-export-module-es5.js","sourcesContent":["import { ImportExportComponent } from './import-export.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',component:ImportExportComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ImportExportRoutingModule { }\r\n","import { RequestImportExportComponent } from './request-import-export/request-import-export.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-import-export',\r\n  templateUrl: './import-export.component.html',\r\n  styleUrls: ['./import-export.component.scss']\r\n})\r\nexport class ImportExportComponent implements OnInit {\r\n\r\n  showImportExport:boolean=false;\r\n\r\n  importtask: boolean=true;\r\n\r\n  exporttask: boolean= false;\r\n  \r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  ImportExport(){\r\n    this.showImportExport=!this.showImportExport;\r\n  }\r\n\r\n\r\n  Importhide(){\r\n this.importtask = true;\r\n    this.exporttask = false;\r\n  }\r\n\r\nExporthide(){\r\n\r\n  this.exporttask = true;\r\n  this.importtask = false ;\r\n}\r\n\r\n\r\n\r\nRequestExpImpModalOpen() {\r\n  const dialogRef = this.dialog.open(RequestImportExportComponent);\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    console.log(`Dialog result: ${result}`);\r\n    \r\n  });\r\n}\r\n\r\n}\r\n","<div  class=\"container-fludic\" >\r\n\r\n  <div class=\"card\"style=\"height:100vh\">\r\n    <div class=\"card-header\">\r\n    <div class=\"row\">\r\n     <div class=\"col-sm-10\">\r\n        <h1>Import / Export</h1>\r\n     </div>\r\n     <div class=\"col-sm-2\">\r\n      <button mat-raised-button class=\"mat-button  btn  btnadd\" (click)=\"RequestExpImpModalOpen()\">\r\n        Request Import / Export\r\n    </button>\r\n     </div>\r\n    \r\n    </div>\r\n\r\n   \r\n\r\n    </div>\r\n    <div class=\"card-body\">\r\n\r\n      <div  class=\"row\">\r\n\r\n        <div  class=\" col-sm-12 \">\r\n      \r\n          <div class=\"text-center justify-content-center \">\r\n            No Import / Export requested\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    \r\n    </div>\r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { SharedModule } from './../../../../shared/shared.module';\r\nimport { ImportExportComponent } from './import-export.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ImportExportRoutingModule } from './import-export-routing.module';\r\nimport { RequestImportExportComponent } from './request-import-export/request-import-export.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ImportExportComponent, RequestImportExportComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ImportExportRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class ImportExportModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-request-import-export',\r\n  templateUrl: './request-import-export.component.html',\r\n  styleUrls: ['./request-import-export.component.scss']\r\n})\r\n\r\nexport class RequestImportExportComponent implements OnInit {\r\n  import:String=\"Import\"\r\n  constructor() { }\r\n  onClick(val){\r\nthis.import=val;\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-dialog-content class=\"mat-typography md-dialog-container  \"  >\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row m-auto\">\r\n            <div class=\"m-auto row  \">\r\n                <div class=\"pt-2 pb-2 px-5 border  mousecursor \"  (click)=\"onClick('Import')\" [ngClass]=\"{'navactive1': import=='Import','navactive': import!=='Import'}\" >Import</div>\r\n                <div class=\"pt-2 pb-2 px-5 border  mousecursor \" (click)=\"onClick('Export')\" [ngClass]=\"{'navactive1': import=='Export','navactive': import!=='Export' }\" >Export</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"col-md-12 \" *ngIf=\"import=='Import'\">\r\n               \r\n\r\n                <div class=\"form-row\">\r\n                 \r\n                    <div class=\"col-sm-12\">\r\n    \r\n                    \r\n                        <h3>Export your WhealthyLife Ray data to Excel.</h3>\r\n\r\n                    <div class=\"form-check mt-3\">\r\n                      <label class=\"valid-lable\" for=\"validationServer01\"><span>1.</span> Upload <span class=\"sp\">*</span></label>\r\n                      <input type=\"file\" class=\"form-control \" placeholder=\"First name\" value=\"Mark\" required>\r\n                      <div class=\" explaintext\">\r\n                        Only Excel (.xls / .xlsx / .xlsb ), MySQL (.sql), Access (.mdb), CSV(.csv), Compressed(.zip,.rar) and\r\n                        Saral(.srl) files with a max limit of 16MB are allowed.\r\n                      </div>\r\n                    </div>\r\n      \r\n                    <div class=\"form-check   mt-3\">\r\n                      <label  class=\"valid-lable\" for=\"validationServer01\"><span>2.</span> Which software is this data coming from?</label>\r\n                      <input type=\"text\" class=\"form-control \" placeholder=\"software name\" value=\"\" required>\r\n      \r\n                    </div>\r\n                    <div class=\"form-check   mt-3\">\r\n                      <label  class=\"valid-lable\" for=\"validationServer01\"><span>3.</span> Instructions</label>\r\n                      <textarea class=\"form-control \"></textarea>\r\n      \r\n                    </div>\r\n                    <div class=\"form-check  mt-3\">\r\n                      <label  class=\"valid-lable\" for=\"validationServer01\"><span>3.</span>Correspondence Email ID <span class=\"sp\">*</span></label>\r\n                      <input type=\"text\" class=\"form-control \" placeholder=\"maroti@gmail.com\" value=\"\" required>\r\n      \r\n                      <div class=\"explaintext mt-2\">\r\n      \r\n                        We will be sending an email with the updates on the progress of your data\r\n                      </div>\r\n                    </div>\r\n      \r\n                    \r\n                  </div>\r\n\r\n     \r\n            </div>\r\n            \r\n            </div>\r\n            <div class=\"col-md-12\"  *ngIf=\"import=='Export'\">\r\n                \r\n\r\n\r\n\r\n                <div class=\"form-row\">\r\n\r\n                    <div  class=\"col-sm-8 mt-1\">\r\n                       <div><span>1.</span> Select the type(s) of data you want to export <span class=\"sp\">*</span></div>\r\n    \r\n                       <div class=\"form-check mt-2\">\r\n                        <mat-checkbox>Patients</mat-checkbox>\r\n    \r\n                      </div>\r\n    \r\n                      <div class=\"form-check \">\r\n                        <mat-checkbox>Appointments</mat-checkbox>\r\n    \r\n                      </div>\r\n                      <div class=\"form-check \">\r\n                        <mat-checkbox>Treatments</mat-checkbox>\r\n    \r\n                      </div>\r\n    \r\n                      <div class=\"form-check \">\r\n                        <mat-checkbox>Procedure Catalog</mat-checkbox>\r\n    \r\n                      </div>\r\n    \r\n                      <div class=\"form-check \">\r\n                        <mat-checkbox>Prescriptions</mat-checkbox>\r\n    \r\n                      </div>\r\n    \r\n                      <div class=\"form-check \">\r\n                        <mat-checkbox>Clinical Notes</mat-checkbox>\r\n    \r\n                      </div>                  \r\n                      <div class=\"form-check \">\r\n                        <mat-checkbox>Files</mat-checkbox>\r\n    \r\n                      </div>\r\n                      <div class=\"form-check \">\r\n                        <mat-checkbox>Billing</mat-checkbox>\r\n    \r\n                      </div>\r\n    \r\n                      <div class=\"form-check\">\r\n                        <mat-checkbox>Treatment Plans</mat-checkbox>\r\n    \r\n                      </div>\r\n                      \r\n                      <div class=\"form-check \">\r\n                        <mat-checkbox>Expenses</mat-checkbox>\r\n    \r\n                      </div>\r\n    \r\n                    </div>\r\n                  \r\n                </div>\r\n\r\n                <div  class=\"mt-2\" style=\"margin-left: -12;\">This data will be exported and sent to practice owner's email address maroti@gmail.com (dev)</div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\"  >\r\n    <button mat-button mat-dialog-close>Cancel</button>\r\n    <button mat-button [mat-dialog-close]=\"true\"  *ngIf=\"import=='Import'\" class=\"mat-bt\" cdkFocusInitial>Request Import</button>\r\n    <button mat-button [mat-dialog-close]=\"true\" *ngIf=\"import=='Export'\" class=\"mat-bt\" cdkFocusInitial>Request Export</button>\r\n  </mat-dialog-actions>"]}