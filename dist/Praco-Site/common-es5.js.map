{"version":3,"sources":["webpack:///src/app/services/booking-page.service.ts","webpack:///src/app/services/consultation.service.ts","webpack:///src/app/services/doctor-profile.service.ts","webpack:///src/app/services/location.service.ts","webpack:///src/app/services/main.service.ts","webpack:///src/app/services/speciality.service.ts","webpack:///src/app/services/treatments.service.ts"],"names":["BookingPageService","apiCallService","getData","data","id","console","log","postData","fdggd","_i","providedIn","ConsultationService","api","DoctorProfileService","ApiCallService","LocationService","http","ApiCall","countryId","stateId","create","observer","navigator","geolocation","watchPosition","pos","next","enableHighAccuracy","MainService","putData","cityId","deleteData","SpecialityService","Api","TreatmentsService","specialization"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { ApiCallService } from './api/apicall.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookingPageService {\r\n\r\n  constructor(public apiCallService:ApiCallService) {\r\n   }\r\n   PopularSearches()\r\n   {\r\n    return this.apiCallService.getData('specialisations/four')\r\n   }\r\n\r\n  getCarousel(data){\r\n    return this.apiCallService.getData('customer/review/get/by/type/'+data)\r\n  }\r\ngetDegree(id){\r\n  return this.apiCallService.getData('doctor/qualification/by/'+id)\r\n}\r\ngetDoctorSlotId(id,data){\r\n  console.log(\"BookingPageService -> getDoctorSlotId -> data\", data)\r\n  return this.apiCallService.postData('slots/by/'+id,data)\r\n}\r\ngetDoctorSlotId1(id,data){\r\n  console.log(\"BookingPageService -> getDoctorSlotId -> data\", data)\r\n  const fdggd = data._i\r\n  console.log(\"BookingPageService -> getDoctorSlotId1 -> fdggd \", fdggd )\r\n  return this.apiCallService.postData('slots/by/'+id,data._i)\r\n}\r\ngetDroctorAward(id){\r\n  return this.apiCallService.getData('doctor/award/by/'+id) \r\n\r\n}\r\n\r\n\r\ngetDroctorMember(id){\r\n  return this.apiCallService.getData('doctor/membership/by/'+id) \r\n\r\n}\r\ngetQa(id){\r\n  return this.apiCallService.getData('QA/by/doctor/'+id)\r\n}\r\ngetReview(id){\r\n  return this.apiCallService.getData('customer/review/get/by/doctor/'+id)\r\n}\r\ngetAvgStar(id){\r\n  return this.apiCallService.getData('doctor/averageStars/by/'+id)\r\n}\r\ngetHf(id){\r\n  return this.apiCallService.getData('HF/HealthFeeds/by/'+id)\r\n}\r\n}","import { Injectable } from '@angular/core';\r\nimport { ApiCallService } from './api/apicall.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConsultationService {\r\n\r\n  constructor(public api: ApiCallService) {\r\n  }\r\n\r\ngetDoctorUsingId(id){\r\n  \r\n  return this.api.getData('doctor/specialization/by/specialization/'+id);\r\n}\r\ngetDoctFree(){\r\n  return this.api.getData('doctor/')\r\n}\r\n\r\n  getDoctorlist() {\r\n    return this.api.getData('doctor/list/for/consultation');\r\n  }\r\n\r\n  endSession(data) {\r\n    return this.api.postData('conference/end/session',data);\r\n  }\r\n\r\n  createSession(data) {\r\n    return this.api.postData('conference/', data, true);\r\n  }\r\n\r\n\r\n  getDoctorSession() {\r\n    return this.api.getData('conference/doctor');\r\n  }\r\n\r\n  getPatientSession() {\r\n    return this.api.getData('conference/patient');\r\n  }\r\n}\r\n","import { ApiCallService } from './api/apicall.service';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoctorProfileService {\r\n  constructor(public ApiCallService: ApiCallService) { }\r\n  getDoctorProfile(data) {\r\n    console.log(\"DoctorProfileService -> getDoctorProfile -> data\", data)\r\n    return this.ApiCallService.postData('doctor/profile/details', data);\r\n  }\r\n  getSlot(data) {\r\n    return this.ApiCallService.getData('slots/by/' + data)\r\n  }\r\n  getDoctorProfileid(data) {\r\n    console.log(\"DoctorProfileService -> getDoctorProfile -> data\"+data)\r\n    return this.ApiCallService.getData('doctor/' + data);\r\n  }\r\n\r\n  getDocSlots(id){\r\n    return this.ApiCallService.getData('slots/'+id);\r\n  }\r\n\r\n}\r\n","import { ApiCallService } from './api/apicall.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocationService {\r\n\r\n  constructor(private http: HttpClient,public ApiCall:ApiCallService) { }\r\n  getLocation() {\r\n    // return this.http.get('http://ip-api.com/json/')\r\n  }\r\n\r\n\r\ngetCountry(){\r\n  return this.ApiCall.getData('country/');\r\n}\r\n\r\ngetState(countryId){\r\n  return this.ApiCall.getData('country/'+countryId+'/state/')\r\n}\r\n\r\ngetCity(stateId){\r\n  console.log(\"LocationService -> getCity -> stateId\", stateId)\r\n  return this.ApiCall.getData('country/state/22/city/')\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  public getPosition(): Observable<any> {\r\n    return Observable.create(\r\n      (observer) => {\r\n        navigator.geolocation.watchPosition((pos: any) => {\r\n          observer.next(pos);\r\n        }),\r\n          () => {\r\n            console.log('Position is not available');\r\n          },\r\n        {\r\n          enableHighAccuracy: true\r\n        };\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiCallService } from './api/apicall.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MainService {\r\n\r\n  constructor(public api: ApiCallService) {\r\n  }\r\n\r\n  getProfile() {\r\n    return this.api.getData('doctor/profile/details');\r\n  }\r\n\r\n  updateUserprofile(data) {\r\n    return this.api.putData('doctor/update/my/profile', data);\r\n  }\r\n\r\n  addTimeSlot(data) {\r\n    return this.api.postData('slots/', data);\r\n  }\r\n\r\n  getTimeSlot() {\r\n    return this.api.getData('slot');\r\n  }\r\n\r\n  addclinic(data){\r\n    return this.api.postData('clinic/',data)\r\n  }\r\n\r\n  addlocation(data){\r\n    return this.api.postData('clinic/location/add/web/location',data)\r\n  }\r\n\r\n  addTime(data){\r\n    return this.api.postData('clinic/timings/web/doctors/timing',data)\r\n  }\r\n\r\n  addTimingVisit(data){\r\n    return this.api.postData('clinic/members/',data)\r\n  }\r\n\r\n  getDOCClinic(data){\r\n    return this.api.postData('clinic/timings/clinic/details/',data);\r\n  }\r\n\r\n  getTimeSlotByUserId(id) {\r\n    return this.api.getData('slot/' + id);\r\n  }\r\n\r\n  getCountry() {\r\n    return this.api.getData('country');\r\n  }\r\n\r\n  getCountryId(countryId){\r\n    return this.api.getData('country/country/'+countryId)\r\n  }\r\n\r\n  getState(countryId) {\r\n    return this.api.getData('country/' + countryId + '/state');\r\n  }\r\n\r\n  getStateById(stateId){\r\n    return this.api.getData('country/state/'+stateId)\r\n  }\r\n\r\n  getCity(stateId) {\r\n    return this.api.getData('country/state/' + stateId + '/city');\r\n  }\r\n\r\n  getCityId(cityId){\r\n    return this.api.getData('country/city/'+cityId)\r\n  }\r\n\r\n  getTimeZone() {\r\n    return this.api.getData('country/time/zhone');\r\n  }\r\n\r\n  getSpeciality() {\r\n    return this.api.getData('country/specialisations');\r\n  }\r\n\r\n  getProfileCompletion() {\r\n    return this.api.getData('doctor/profile/percentage');\r\n  }\r\n\r\n  getDegree(){\r\n    return this.api.getData('qualification/get/all');\r\n  }\r\n\r\n  getLabs(){\r\n    return this.api.getData('lab/get/all');\r\n  }\r\n\r\n  getProfilevalidation(id){\r\n    return this.api.postData('doctor/profile/validity/by/',id);\r\n  }\r\n\r\n  addDegree(data){\r\n    return this.api.postData('qualification/add',data);\r\n  }\r\n\r\n  addDoctorDegree(data){\r\n    return this.api.postData('doctor/qualification/add',data);\r\n  }\r\n\r\n  getDoctorEducation(){\r\n    return this.api.getData('doctor/qualification/all');\r\n  }\r\n\r\n  getAllClinic(){\r\n    return this.api.getData('clinic/all');\r\n  }\r\n\r\n  deleteClinicById(id){\r\n    return this.api.deleteData('clinic/delete/by/'+id)\r\n  }\r\n\r\n  deleteLocationById(id){\r\n    return this.api.deleteData('clinic/location/delete/by/'+id)\r\n  }\r\n\r\n  deleteTimeById(id){\r\n    return this.api.deleteData('clinic/timings/delete/by/'+id)\r\n  }\r\n\r\n  getAddressByClinic(id){\r\n    return this.api.getData('clinic/location/by/clinicId/'+id);\r\n    // http://whealthylife.in:3311/api/v1/clinic/location/by/clinicId/:clinicId\r\n  }\r\n\r\n  getAllLab(){\r\n    return this.api.getData('lab/get/all');\r\n  }\r\n\r\n  getPackageByLab(){\r\n    return this.api.getData('labs/packages/by/labId/:id');\r\n  }\r\n\r\n  getallPackage(){\r\n    return this.api.getData('labs/packages/all');\r\n  }\r\ngetAllDtailsLabs(id)\r\n{\r\n  return this.api.getData('labs/packages/by/packageId/'+id)\r\n}\r\n\r\ngetCustReview(id){\r\n  return this.api.getData('customer/review/get/by/lab/:id'+id);\r\n}\r\n\r\ngetAllProfile(){\r\n  return this.api.getData('profile/all');\r\n}\r\n\r\ngetProfileById(id){\r\n  return this.api.getData('profile/by/profileId/'+id)\r\n}\r\n\r\ngetTestById(id){\r\n  return this.api.getData('tests/by/labTest/'+id)\r\n}\r\n\r\n\r\nvalidateMorSlot(data){\r\n  return this.api.postData('slots/validate/morningSlot',data)\r\n}\r\n\r\nvalidateAfterSlot(data){\r\n  return this.api.postData('slots/validate/afternoonSlot',data)\r\n}\r\n\r\nvalidateEveSlot(data){\r\n  return this.api.postData('slots/validate/eveningSlot',data)\r\n}\r\n\r\nvalidatenightSlot(data){\r\n  return this.api.postData('slots/validate/nightSlot',data)\r\n}\r\n\r\n\r\n}\r\n","import { ApiCallService } from \"./api/apicall.service\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class SpecialityService {\r\n  constructor(public Api: ApiCallService) {}\r\n\r\n  getSpecialization() {\r\n    return this.Api.getData(\"specialization/get/all/\");\r\n  }\r\n  getSpecializationAll() {\r\n    return this.Api.getData(\"specialization/get/all\");\r\n  }\r\n\r\n  addSpecialization(data){\r\n    return this.Api.postData('doctor/specialization/add',data)\r\n  }\r\n\r\n  getTestMaster() {\r\n    return this.Api.getData(\"tests/all\");\r\n  }\r\n  getTopSpec() {\r\n    return this.Api.getData(\"specialization/get/top/counts\");\r\n  }\r\n  getCount(){\r\n    return this.Api.getData(\"doctor/all/counts\")\r\n  }\r\n\r\n  getDoctorSpecility(){\r\n    return this.Api.getData('doctor/specialization/all');\r\n  }\r\n  \r\n}\r\n","import { ApiCallService } from './api/apicall.service';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TreatmentsService {\r\n  constructor(private ApiCallService:ApiCallService) { }\r\ngetTreatmentsbyId(data){\r\nreturn this.ApiCallService.getData('treatment/get/all/by/doctor/'+data)\r\n}\r\ngetTreatmentUsingSpecializetion(specialization){\r\n  return this.ApiCallService.getData('treatment/get/all/by/'+specialization)\r\n}\r\n\r\ngetTreatmentUsingSpecializetionsID(specialization){\r\n  return this.ApiCallService.postData('treatment/get/by/specializations', specialization)\r\n}\r\n\r\n// getDoctorTreatmentbyid(data){\r\n//   return this.ApiCallService.postData('treatment/get/all',data)\r\n// }\r\naddDoctorspec(data){\r\n  return this.ApiCallService.postData('doctor/specialization/add',data)\r\n\r\n}\r\n\r\nnewaddspecialization(data){\r\n  return this.ApiCallService.postData('specialization/add',data)\r\n}\r\n\r\naddDoctorTreatment(data){\r\n  return this.ApiCallService.postData('doctor/treatments/add',data)\r\n}\r\n\r\ngetDoctreatment(){\r\n  return this.ApiCallService.getData('doctor/treatments/all')\r\n}\r\n\r\ngetAllTreatment(){\r\n  return this.ApiCallService.getData('treatment/get/all')\r\n}\r\n\r\n}\r\n"]}