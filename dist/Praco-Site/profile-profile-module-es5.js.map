{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/drag-drop.js","webpack:///src/app/modules/doctor-dashbord/profile/clinic-details/clinic-details.component.ts","webpack:///src/app/modules/doctor-dashbord/profile/clinic-details/clinic-details.component.html","webpack:///src/app/modules/doctor-dashbord/profile/clinic-location/clinic-location.component.ts","webpack:///src/app/modules/doctor-dashbord/profile/clinic-location/clinic-location.component.html","webpack:///src/app/modules/doctor-dashbord/profile/clinic-proof/clinic-proof.component.ts","webpack:///src/app/modules/doctor-dashbord/profile/clinic-proof/clinic-proof.component.html","webpack:///src/app/modules/doctor-dashbord/profile/clinic-timings/clinic-timings.component.ts","webpack:///src/app/modules/doctor-dashbord/profile/clinic-timings/clinic-timings.component.html","webpack:///src/app/modules/doctor-dashbord/profile/connect-clinic/connect-clinic.component.ts","webpack:///src/app/modules/doctor-dashbord/profile/connect-clinic/connect-clinic.component.html","webpack:///src/app/modules/doctor-dashbord/profile/consultant-details/consultant-details.component.ts","webpack:///src/app/modules/doctor-dashbord/profile/consultant-details/consultant-details.component.html","webpack:///src/app/modules/doctor-dashbord/profile/dynamic-autocomplete/dynamic-autocomplete.component.ts","webpack:///src/app/modules/doctor-dashbord/profile/dynamic-autocomplete/dynamic-autocomplete.component.html","webpack:///src/app/modules/doctor-dashbord/profile/edit-profile/edit-profile.component.ts","webpack:///src/app/modules/doctor-dashbord/profile/edit-profile/edit-profile.component.html","webpack:///src/app/modules/doctor-dashbord/profile/education/education.component.ts","webpack:///src/app/modules/doctor-dashbord/profile/education/education.component.html","webpack:///src/app/modules/doctor-dashbord/profile/identity-proof/identity-proof.component.ts","webpack:///src/app/modules/doctor-dashbord/profile/identity-proof/identity-proof.component.html","webpack:///src/app/modules/doctor-dashbord/profile/profile-routing.module.ts","webpack:///src/app/modules/doctor-dashbord/profile/profile.component.ts","webpack:///src/app/modules/doctor-dashbord/profile/profile.component.html","webpack:///src/app/modules/doctor-dashbord/profile/profile.module.ts","webpack:///src/app/modules/doctor-dashbord/profile/registration-proof/registration-proof.component.ts","webpack:///src/app/modules/doctor-dashbord/profile/registration-proof/registration-proof.component.html","webpack:///src/app/modules/doctor-dashbord/profile/registration/registration.component.ts","webpack:///src/app/modules/doctor-dashbord/profile/registration/registration.component.html","webpack:///src/app/services/upload.service.ts"],"names":["extendStyles","dest","source","key","hasOwnProperty","toggleNativeDragInteractions","element","enable","userSelect","style","touchAction","webkitUserDrag","webkitTapHighlightColor","msUserSelect","webkitUserSelect","MozUserSelect","parseCssTimeUnitsToMs","value","multiplier","toLowerCase","indexOf","parseFloat","getTransformTransitionDurationInMs","computedStyle","getComputedStyle","transitionedProperties","parseCssPropertyValue","property","find","prop","propertyIndex","rawDurations","rawDelays","name","getPropertyValue","split","map","part","trim","getMutableClientRect","clientRect","getBoundingClientRect","top","right","bottom","left","width","height","isInsideClientRect","x","y","adjustClientRect","isPointerNearClientRect","rect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","_document","_viewportRuler","positions","Map","clear","elements","set","scrollPosition","getViewportScrollPosition","forEach","scrollTop","scrollLeft","event","target","cachedPosition","get","scrolledParentNode","documentElement","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","position","node","contains","deepCloneNode","clone","cloneNode","descendantsWithId","querySelectorAll","nodeName","removeAttribute","i","length","transferCanvasData","transferInputData","transferData","selector","callback","descendantElements","cloneElements","cloneUniqueId","type","context","getContext","drawImage","_a","passiveEventListenerOptions","passive","activeEventListenerOptions","MOUSE_EVENT_IGNORE_TIME","DragRef","_config","_ngZone","_dragDropRegistry","_passiveTransform","_activeTransform","_moveEvents","_pointerMoveSubscription","EMPTY","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_handles","_disabledHandles","Set","_direction","dragStartDelay","_disabled","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","next","targetHandle","handle","has","disabled","_initializeDragSequence","_rootElement","_pointerMove","preventDefault","pointerPosition","_getPointerPositionOnPage","_hasStartedDragging","distanceX","Math","abs","_pickupPositionOnPage","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","Date","now","_dragStartTime","_getDragStartDelay","_endDragSequence","_dropContainer","isDragging","run","_startDragSequence","_previewRect","_preview","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","activeTransform","_applyRootElementTransform","SVGElement","appliedTransform","setAttribute","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","withRootElement","_parentPositions","registerDragItem","_placeholder","getPlaceholderElement","getRootElement","handles","_toggleNativeDragInteractions","template","_previewTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","runOutsideAngular","addEventListener","_initialTransform","undefined","_ownerSVGElement","ownerSVGElement","boundaryElement","unsubscribe","change","subscribe","_containInsideBoundaryOnResize","removeNode","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","complete","transform","add","direction","container","_previewRef","destroy","_placeholderRef","stopDragging","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","isTouchEvent","_lastTouchEventTime","dropContainer","parent","parentNode","preview","_createPreviewElement","placeholder","_createPlaceholderElement","anchor","createComment","insertBefore","display","body","appendChild","replaceChild","getPreviewInsertionPoint","start","_initialContainer","_initialIndex","getItemIndex","cache","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","draggable","pointerMove","pointerUp","scroll","scrollEvent","_updateOnScroll","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","currentIndex","isPointerOverContainer","_isOverContainer","item","previousIndex","previousContainer","drop","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","getTransform","previewConfig","previewClass","rootRect","viewRef","viewContainer","createEmbeddedView","detectChanges","getRootNode","matchElementSize","pointerEvents","margin","zIndex","classList","Array","isArray","className","Promise","resolve","placeholderRect","duration","handler","propertyName","removeEventListener","clearTimeout","timeout","setTimeout","placeholderConfig","placeholderTemplate","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","constrainPosition","pickupX","pickupY","boundaryRect","previewRect","minY","maxY","minX","maxX","clamp","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","setFreeDragPosition","touch","mouse","scrollDifference","handleScroll","newValue","round","min","max","removeChild","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","rootNodes","nodeType","ELEMENT_NODE","wrapper","createElement","sourceRect","moveItemInArray","array","fromIndex","toIndex","from","clamp$1","to","transferArrayItem","currentArray","targetArray","targetIndex","splice","copyArrayItem","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","AUTO_SCROLL_STEP","DropListRef","autoScrollDisabled","enterPredicate","sorted","_isDragging","_itemPositions","_previousSwap","drag","overlaps","_siblings","_orientation","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_cachedShadowRoot","_startScrollInterval","pipe","_scrollNode","incrementVerticalScroll","incrementHorizontalScroll","withScrollableParents","registerDropContainer","removeDropContainer","styles","_initialScrollSnap","msScrollSnapType","scrollSnapType","_cacheItems","sibling","_startReceiving","_listenToScrollEvents","index","newIndex","_draggables","_getItemIndexFromPointerPosition","activeDraggables","_activeDraggables","newPositionReference","parentElement","_shouldEnterAsFirstChild","reference","unshift","push","_cacheItemPositions","_cacheParentPositions","_reset","items","previousItems","_withDropContainer","draggedItems","filter","every","connectedTo","slice","orientation","_scrollableElements","reverse","findIndex","currentItem","size","pointerDelta","_clientRect","siblings","isHorizontal","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","isDraggedItem","offset","elementToOffset","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","window","elementToMeasure","getVisibleElement","sort","a","b","_stopReceiving","immediateSibling","end","itemPositions","reversed","lastItemRect","firstItemRect","_","floor","_canReceive","elementFromPoint","_getShadowRoot","nativeElement","activeSiblings","_sortFromLastPointerPosition","isReceiving","shadowRoot","predicate","amount","scrollBy","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","clientWidth","activeCapturingEventOptions","capture","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_preventDefaultWhileDragging","_persistentTouchmoveListener","startsWith","e","options","config","_clearGlobalListeners","instance","ɵfac","DragDropRegistry_Factory","t","ɵprov","factory","token","providedIn","ctorParameters","decorators","args","DEFAULT_CONFIG","DragDrop","DragDrop_Factory","CDK_DRAG_PARENT","CDK_DROP_LIST_GROUP","CdkDropListGroup","_items","CdkDropListGroup_Factory","ɵdir","selectors","inputs","exportAs","features","provide","useExisting","propDecorators","providers","CDK_DRAG_CONFIG","_uniqueIdCounter","CDK_DROP_LIST","ɵ0","CdkDropList","dragDrop","_changeDetectorRef","_dir","_group","_scrollDispatcher","_destroyed","id","_unsortedItems","_dropListRef","createDropList","data","_assignDefaults","_setupInputSyncSubscription","_handleEvents","_dropLists","_syncItemsWithRef","documentPosition","_dragRef","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","dispose","ref","withDirection","correspondingDropList","list","ngDevMode","console","warn","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","withOrientation","markForCheck","emit","draggingDisabled","listAutoScrollDisabled","listOrientation","withItems","getSortedItems","CdkDropList_Factory","hostAttrs","hostVars","hostBindings","CdkDropList_HostBindings","rf","ctx","outputs","useValue","host","CDK_DRAG_HANDLE","CdkDragHandle","parentDrag","_stateChanges","_parentDrag","CdkDragHandle_Factory","CDK_DRAG_PLACEHOLDER","CdkDragPlaceholder","templateRef","CdkDragPlaceholder_Factory","CDK_DRAG_PREVIEW","CdkDragPreview","_matchSize","CdkDragPreview_Factory","CdkDrag","_viewContainerRef","_selfHandle","observer","subscription","movedEvent","createDrag","addItem","_syncInputs","reset","getFreeDragPosition","onStable","_updateRootElement","changes","childHandleElements","rootElementSelector","withHandles","handleInstance","dragRef","disableHandle","enableHandle","freeDragPosition","rootSelectorChange","positionChange","firstChange","removeItem","getClosestMatchingAncestor","Error","boundary","dir","withBoundaryElement","_getBoundaryElement","withPlaceholderTemplate","withPreviewTemplate","CdkDrag_Factory","contentQueries","CdkDrag_ContentQueries","dirIndex","_t","first","CdkDrag_HostBindings","descendants","currentElement","matches","msMatchesSelector","DragDropModule","ɵmod","ɵinj","DragDropModule_Factory","imports","ngJitMode","declarations","exports","ClinicDetailsComponent","templateUrl","styleUrls","ClinicLocationComponent","mainService","messageService","router","uploadService","formBuilder","getProfile","profileForm","group","mobileNumber","email","landmark","secondFormGroup","thirdFormGroup","resData","patchValue","location","profileData","error","log","staper","address","state","city","pincode","country","isVerified","updateUserprofile","showToast","messageType","message","severity","summary","detail","onSave","ClinicProofComponent","establishmentProff","stepper","navigate","file","files","upload","res","browseFile","ClinicTimingsComponent","UserService","DoctorProfileService","fb","columns","dataSource","ELEMENT_DATA","dMO","dTU","dWE","dTH","dFR","dSA","dSU","timeSloats","TimeSloat2","SlotForm","MorStart0","MorStart1","MorStart2","MorStart3","MorStart4","MorStart5","MorStart6","MorEnd0","MorEnd1","MorEnd2","MorEnd3","MorEnd4","MorEnd5","MorEnd6","AftStart0","AftStart1","AftStart2","AftStart3","AftStart4","AftStart5","AftStart6","AftEnd0","AftEnd1","AftEnd2","AftEnd3","AftEnd4","AftEnd5","AftEnd6","EveStart0","EveStart1","EveStart2","EveStart3","EveStart4","EveStart5","EveStart6","EveEnd0","EveEnd1","EveEnd2","EveEnd3","EveEnd4","EveEnd5","EveEnd6","NigStart0","NigStart1","NigStart2","NigStart3","NigStart4","NigStart5","NigStart6","NigEnd0","NigEnd1","NigEnd2","NigEnd3","NigEnd4","NigEnd5","NigEnd6","profile","dirty","valid","slotsArray","day","morningSlot","controls","afternoonSlot","eveningSlot","nightSlot","addTimeSlot","err","removeControl","Day","MorningSlot","AfternoonSlots","EveningSlots","NightSlots","ConnectClinicComponent","hide","profileform","typeOfEstablishment","ConsultantDetailsComponent","dialog","displayedColumns","clinicList","hide1","DataClinic","getAllClinic","AllClinicName","dfgf","getClinicName","getCountry","getLocation","memberForm","clinicName","ClinicName1","fees","establishmentHour","hours","valueChanges","clinicId","visiteClinic","VisiteclinicId","getPosition","lat","coords","latitude","lang","longitude","countryList","countryId","getState","stateList","stateId","getCity","cityList","cityId","ClinicName","getDocClinic","_id","doctorId","getDOCClinic","resDataDoc","DocClinic","arr","Sr_No","Clinic_Name","Address","locationId","Action","dataSource1","paginator","ClinicDetails","IdClinic","IdLocation","IdTime","k","timing","startTime","endTime","resDataDel","DoctorId","deleteClinicById","DeleteCres","deleteLocationById","deleteLRes","deleteTimeById","deleteTRes","ngOnInit","data123","ClinicId","addTime","slotData","timeId","addclinic","ClinicData","data1","lng","addlocation","locData","SaveSlots","memData","locClinicId","timingId","timeClinicId","addTimingVisit","memDataTime","memData1","status","DOCClicnicId","DynamicAutocompleteComponent","myControl","question","added","onChange","option","onTouched","getList","getDegree","filteredOptions","newOption","substring","setValue","writeValue","controlValue","some","entry","shortName","selectedValue","fn","results","multi","optionSelected","EditProfileComponent","SpecialityService","TreatmentsService","languages","label","visible","selectable","removable","separatorKeysCodes","fruitCtrl","allFruits","treatment","addOption","element1","tempData1","specialitie","specializationArray","treatmentArray","specialityFilter","specialitiesId","treatmentID","avatar","firstName","lastName","gender","dob","bloodGroup","timeZone","extraPhoneNumber","language","getSpeciality","treatmentAll","getTimeZone","specialityId","treatmentId","stateid","cityid","getDoctorSpecility","specData","specializationId","getDoctreatment","trtData","getSpecialization","speciality","getAllTreatment","resdata","treatment1","ele","fullName","includes","addSpecialization","SpecData","data2","addDoctorTreatment","TreatData","evt","charCode","which","keyCode","onInput","onInput1","EducationComponent","MainService","reg","arrdata","lengthValue","ylength","InitPostService","getDegreesOnline","getAll","year","getFullYear","resD","allDegree","Degree","val","addDegree","degree","getDoctorEducation","resDtat","Data","qualificationId","completionYear","college","addControl","controlName","rem","degId","daya","qualificationArray","addDoctorDegree","save","IdentityProofComponent","submitted","Twoimgarray","firstFormGroup","identityFile","browseFile1","browseFile2","routes","path","component","ProfileRoutingModule","forChild","ProfileComponent","cook","getUserInfo","getDoctodata","getDoctorProfileid","errr","ProfileModule","RegistrationProofComponent","registrationProff","RegistrationComponent","isLinear","registrationNumber","required","registrationCouncil","registrationYear","invalid","selected","completed","UploadService","apiCall","url","apiUrl","uploadUrl"],"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","file":"profile-profile-module-es5.js","sourcesContent":["import { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, ElementRef, ChangeDetectorRef, Optional, SkipSelf, Output, TemplateRef, ViewContainerRef, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler, ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document, _viewportRuler) {\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this._viewportRuler.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element)\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = event.target;\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        // Used when figuring out whether an element is inside the scroll parent. If the scrolled\n        // parent is the `document`, we use the `documentElement`, because IE doesn't support\n        // `contains` on the `document`.\n        const scrolledParentNode = target === this._document ? target.documentElement : target;\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && scrolledParentNode.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    clone.value = source.value;\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch (_a) { }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._handles.find(handle => {\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains(target));\n                });\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            // Prevent the default action as early as possible in order to block\n            // native actions like dragging the selected text or images with the mouse.\n            event.preventDefault();\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!this._dropContainer || !this._dropContainer.isDragging()) {\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        this.withRootElement(element);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, false));\n        this._toggleNativeDragInteractions();\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeNode(this._rootElement);\n        }\n        removeNode(this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate =\n            this._previewTemplate = this._anchor = null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        this._disabledHandles.delete(handle);\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        if (this._preview) {\n            removeNode(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeNode(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const preview = this._preview = this._createPreviewElement();\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            const anchor = this._anchor = this._anchor || this._document.createComment('');\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            this.started.next({ source: this }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && event.target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor || '';\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.subscribe(scrollEvent => {\n            this._updateOnScroll(scrollEvent);\n        });\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement = previewTemplate && previewTemplate.template &&\n            !previewTemplate.matchSize ? { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition =\n            this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialContainer, isPointerOverContainer, distance, this._initialIndex);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled ? this._initialIndex : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this)\n                });\n            });\n        }\n        this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n        this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._rootElement.getBoundingClientRect() : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform =\n                    getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element.getBoundingClientRect());\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: `${this._config.zIndex || 1000}`\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event) ?\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n            // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n            // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n            // throwing an error. The value returned here will be incorrect, but since this only\n            // breaks inside a developer tool and the value is only used for secondary information,\n            // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n            (event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }) : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const previewRect = this._previewRect;\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            x = clamp(x, minX, maxX);\n            y = clamp(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = event.target;\n            // ClientRect dimensions are based on the scroll position of the page and its parent node so\n            // we have to update the cached boundary ClientRect if the user has scrolled. Check for\n            // the `document` specifically since IE doesn't support `contains` on it.\n            if (this._boundaryRect && (target === this._document ||\n                (target !== this._boundaryElement && target.contains(this._boundaryElement)))) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        const cachedPosition = this._parentPositions.positions.get(this._document);\n        return cachedPosition ? cachedPosition.scrollPosition :\n            this._viewportRuler.getViewportScrollPosition();\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove a node from the DOM and to do all the necessary null checks.\n * @param node Node to be removed.\n */\nfunction removeNode(node) {\n    if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the element into which the drag preview should be inserted. */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp$1(fromIndex, array.length - 1);\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n */\nconst AUTO_SCROLL_STEP = 2;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occured and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = { drag: null, delta: 0, overlaps: false };\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Direction in which the list is oriented. */\n        this._orientation = 'vertical';\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Layout direction of the drop list. */\n        this._direction = 'ltr';\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._siblings.forEach(sibling => sibling._startReceiving(this));\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else if (this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            const reference = activeDraggables[0].getRootElement();\n            reference.parentNode.insertBefore(placeholder, reference);\n            activeDraggables.unshift(item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed and also parent rects.\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param previousIndex Index of the item when dragging started.\n     *\n     * @breaking-change 11.0.0 `previousIndex` parameter to become required.\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer, distance, previousIndex) {\n        this._reset();\n        // @breaking-change 11.0.0 Remove this fallback logic once `previousIndex` is a required param.\n        if (previousIndex == null) {\n            previousIndex = previousContainer.getItemIndex(item);\n        }\n        this.dropped.next({ item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._cacheItems();\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        this._orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, currentItem => currentItem.drag === item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentIndex = findIndex(siblings, currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* NONE */;\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        }).sort((a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                rootElement.style.transform = '';\n            }\n        });\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this._orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n    }\n    /** Caches the current items in the list and their positions. */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!isInsideClientRect(this._clientRect, x, y) || !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    // Since we know the amount that the user has scrolled we can shift all of the\n                    // client rectangles ourselves. This is cheaper than re-measuring everything and\n                    // we can avoid inconsistent behavior where we might be measuring the element before\n                    // its position has changed.\n                    this._itemPositions.forEach(({ clientRect }) => {\n                        adjustClientRect(clientRect, scrollDifference.top, scrollDifference.left);\n                    });\n                    // We need two loops for this, because we want all of the cached\n                    // positions to be up-to-date before we re-sort the item.\n                    this._itemPositions.forEach(({ drag }) => {\n                        if (this._dragDropRegistry.isDragging(drag)) {\n                            // We need to re-sort the item manually, because the pointer move\n                            // events won't be dispatched while the user is scrolling.\n                            drag._sortFromLastPointerPosition();\n                        }\n                    });\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = shadowRoot || this._document;\n        }\n        return this._cachedShadowRoot;\n    }\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @param array Array in which to look for matches.\n * @param predicate Function used to determine whether an item is a match.\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* NONE */;\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = new Set();\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /** Emits when the viewport has been scrolled while the user is dragging an item. */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.has(drag);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) { return new (t || DragDropRegistry)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nDragDropRegistry.ɵprov = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = function DragDrop_Factory(t) { return new (t || DragDrop)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DragDropRegistry)); };\nDragDrop.ɵprov = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDrop, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.ViewportRuler }, { type: DragDropRegistry }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) { return new (t || CdkDropListGroup)(); };\nCdkDropListGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropListGroup, selectors: [[\"\", \"cdkDropListGroup\", \"\"]], inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, exportAs: [\"cdkDropListGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }])] });\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropListGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup',\n                providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }]\n            }]\n    }], function () { return []; }, { disabled: [{\n            type: Input,\n            args: ['cdkDropListGroupDisabled']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\nconst ɵ0 = undefined;\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _dir, _group, \n    /**\n     * @deprecated _scrollDispatcher parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    _scrollDispatcher, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        this._scrollDispatcher = _scrollDispatcher;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            // @breaking-change 11.0.0 Remove null check for _scrollDispatcher once it's required.\n            if (!this._scrollableParentsResolved && this._scrollDispatcher) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n}\nCdkDropList.ɵfac = function CdkDropList_Factory(t) { return new (t || CdkDropList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST_GROUP, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8)); };\nCdkDropList.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropList, selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]], hostAttrs: [1, \"cdk-drop-list\"], hostVars: 7, hostBindings: function CdkDropList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n    } }, inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], id: \"id\", enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], data: [\"cdkDropListData\", \"data\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, exportAs: [\"cdkDropList\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CDK_DROP_LIST_GROUP, useValue: ɵ0 },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ])] });\n/** Keeps track of the drop lists that are currently on the page. */\nCdkDropList._dropLists = [];\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DROP_LIST_GROUP,] }, { type: SkipSelf }] },\n    { type: ScrollDispatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] }\n];\nCdkDropList.propDecorators = {\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropList, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CDK_DROP_LIST_GROUP, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: CdkDropListGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DROP_LIST_GROUP]\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc1.ScrollDispatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }]; }, { connectedTo: [{\n            type: Input,\n            args: ['cdkDropListConnectedTo']\n        }], id: [{\n            type: Input\n        }], enterPredicate: [{\n            type: Input,\n            args: ['cdkDropListEnterPredicate']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDropListDropped']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDropListEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDropListExited']\n        }], sorted: [{\n            type: Output,\n            args: ['cdkDropListSorted']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDropListDisabled']\n        }], sortingDisabled: [{\n            type: Input,\n            args: ['cdkDropListSortingDisabled']\n        }], autoScrollDisabled: [{\n            type: Input,\n            args: ['cdkDropListAutoScrollDisabled']\n        }], orientation: [{\n            type: Input,\n            args: ['cdkDropListOrientation']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDropListLockAxis']\n        }], data: [{\n            type: Input,\n            args: ['cdkDropListData']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n    }\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) { return new (t || CdkDragHandle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 12)); };\nCdkDragHandle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragHandle, selectors: [[\"\", \"cdkDragHandle\", \"\"]], hostAttrs: [1, \"cdk-drag-handle\"], inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }])] });\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }, { type: SkipSelf }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragHandle, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                },\n                providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_PARENT]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, { disabled: [{\n            type: Input,\n            args: ['cdkDragHandleDisabled']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) { return new (t || CdkDragPlaceholder)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPlaceholder, selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]], inputs: { data: \"data\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }])] });\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPlaceholder]',\n                providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() { return this._matchSize; }\n    set matchSize(value) { this._matchSize = coerceBooleanProperty(value); }\n}\nCdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) { return new (t || CdkDragPreview)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPreview.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPreview, selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]], inputs: { matchSize: \"matchSize\", data: \"data\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }])] });\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }],\n    matchSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPreview, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPreview]',\n                providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { matchSize: [{\n            type: Input\n        }], data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            }))).subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ?\n                config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ?\n                config.pointerDirectionChangeThreshold : 5,\n            zIndex: config === null || config === void 0 ? void 0 : config.zIndex\n        });\n        this._dragRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((handles) => {\n                const childHandleElements = handles\n                    .filter(handle => handle._parentDrag === this)\n                    .map(handle => handle.element);\n                // Usually handles are only allowed to be a descendant of the drag element, but if\n                // the consumer defined a different drag root, we should allow the drag element\n                // itself to be a handle too.\n                if (this._selfHandle && this.rootElementSelector) {\n                    childHandleElements.push(this.element);\n                }\n                this._dragRef.withHandles(childHandleElements);\n            }), \n            // Listen if the state of any of the handles changes.\n            switchMap((handles) => {\n                return merge(...handles.map(item => {\n                    return item._stateChanges.pipe(startWith(item));\n                }));\n            }), takeUntil(this._destroyed)).subscribe(handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                const dragRef = this._dragRef;\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            });\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`cdkDrag must be attached to an element node. ` +\n                `Currently attached to \"${rootElement.nodeName}\".`);\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        const element = coerceElement(boundary);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    matchSize: this._previewTemplate.matchSize,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = (typeof dragStartDelay === 'object' && dragStartDelay) ?\n                    dragStartDelay : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(() => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(() => {\n            this.released.emit({ source: this });\n        });\n        ref.ended.subscribe(event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n    }\n}\nCdkDrag.ɵfac = function CdkDrag_Factory(t) { return new (t || CdkDrag)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_HANDLE, 10)); };\nCdkDrag.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDrag, selectors: [[\"\", \"cdkDrag\", \"\"]], contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_PREVIEW, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_PLACEHOLDER, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_HANDLE, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previewTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._handles = _t);\n    } }, hostAttrs: [1, \"cdk-drag\"], hostVars: 4, hostBindings: function CdkDrag_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n    } }, inputs: { disabled: [\"cdkDragDisabled\", \"disabled\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], data: [\"cdkDragData\", \"data\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, exportAs: [\"cdkDrag\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: CdkDragHandle, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [CDK_DRAG_HANDLE,] }] }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CDK_DRAG_HANDLE, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CDK_DRAG_PREVIEW,] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CDK_DRAG_PLACEHOLDER,] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    previewClass: [{ type: Input, args: ['cdkDragPreviewClass',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDrag, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': 'cdk-drag',\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DROP_LIST]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_HANDLE]\n            }] }]; }, { started: [{\n            type: Output,\n            args: ['cdkDragStarted']\n        }], released: [{\n            type: Output,\n            args: ['cdkDragReleased']\n        }], ended: [{\n            type: Output,\n            args: ['cdkDragEnded']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDragEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDragExited']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDragDropped']\n        }], moved: [{\n            type: Output,\n            args: ['cdkDragMoved']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDragDisabled']\n        }], dragStartDelay: [{\n            type: Input,\n            args: ['cdkDragStartDelay']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDragLockAxis']\n        }], constrainPosition: [{\n            type: Input,\n            args: ['cdkDragConstrainPosition']\n        }], previewClass: [{\n            type: Input,\n            args: ['cdkDragPreviewClass']\n        }], boundaryElement: [{\n            type: Input,\n            args: ['cdkDragBoundary']\n        }], rootElementSelector: [{\n            type: Input,\n            args: ['cdkDragRootElement']\n        }], _handles: [{\n            type: ContentChildren,\n            args: [CDK_DRAG_HANDLE, { descendants: true }]\n        }], _previewTemplate: [{\n            type: ContentChild,\n            args: [CDK_DRAG_PREVIEW]\n        }], _placeholderTemplate: [{\n            type: ContentChild,\n            args: [CDK_DRAG_PLACEHOLDER]\n        }], data: [{\n            type: Input,\n            args: ['cdkDragData']\n        }], freeDragPosition: [{\n            type: Input,\n            args: ['cdkDragFreeDragPosition']\n        }] }); })();\n/** Gets the closest ancestor of an element that matches a selector. */\nfunction getClosestMatchingAncestor(element, selector) {\n    let currentElement = element.parentElement;\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            currentElement.msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DragDropModule {\n}\nDragDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\nDragDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DragDropModule_Factory(t) { return new (t || DragDropModule)(); }, providers: [\n        DragDrop,\n    ], imports: [CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: function () { return [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder]; }, exports: function () { return [CdkScrollableModule,\n        CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n\n//# sourceMappingURL=drag-drop.js.map","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-clinic-details',\r\n  templateUrl: './clinic-details.component.html',\r\n  styleUrls: ['./clinic-details.component.scss']\r\n})\r\nexport class ClinicDetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"bg-white p-sm-3\">\r\n    <div class=\"progress \">\r\n        <div class=\"progress-bar \" role=\"progressbar\" style=\"width: 100%\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n            <div class=\" mb-4 h1 font-weight-bold text-dark pb-5\">Establishment basic details</div>\r\n\r\n            <form>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"RegistrationNumber\">Establishment name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"RegistrationNumber\" placeholder=\"1234 \">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"RegistrationCouncil\">City</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"RegistrationCouncil\" placeholder=\"\">\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"RegistrationCouncil\">Locality</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"RegistrationCouncil\" placeholder=\"\">\r\n                </div>\r\n                <hr class=\"mt-5 mb-5\">\r\n                <div class=\"row\">\r\n                    <button type=\"button\" class=\"btn btn-outline-dark px-5 h3\" [routerLink]=\"['/Doctor/Profile/Connect_clinic']\" routerLinkActive=\"router-link-active\"> <i class=\"fa fa-chevron-left\" aria-hidden=\"true\"></i> Back</button>\r\n                    <button type=\"button\" class=\"btn btn-warning px-5 h3 butsetr\" [routerLink]=\"['/Doctor/Profile']\" routerLinkActive=\"router-link-active\">Contnue</button></div>\r\n\r\n\r\n            </form>\r\n        </div>\r\n        <div class=\"col-md-3 col-lg-4 offset-md-1\">\r\n            <div class=\" d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\" style=\"border: 1px solid #14aa9b;\">\r\n\r\n                <div class=\" bg p-4 textcol\">\r\n                    <div><i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i> </div>\r\n                    <p class=\"stext font-weight-bold\">\r\n                        Basic details about your practice helps patients reach you easily for appointment booking and inquiries.</p>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</section>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MainService } from 'src/app/services/main.service';\r\nimport { UploadService } from 'src/app/services/upload.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-clinic-location',\r\n  templateUrl: './clinic-location.component.html',\r\n  styleUrls: ['./clinic-location.component.scss']\r\n})\r\nexport class ClinicLocationComponent implements OnInit {\r\n  items: any = [];\r\n  profileData: any;\r\n  profileForm: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  thirdFormGroup: FormGroup;\r\n\r\n  @ViewChild('stepper') stepper: MatStepper;\r\n\r\n  constructor(public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public router: Router,\r\n    public uploadService: UploadService,\r\n    public formBuilder:FormBuilder) {\r\n    \r\n    this.getProfile();\r\n  }\r\n\r\n  ngOnInit() { \r\n    this.profileForm = this.formBuilder.group({\r\n      mobileNumber: [''],\r\n      email: [''],\r\n      landmark: [''],\r\n    })\r\n\r\n    this.secondFormGroup = this.formBuilder.group({})\r\n    this.thirdFormGroup =this.formBuilder.group({})\r\n\r\n  }\r\n\r\n  getProfile() {\r\n    this.mainService.getProfile().then(resData => {\r\n      this.profileForm.patchValue({\r\n        ...resData.data,\r\n        landmark: resData.data.location.landmark\r\n      });\r\n      this.profileData = resData.data;\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> getProfile -> error\", error);\r\n    })\r\n  }\r\n\r\n  onSave(staper: MatStepper) {\r\n    var data = {\r\n      ...this.profileForm.value,\r\n      location: {\r\n        landmark: this.profileForm.value.landmark,\r\n        address: this.profileData.location.address,\r\n        state: this.profileData.location.state,\r\n        city: this.profileData.location.city,\r\n        pincode: this.profileData.location.pincode,\r\n        country: this.profileData.location.country,\r\n        isVerified: 'Yes'\r\n      }\r\n    }\r\n    this.mainService.updateUserprofile(data).then(resData => {\r\n      this.showToast('success', 'Profile', 'Profile updated successfully');\r\n      staper.next();\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> onSave -> error\", error)\r\n    })\r\n  }\r\n\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<p-toast class=\"custom-error\" [showTransformOptions]=\"'translateX(100%)'\"></p-toast>\r\n<section>\r\n    <mat-horizontal-stepper labelPosition=\"bottom\" linear mode #stepper>\r\n        <mat-step [stepControl]=\"profileForm\"  disableRipple=\"true\" >\r\n                <ng-template matStepLabel>Location</ng-template>\r\n                <section class=\"bg-white p-sm-3\">\r\n                    <form  [formGroup]=\"profileForm\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n                                    <p class=\"mb-2 \" style=\"font-size: 15px;\">\r\n                                        Dr. {{profileData?.firstName}} {{profileData?.lastName}}</p>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"RegistrationNumber\">Phone number</label>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-12\">\r\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"mobileNumber\"\r\n                                                    id=\"RegistrationNumber\" placeholder=\"+91 8989788988\" disabled=\"true\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"email\">Email Address</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"email\" id=\"email\" disabled=\"true\"\r\n                                            placeholder=\"example@gmail.com\">\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"landmark\">Street address</label>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"landmark\" formControlName=\"landmark\"\r\n                                            placeholder=\"Enter your address\">\r\n                                    </div>\r\n                                    <hr class=\"mt-5 mb-5\">\r\n                                    <div class=\"row\">\r\n                                        <button mat-raised-button [routerLink]=\"['/Doctor/Profile']\">\r\n                                            <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i>\r\n                                            Back\r\n                                        </button>\r\n                                        <button style=\"margin-left:10px;\" mat-raised-button color=\"warn\" (click)=\"onSave(stepper)\" class=\r\n                                        \"themeColorBtn\">\r\n                                        Save and continue\r\n                                        <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3 col-lg-4 offset-md-1\">\r\n                                    <div class=\" d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n                                        style=\"border: 1px solid #14aa9b;\">\r\n                                        <div class=\" bg p-4 textcol\">\r\n                                            <div><i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i> </div>\r\n                                            <p class=\"stext font-weight-bold\">\r\n                                                This will help your patients to reach your establishment easily.</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </section>\r\n        </mat-step>\r\n        <mat-step [stepControl]=\"secondFormGroup\" disableRipple=\"true\" >\r\n            <form [formGroup]=\"secondFormGroup\">\r\n                <ng-template matStepLabel>Details of consultant doctor</ng-template>\r\n                <app-consultant-details [stepper]=\"stepper\"></app-consultant-details>\r\n            </form>\r\n        </mat-step>\r\n        <mat-step [stepControl]=\"thirdFormGroup\" disableRipple=\"true\">\r\n            <form [formGroup]=\"thirdFormGroup\" >\r\n                <ng-template matStepLabel>Establishment Timings</ng-template>\r\n                <app-clinic-timings [stepper]=\"stepper\"></app-clinic-timings>\r\n            </form>\r\n        </mat-step>\r\n    </mat-horizontal-stepper>\r\n</section>\r\n\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MainService } from 'src/app/services/main.service';\r\nimport { UploadService } from 'src/app/services/upload.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-clinic-proof',\r\n  templateUrl: './clinic-proof.component.html',\r\n  styleUrls: ['./clinic-proof.component.scss']\r\n})\r\nexport class ClinicProofComponent implements OnInit {\r\n\r\n  @Input() stepper: MatStepper;\r\n\r\n  items: any = [];\r\n  establishmentProff: any;\r\n  profileData: any;\r\n\r\n  constructor(public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public router: Router,\r\n    public uploadService: UploadService) {\r\n    this.getProfile();\r\n  }\r\n\r\n  getProfile() {\r\n    this.mainService.getProfile().then(resData => {\r\n      this.profileData = resData.data;\r\n      this.establishmentProff = this.profileData.establishmentProff;\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> getProfile -> error\", error);\r\n    })\r\n  } \r\n\r\n  onSave() {\r\n\r\n    if(this.establishmentProff.length === ''){\r\n      return;\r\n    }\r\n\r\n\r\n    this.mainService.updateUserprofile({ establishmentProff: this.establishmentProff }).then(resData => {\r\n      this.showToast('success', 'Profile', 'Profile updated successfully');\r\n      this.stepper.next();\r\n      this.router.navigate(['/Doctor/Profile/']);\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> onSave -> error\", error)\r\n    })\r\n  }\r\n\r\n  browseFile(event) {\r\n    const file = event.target.files;\r\n    this.uploadService.upload(file).then(res => {\r\n      this.establishmentProff = res.files[0];\r\n    }).catch(error => {\r\n      console.error('error', error);\r\n    });\r\n  }\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","<section class=\"bg-white p-sm-3\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n      <p class=\"mb-2\" style=\"font-size: 15px;\">Dr. {{profileData?.firstName}} {{profileData?.lastName}}</p>\r\n      <form>\r\n        <div class=\"row\">\r\n          <div class=\"border bgh m-auto\">\r\n\r\n            <img src=\"{{establishmentProff}}\" class=\"img-fluid\"\r\n                                           \r\n            style=\"padding: 0px;width:100%; height: 150px;background-color: #eadfdf;\">\r\n\r\n            <input type=\"file\" class=\"d-none\" #file (change)=\"browseFile($event)\">\r\n            <span (click)=\"file.click()\" class=\"btn border bg-white  z-index\" style=\"position: absolute;top: 0;left: 0;font-size: 1rem !important;\">\r\n              <i class=\"fa fa-upload\" aria-hidden=\"true\" style=\"margin: 0px;\"></i>\r\n\r\n          </span>\r\n          \r\n          </div>\r\n\r\n          <div *ngIf=\"establishmentProff\" class=\"display-block text-center\">One file is Uploaded</div>\r\n          <div *ngIf=\"!establishmentProff\" class=\"error-block display-block text-center\">File Uplopad is required</div>\r\n\r\n          <p class=\"pt-2\" style=\"font-size: 12px;\">\r\n            Please provide your Establishment ownership proof to verify your\r\n            profile, so that no one else can get access to your information.\r\n          </p>\r\n          <p>Acceptable documents</p>\r\n        </div>\r\n        <div class=\"row\">\r\n          <ul class=\"inside1\">\r\n            <li>Clinic registration proof</li>\r\n            <li>Document for waste disposal</li>\r\n            <li>Tax receipt</li>\r\n          </ul>\r\n        </div>\r\n        <hr />\r\n        <div class=\"row\">\r\n          <button mat-raised-button matStepperPrevious>\r\n            <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i> Back\r\n          </button>\r\n          <button mat-raised-button style=\"margin-left: 10px;\" (click)=\"onSave()\" color=\"warn\" class=\r\n          \"themeColorBtn\">\r\n            Save and continue\r\n            <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n      <div class=\"d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n        style=\"border: 1px solid #14aa9b;\">\r\n        <div class=\"bg p-4 textcol\">\r\n          <div><i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i></div>\r\n          <p class=\"stext font-weight-bold\">\r\n            2.5M patients are looking for a doctor on WhealthyLife. Verify your\r\n            credentials and reach out to them\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>","import { DoctorProfileService } from 'src/app/services/doctor-profile.service';\r\nimport { UserService } from './../../../../services/user.service';\r\nimport { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { MainService } from '../../../../services/main.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { FormGroup, FormControlName, FormControl, FormBuilder } from '@angular/forms';\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: 'app-clinic-timings',\r\n  templateUrl: './clinic-timings.component.html',\r\n  styleUrls: ['./clinic-timings.component.scss']\r\n})\r\nexport class ClinicTimingsComponent implements OnInit {\r\n\r\n  columns: string[] = ['Day', 'MorningSlot', 'AfternoonSlots', 'EveningSlots', 'NightSlots'];\r\n  dataSource = ELEMENT_DATA;\r\n\r\n  \r\n\r\n  SlotForm: FormGroup;\r\n  dMO: boolean = false;\r\n  dTU: boolean = false;\r\n  dWE: boolean = false;\r\n  dTH: boolean = false;\r\n  dFR: boolean = false;\r\n  dSA: boolean = false;\r\n  dSU: boolean = false;\r\n  TimeSloat: any[];\r\n  @Input() stepper: any;\r\n  timeSlot: FormGroup;\r\n  timeSloats: any = [];\r\n  TimeSloat2: any = [];\r\n  doctorinfo: any;\r\n  days: any;\r\n  profile: any;\r\n  constructor(public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public UserService:UserService,\r\n    public DoctorProfileService:DoctorProfileService,\r\n    public  fb:FormBuilder) {\r\n    \r\n      this.SlotForm = this.fb.group({\r\n        MorStart0:[\"\"],\r\n          MorStart1:[\"\"],\r\n          MorStart2:[\"\"],\r\n          MorStart3:[\"\"],\r\n          MorStart4:[\"\"],\r\n          MorStart5:[\"\"],\r\n          MorStart6:[\"\"],\r\n          MorEnd0:[\"\"],\r\n          MorEnd1:[\"\"],\r\n          MorEnd2:[\"\"],\r\n          MorEnd3:[\"\"],\r\n          MorEnd4:[\"\"],\r\n          MorEnd5:[\"\"],\r\n          MorEnd6:[\"\"],\r\n          AftStart0:[\"\"],\r\n          AftStart1:[\"\"],\r\n          AftStart2:[\"\"],\r\n          AftStart3:[\"\"],\r\n          AftStart4:[\"\"],\r\n          AftStart5:[\"\"],\r\n          AftStart6:[\"\"],\r\n          AftEnd0:[\"\"],\r\n          AftEnd1:[\"\"],\r\n          AftEnd2:[\"\"],\r\n          AftEnd3:[\"\"],\r\n          AftEnd4:[\"\"],\r\n          AftEnd5:[\"\"],\r\n          AftEnd6:[\"\"],\r\n          EveStart0:[\"\"],\r\n          EveStart1:[\"\"],\r\n          EveStart2:[\"\"],\r\n          EveStart3:[\"\"],\r\n          EveStart4:[\"\"],\r\n          EveStart5:[\"\"],\r\n          EveStart6:[\"\"],\r\n          EveEnd0:[\"\"],\r\n          EveEnd1:[\"\"],\r\n          EveEnd2:[\"\"],\r\n          EveEnd3:[\"\"],\r\n          EveEnd4:[\"\"],\r\n          EveEnd5:[\"\"],\r\n          EveEnd6:[\"\"],\r\n          NigStart0:[\"\"],\r\n          NigStart1:[\"\"],\r\n          NigStart2:[\"\"],\r\n          NigStart3:[\"\"],\r\n          NigStart4:[\"\"],\r\n          NigStart5:[\"\"],\r\n          NigStart6:[\"\"],\r\n          NigEnd0:[\"\"],\r\n          NigEnd1:[\"\"],\r\n          NigEnd2:[\"\"],\r\n          NigEnd3:[\"\"],\r\n          NigEnd4:[\"\"],\r\n          NigEnd5:[\"\"],\r\n          NigEnd6:[\"\"],\r\n      })\r\n\r\n      this.getProfile();\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n\r\n  getProfile() {\r\n    this.mainService.getProfile().then(resData => {\r\n      this.profile = resData.data\r\n      console.log(\"ClinicTimingsComponent -> getProfile -> this.profile\", this.profile)\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> getProfile -> error\", error);\r\n    })\r\n  }\r\n\r\n  onSave(){\r\n    if(this.SlotForm.dirty && this.SlotForm.valid){\r\n        const data ={\r\n          slotsArray: [\r\n            {\r\n          day: \"monday\" ,\r\n          morningSlot: {\r\n            from : this.SlotForm.controls['MorStart0'].value ? this.SlotForm.controls['MorStart0'].value : null ,\r\n            to : this.SlotForm.controls['MorEnd0'].value ? this.SlotForm.controls['MorEnd0'].value : null\r\n          },\r\n          afternoonSlot: {\r\n            from: this.SlotForm.controls['AftStart0'].value ? this.SlotForm.controls['AftStart0'].value : null,\r\n            to: this.SlotForm.controls['AftEnd0'].value ? this.SlotForm.controls['AftEnd0'].value : null\r\n          },\r\n          eveningSlot: {\r\n            from: this.SlotForm.controls['EveStart0'].value ? this.SlotForm.controls['EveStart0'].value : null,\r\n            to: this.SlotForm.controls['EveEnd0'].value,\r\n          },\r\n          nightSlot: {\r\n            from: this.SlotForm.controls['NigStart0'].value ? this.SlotForm.controls['NigStart0'].value : null,\r\n            to: this.SlotForm.controls['NigEnd0'].value ? this.SlotForm.controls['NigEnd0'].value : null,\r\n          }\r\n        },\r\n        {\r\n          day: \"tuesday\" ,\r\n          morningSlot: {\r\n            from : this.SlotForm.controls['MorStart1'].value ? this.SlotForm.controls['MorStart1'].value : null,\r\n            to : this.SlotForm.controls['MorEnd1'].value ? this.SlotForm.controls['MorEnd1'].value : null\r\n          },\r\n          afternoonSlot: {\r\n            from: this.SlotForm.controls['AftStart1'].value ? this.SlotForm.controls['AftStart1'].value : null,\r\n            to: this.SlotForm.controls['AftEnd1'].value ? this.SlotForm.controls['AftEnd1'].value : null\r\n          },\r\n          eveningSlot: {\r\n            from: this.SlotForm.controls['EveStart1'].value ? this.SlotForm.controls['EveStart1'].value : null,\r\n            to: this.SlotForm.controls['EveEnd1'].value ? this.SlotForm.controls['EveEnd1'].value : null,\r\n          },\r\n          nightSlot: {\r\n            from: this.SlotForm.controls['NigStart1'].value ? this.SlotForm.controls['NigStart1'].value : null,\r\n            to: this.SlotForm.controls['NigEnd1'].value ? this.SlotForm.controls['NigEnd1'].value : null,\r\n          }\r\n        },\r\n        {\r\n        day: \"wednesday\" ,\r\n          morningSlot: {\r\n            from : this.SlotForm.controls['MorStart2'].value ? this.SlotForm.controls['MorStart2'].value : null,\r\n            to : this.SlotForm.controls['MorEnd2'].value ? this.SlotForm.controls['MorEnd2'].value : null\r\n          },\r\n          afternoonSlot: {\r\n            from: this.SlotForm.controls['AftStart2'].value ? this.SlotForm.controls['AftStart2'].value : null,\r\n            to: this.SlotForm.controls['AftEnd2'].value ? this.SlotForm.controls['AftEnd2'].value : null\r\n          },\r\n          eveningSlot: {\r\n            from: this.SlotForm.controls['EveStart2'].value ? this.SlotForm.controls['EveStart2'].value : null,\r\n            to: this.SlotForm.controls['EveEnd2'].value ? this.SlotForm.controls['EveEnd2'].value : null,\r\n          },\r\n          nightSlot: {\r\n            from: this.SlotForm.controls['NigStart2'].value ? this.SlotForm.controls['NigStart2'].value : null,\r\n            to: this.SlotForm.controls['NigEnd2'].value ? this.SlotForm.controls['NigEnd2'].value : null,\r\n          }\r\n        },\r\n        {\r\n          day: \"thursday\" ,\r\n          morningSlot: {\r\n            from : this.SlotForm.controls['MorStart3'].value ? this.SlotForm.controls['MorStart3'].value : null,\r\n            to : this.SlotForm.controls['MorEnd3'].value ? this.SlotForm.controls['MorEnd3'].value : null\r\n          },\r\n          afternoonSlot: {\r\n            from: this.SlotForm.controls['AftStart3'].value ? this.SlotForm.controls['AftStart3'].value : null,\r\n            to: this.SlotForm.controls['AftEnd3'].value ? this.SlotForm.controls['AftEnd3'].value : null\r\n          },\r\n          eveningSlot: {\r\n            from: this.SlotForm.controls['EveStart3'].value ? this.SlotForm.controls['EveStart3'].value : null,\r\n            to: this.SlotForm.controls['EveEnd3'].value ? this.SlotForm.controls['EveEnd3'].value : null,\r\n          },\r\n          nightSlot: {\r\n            from: this.SlotForm.controls['NigStart3'].value ? this.SlotForm.controls['NigStart3'].value : null,\r\n            to: this.SlotForm.controls['NigEnd3'].value ? this.SlotForm.controls['NigEnd3'].value : null,\r\n          }\r\n        },\r\n        {\r\n          day: \"friday\" ,\r\n          morningSlot: {\r\n            from : this.SlotForm.controls['MorStart4'].value ? this.SlotForm.controls['MorStart4'].value : null,\r\n            to : this.SlotForm.controls['MorEnd4'].value ? this.SlotForm.controls['MorStart4'].value : null\r\n          },\r\n          afternoonSlot: {\r\n            from: this.SlotForm.controls['AftStart4'].value ? this.SlotForm.controls['AftStart4'].value : null,\r\n            to: this.SlotForm.controls['AftEnd4'].value ? this.SlotForm.controls['AftEnd4'].value : null\r\n          },\r\n          eveningSlot: {\r\n            from: this.SlotForm.controls['EveStart4'].value ? this.SlotForm.controls['EveStart4'].value : null,\r\n            to: this.SlotForm.controls['EveEnd4'].value ? this.SlotForm.controls['EveEnd4'].value : null,\r\n          },\r\n          nightSlot: {\r\n            from: this.SlotForm.controls['NigStart4'].value ? this.SlotForm.controls['NigStart4'].value : null,\r\n            to: this.SlotForm.controls['NigEnd4'].value ? this.SlotForm.controls['NigEnd4'].value : null,\r\n          }\r\n          },\r\n        {\r\n          day: \"saturday\" ,\r\n          morningSlot: {\r\n            from : this.SlotForm.controls['MorStart5'].value  ? this.SlotForm.controls['MorStart5'].value : null,\r\n            to : this.SlotForm.controls['MorEnd5'].value  ? this.SlotForm.controls['MorEnd5'].value : null\r\n          },\r\n          afternoonSlot: {\r\n            from: this.SlotForm.controls['AftStart5'].value  ? this.SlotForm.controls['AftStart5'].value : null,\r\n            to: this.SlotForm.controls['AftEnd5'].value  ? this.SlotForm.controls['AftEnd5'].value : null\r\n          },\r\n          eveningSlot: {\r\n            from: this.SlotForm.controls['EveStart5'].value  ? this.SlotForm.controls['EveStart5'].value : null,\r\n            to: this.SlotForm.controls['EveEnd5'].value  ? this.SlotForm.controls['EveEnd5'].value : null\r\n          },\r\n          nightSlot: {\r\n            from: this.SlotForm.controls['NigStart5'].value  ? this.SlotForm.controls['NigStart5'].value : null,\r\n            to: this.SlotForm.controls['NigEnd5'].value  ? this.SlotForm.controls['NigEnd5'].value : null\r\n          }\r\n          },\r\n          {\r\n            day: \"sunday\" ,\r\n            morningSlot: {\r\n              from : this.SlotForm.controls['MorStart6'].value ? this.SlotForm.controls['MorStart6'].value : null,\r\n              to : this.SlotForm.controls['MorEnd6'].value ? this.SlotForm.controls['MorEnd6'].value : null\r\n            },\r\n            afternoonSlot: {\r\n              from: this.SlotForm.controls['AftStart6'].value ? this.SlotForm.controls['AftStart6'].value : null,\r\n              to: this.SlotForm.controls['AftEnd6'].value ? this.SlotForm.controls['AftEnd6'].value : null\r\n            },\r\n            eveningSlot: {\r\n              from: this.SlotForm.controls['EveStart6'].value ? this.SlotForm.controls['EveStart6'].value : null,\r\n              to: this.SlotForm.controls['EveEnd6'].value ? this.SlotForm.controls['EveEnd6'].value : null,\r\n            },\r\n            nightSlot: {\r\n              from: this.SlotForm.controls['NigStart6'].value ? this.SlotForm.controls['NigStart6'].value : null,\r\n              to: this.SlotForm.controls['NigEnd6'].value ? this.SlotForm.controls['NigEnd6'].value : null,\r\n            }\r\n            },\r\n          ]\r\n        }\r\n\r\n        this.mainService.addTimeSlot(data).then(resData =>{\r\n          console.log(\"ClinicTimingsComponent -> onSave -> resData\", resData)\r\n          this.showToast('success', 'Profile', 'Profile updated successfully');\r\n        }).catch(err =>{\r\n          console.log(\"ClinicTimingsComponent -> onSave -> err\", err)\r\n          this.showToast('warn', 'Profile', 'Something went wrong');\r\n        })\r\n\r\n\r\n    }else{\r\n      this.SlotForm.removeControl('FormControlName');\r\n    }\r\n  }\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  Day: any;\r\n  MorningSlot: string;\r\n  AfternoonSlots: string;\r\n  EveningSlots:string;\r\n  NightSlots:string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {Day: 'MON', MorningSlot: 'Hydrogen', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'TUE', MorningSlot: 'Helium', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'WED', MorningSlot: 'Lithium', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'THU', MorningSlot: 'Beryllium', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'FRI', MorningSlot: 'Boron', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'SAT', MorningSlot: 'Carbon', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'SUN', MorningSlot: 'Nitrogen', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  \r\n];\r\n","<section [formGroup]=\"SlotForm\">\r\n    <table mat-table [dataSource]=\"dataSource\" cdkDropList cdkDropListOrientation=\"horizontal\"\r\n        (cdkDropListDropped)=\"drop($event)\">\r\n\r\n        <ng-container matColumnDef=\"Day\">\r\n            <th mat-header-cell cdkDrag *matHeaderCellDef> Day </th>\r\n            <td mat-cell *matCellDef=\"let element\" style=\"width:8%\"> {{element.Day}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"MorningSlot\" align=\"center\">\r\n            <th mat-header-cell cdkDrag *matHeaderCellDef style=\"text-align: center;background-color: #ececec;\"> Morning Slot </th>\r\n            <!-- <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td> -->\r\n            <td mat-cell *matCellDef=\"let element;let i=index\" style=\"width:22.5%;background-color: #ececec;\"> \r\n                <div class=\"col-12\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                <mat-label>Sessions Start</mat-label>\r\n                                <mat-select required formControlName=\"MorStart{{i}}\">\r\n                                    <mat-option> -- None -- </mat-option>\r\n                                    <mat-option value=\"06:00\">06:00</mat-option>\r\n                                    <mat-option value=\"06:30\">06:30</mat-option>\r\n                                    <mat-option value=\"07:00\">07:00</mat-option>\r\n                                    <mat-option value=\"07:30\">07:30</mat-option>\r\n                                    <mat-option value=\"08:00\">08:00</mat-option>\r\n                                    <mat-option value=\"08:30\">08:30</mat-option>\r\n                                    <mat-option value=\"09:00\">09:00</mat-option>\r\n                                    <mat-option value=\"09:30\">09:30</mat-option>\r\n                                    <mat-option value=\"10:00\">10:00</mat-option>\r\n                                    <mat-option value=\"10:30\">10:30</mat-option>\r\n                                    <mat-option value=\"11:00\">11:00</mat-option>\r\n                                    <mat-option value=\"11:30\">11:30</mat-option>\r\n                                    <mat-option value=\"11:59\">11:59</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                <mat-label>Sessions Start</mat-label>\r\n                                <mat-select required formControlName=\"MorEnd{{i}}\">\r\n                                    <mat-option> -- None -- </mat-option>\r\n                                    <mat-option value=\"06:00\">06:00</mat-option>\r\n                                    <mat-option value=\"06:30\">06:30</mat-option>\r\n                                    <mat-option value=\"07:00\">07:00</mat-option>\r\n                                    <mat-option value=\"07:30\">07:30</mat-option>\r\n                                    <mat-option value=\"08:00\">08:00</mat-option>\r\n                                    <mat-option value=\"08:30\">08:30</mat-option>\r\n                                    <mat-option value=\"09:00\">09:00</mat-option>\r\n                                    <mat-option value=\"09:30\">09:30</mat-option>\r\n                                    <mat-option value=\"10:00\">10:00</mat-option>\r\n                                    <mat-option value=\"10:30\">10:30</mat-option>\r\n                                    <mat-option value=\"11:00\">11:00</mat-option>\r\n                                    <mat-option value=\"11:30\">11:30</mat-option>\r\n                                    <mat-option value=\"11:59\">11:59</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"AfternoonSlots\">\r\n            <th mat-header-cell *matHeaderCellDef style=\"text-align: center;\"> Afternoon Slots </th>\r\n            <td mat-cell *matCellDef=\"let element; let i=index\" style=\"width:22.5%\">  \r\n                <div class=\"col-12\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                <mat-label>Sessions Start</mat-label>\r\n                                <mat-select required formControlName=\"AftStart{{i}}\">\r\n                                    <mat-option> -- None -- </mat-option>\r\n                                    <mat-option value=\"12:00\">12:00</mat-option>\r\n                                    <mat-option value=\"12:30\">12:30</mat-option>\r\n                                    <mat-option value=\"13:00\">13:00</mat-option>\r\n                                    <mat-option value=\"13:30\">13:30</mat-option>\r\n                                    <mat-option value=\"14:00\">14:00</mat-option>\r\n                                    <mat-option value=\"14:30\">14:30</mat-option>\r\n                                    <mat-option value=\"15:00\">15:00</mat-option>\r\n                                    <mat-option value=\"15:30\">15:30</mat-option>\r\n                                    <mat-option value=\"16:00\">16:00</mat-option>\r\n                                    <mat-option value=\"16:30\">16:30</mat-option>\r\n                                    <mat-option value=\"17:00\">17:00</mat-option>\r\n                                    <mat-option value=\"17:30\">17:30</mat-option>\r\n                                    <mat-option value=\"17:59\">17:59</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                <mat-label>Sessions End</mat-label>\r\n                                <mat-select required formControlName=\"AftEnd{{i}}\">\r\n                                    <mat-option> -- None -- </mat-option>\r\n                                    <mat-option value=\"12:00\">12:00</mat-option>\r\n                                    <mat-option value=\"12:30\">12:30</mat-option>\r\n                                    <mat-option value=\"13:00\">13:00</mat-option>\r\n                                    <mat-option value=\"13:30\">13:30</mat-option>\r\n                                    <mat-option value=\"14:00\">14:00</mat-option>\r\n                                    <mat-option value=\"14:30\">14:30</mat-option>\r\n                                    <mat-option value=\"15:00\">15:00</mat-option>\r\n                                    <mat-option value=\"15:30\">15:30</mat-option>\r\n                                    <mat-option value=\"16:00\">16:00</mat-option>\r\n                                    <mat-option value=\"16:30\">16:30</mat-option>\r\n                                    <mat-option value=\"17:00\">17:00</mat-option>\r\n                                    <mat-option value=\"17:30\">17:30</mat-option>\r\n                                    <mat-option value=\"17:59\">17:59</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"EveningSlots\">\r\n            <th mat-header-cell *matHeaderCellDef style=\"text-align: center;background-color: #ececec;\"> Evening Slots </th>\r\n            <td mat-cell *matCellDef=\"let element;let i = index\" style=\"width:22.5%;background-color: #ececec;\">  <div class=\"col-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                <mat-label>Sessions Start</mat-label>\r\n                                <mat-select required formControlName=\"EveStart{{i}}\">\r\n                                    <mat-option> -- None -- </mat-option>\r\n                                    <mat-option value=\"18:00\">18:00</mat-option>\r\n                                    <mat-option value=\"18:30\">18:30</mat-option>\r\n                                    <mat-option value=\"19:00\">19:00</mat-option>\r\n                                    <mat-option value=\"19:30\">19:30</mat-option>\r\n                                    <mat-option value=\"20:00\">20:00</mat-option>\r\n                                    <mat-option value=\"20:30\">20:30</mat-option>\r\n                                    <mat-option value=\"21:00\">21:00</mat-option>\r\n                                    <mat-option value=\"21:30\">21:30</mat-option>\r\n                                    <mat-option value=\"22:00\">22:00</mat-option>\r\n                                    <mat-option value=\"22:30\">22:30</mat-option>\r\n                                    <mat-option value=\"23:00\">23:00</mat-option>\r\n                                    <mat-option value=\"23:30\">23:30</mat-option>\r\n                                    <mat-option value=\"23:59\">23:59</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                <mat-label>Sessions End</mat-label>\r\n                                <mat-select required formControlName=\"EveEnd{{i}}\">\r\n                                    <mat-option> -- None -- </mat-option>\r\n                                    <mat-option value=\"18:00\">18:00</mat-option>\r\n                                    <mat-option value=\"18:30\">18:30</mat-option>\r\n                                    <mat-option value=\"19:00\">19:00</mat-option>\r\n                                    <mat-option value=\"19:30\">19:30</mat-option>\r\n                                    <mat-option value=\"20:00\">20:00</mat-option>\r\n                                    <mat-option value=\"20:30\">20:30</mat-option>\r\n                                    <mat-option value=\"21:00\">21:00</mat-option>\r\n                                    <mat-option value=\"21:30\">21:30</mat-option>\r\n                                    <mat-option value=\"22:00\">22:00</mat-option>\r\n                                    <mat-option value=\"22:30\">22:30</mat-option>\r\n                                    <mat-option value=\"23:00\">23:00</mat-option>\r\n                                    <mat-option value=\"23:30\">23:30</mat-option>\r\n                                    <mat-option value=\"23:59\">23:59</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"NightSlots\">\r\n            <th mat-header-cell *matHeaderCellDef style=\"text-align: center;\"> Night Slots </th>\r\n            <td mat-cell *matCellDef=\"let element;let i = index\" style=\"width:22.5%\">  <div class=\"col-12\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-6\">\r\n                        <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                            <mat-label>Sessions Start</mat-label>\r\n                            <mat-select required formControlName=\"NigStart{{i}}\">\r\n                                <mat-option> -- None -- </mat-option>\r\n                                <mat-option value=\"00:00 \"> 00:00  </mat-option>\r\n                                    <mat-option value=\"00:30\">00:30</mat-option>\r\n                                    <mat-option value=\"01:00\">01:00</mat-option>\r\n                                    <mat-option value=\"01:30\">01:30</mat-option>\r\n                                    <mat-option value=\"02:00\">02:00</mat-option>\r\n                                    <mat-option value=\"02:30\">02:30</mat-option>\r\n                                    <mat-option value=\"03:00\">03:00</mat-option>\r\n                                    <mat-option value=\"03:30\">03:30</mat-option>\r\n                                    <mat-option value=\"04:00\">04:00</mat-option>\r\n                                    <mat-option value=\"04:30\">04:30</mat-option>\r\n                                    <mat-option value=\"05:00\">05:00</mat-option>\r\n                                    <mat-option value=\"05:30\">05:30</mat-option>\r\n                                    <mat-option value=\"05:59\">05:59</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                <mat-label>Sessions End</mat-label>\r\n                                <mat-select required formControlName=\"NigEnd{{i}}\" >\r\n                                    <mat-option> -- None -- </mat-option>\r\n                                    <mat-option value=\"00:00\">00:00</mat-option>\r\n                                    <mat-option value=\"00:30\">00:30</mat-option>\r\n                                    <mat-option value=\"01:00\">01:00</mat-option>\r\n                                    <mat-option value=\"01:30\">01:30</mat-option>\r\n                                    <mat-option value=\"02:00\">02:00</mat-option>\r\n                                    <mat-option value=\"02:30\">02:30</mat-option>\r\n                                    <mat-option value=\"03:00\">03:00</mat-option>\r\n                                    <mat-option value=\"03:30\">03:30</mat-option>\r\n                                    <mat-option value=\"04:00\">04:00</mat-option>\r\n                                    <mat-option value=\"04:30\">04:30</mat-option>\r\n                                    <mat-option value=\"05:00\">05:00</mat-option>\r\n                                    <mat-option value=\"05:30\">05:30</mat-option>\r\n                                    <mat-option value=\"05:59\">05:59</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\r\n    </table>\r\n</section>  \r\n  \r\n\r\n\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <button mat-raised-button matStepperPrevious>\r\n            <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i>\r\n            Back\r\n        </button>\r\n        <button style=\"position: absolute; right: 0;\" mat-raised-button color=\"warn\"  class=\r\n            \"themeColorBtn\" (click)=\"onSave()\">\r\n            Save and continue\r\n            <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { MainService } from 'src/app/services/main.service';\r\nimport { UploadService } from 'src/app/services/upload.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-connect-clinic',\r\n  templateUrl: './connect-clinic.component.html',\r\n  styleUrls: ['./connect-clinic.component.scss']\r\n})\r\nexport class ConnectClinicComponent implements OnInit {\r\n\r\n  items: any = [];\r\n  profileform: FormGroup;\r\n  avatar: any;\r\n\r\n  @Input() stepper: MatStepper;\r\n  hide: boolean = false;\r\n\r\n  constructor(public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public router: Router,\r\n    public uploadService: UploadService) {\r\n    this.profileform = new FormGroup({\r\n      typeOfEstablishment: new FormControl('')\r\n    })\r\n    this.items.length = 100;\r\n    this.getProfile();\r\n  }\r\n\r\n\r\n  ngOnInit() { }\r\n\r\n\r\n  getProfile() {\r\n    this.mainService.getProfile().then(resData => {\r\n      this.profileform.patchValue(resData.data);\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> getProfile -> error\", error)\r\n    })\r\n  }\r\n\r\n  onSave() {\r\n    this.mainService.updateUserprofile(this.profileform.value).then(resData => {\r\n      this.showToast('success', 'Profile', 'Profile updated successfully');\r\n      this.stepper.next();\r\n      this.router.navigate(['/Doctor/Profile']);\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> onSave -> error\", error)\r\n    })\r\n  }\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n\r\n  \r\n\r\n}","<section class=\"bg-white p-sm-3\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n            <p style=\"font-size: 15px;\">Please select any one of the following:</p>\r\n            <div class=\"form-group\" [formGroup]=\"profileform\">\r\n                <mat-radio-group aria-label=\"Select an option\" formControlName=\"typeOfEstablishment\">\r\n                    <div class=\"row py-2 pl-2\">\r\n                        <mat-radio-button value=\"OwnEstablishment\">I own a establishment</mat-radio-button>\r\n                    </div>\r\n                    <div class=\"row py-2 pl-2\">\r\n                        <mat-radio-button value=\"VisitEstablishment\" >I visit a establishment</mat-radio-button>\r\n                    </div>\r\n                </mat-radio-group>\r\n            </div>\r\n            <hr class=\"mt-5 mb-5\">\r\n            <div class=\"row\">\r\n                <button mat-raised-button matStepperPrevious>\r\n                    <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i>\r\n                    Back\r\n                </button>\r\n                <button class=\"themeColorBtn\" style=\"margin-left: 10px !important;\"  mat-raised-button color=\"warn\" \r\n                 (click)=\"onSave()\" routerLinkActive=\"router-link-active\">\r\n                    Save and Continue\r\n                    <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n            <div class=\"d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n                style=\"border: 1px solid #14aa9b;\">\r\n                <div class=\"bg p-4 textcol\">\r\n                    <div>\r\n                        <i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                    <p class=\"stext font-weight-bold\">Patients often search for doctors by locality. Therefore, adding\r\n                        all your practice establishments ensures that your profile is visible to patients in all the\r\n                        relevant searches.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { MainService } from 'src/app/services/main.service';\r\nimport { UploadService } from 'src/app/services/upload.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, FormArray } from '@angular/forms';\r\nimport { UserService } from './../../../../services/user.service';\r\nimport { UserAccountsRoutingModule } from './../../../user-accounts/user-accounts-routing.module';\r\nimport { LocationService } from './../../../../services/location.service';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-consultant-details',\r\n  templateUrl: './consultant-details.component.html',\r\n  styleUrls: ['./consultant-details.component.scss']\r\n})\r\nexport class ConsultantDetailsComponent implements OnInit {\r\n\r\n\r\n  displayedColumns = [];\r\n  dataSource1: any;\r\n  displayedRows: [string, unknown][];\r\n\r\n  columns: string[] = ['Day', 'MorningSlot', 'AfternoonSlots', 'EveningSlots', 'NightSlots'];\r\n  dataSource = ELEMENT_DATA;\r\n\r\n  \r\n\r\n\r\n  dMO: boolean = false;\r\n  dTU: boolean = false;\r\n  dWE: boolean = false;\r\n  dTH: boolean = false;\r\n  dFR: boolean = false;\r\n  dSA: boolean = false;\r\n  dSU: boolean = false;\r\n  timeSlot: FormGroup;\r\n  timeSloats: any = [];\r\n  TimeSloat2: any = [];\r\n  doctorinfo: any;\r\n  days: any;\r\n\r\n  @Input() stepper: any;\r\n  items: any = [];\r\n  // empForm: FormGroup;\r\n  memberForm : FormGroup;\r\n  profileData: any;\r\n  TimeSloat: any[];\r\n  data12: any[];\r\n  data:any[];\r\n  hide: boolean = true;\r\n  time1: any;\r\n  ClinicName: any;\r\n  profile: any;\r\n  length: any;\r\n  val: any;\r\n  fix: { key: number; value: any; }[];\r\n  countryList: any;\r\n  countryId: any;\r\n  stateList: any;\r\n  cityList: any;\r\n  cityId: any;\r\n  stateId: any;\r\n  clinicId: any;\r\n  lat: any;\r\n  lang: any;\r\n  locationId: any;\r\n  ClinicId: any;\r\n  timeId: any;\r\n  DOCClicnicId: any;\r\n  locClinicId: any;\r\n  timeClinicId: any;\r\n  VisiteclinicId: any;\r\n  LocDetail: any;\r\n  clinicList: any[]=[];\r\n \r\n  DocClinic: any;\r\n  hide1: boolean = true;\r\n  ClinicDetails: any;\r\n  IdClinic: any;\r\n  IdLocation: any;\r\n  IdTime: any;\r\n  DoctorId: any;\r\n  DataClinic: boolean = false;\r\n\r\n\r\n \r\n  constructor(public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public router: Router,\r\n    private fb:FormBuilder,\r\n    public dialog: MatDialog,\r\n    private  location:LocationService\r\n   ) {\r\n     \r\n    this.getProfile();\r\n    \r\n    this.mainService.getAllClinic().then(AllClinicName =>{\r\n    console.log(\"ConsultantDetailsComponent -> AllClinicName\", AllClinicName);\r\n\r\n    const dfgf= AllClinicName.data;\r\n    this.data = AllClinicName.data;\r\n    console.log(\"ConsultantDetailsComponent -> dfgf\", dfgf)\r\n\r\n    // for( let i=0 ; i < dfgf.length ; i++ ){\r\n    //   this.data12.push(dfgf[i]);\r\n    //   // this.data.push(dfgf[i]);\r\n    // }\r\n    // console.log(\"ConsultantDetailsComponent ->  this.data12\",  this.data12);\r\n    //  this.data12 = AllClinicName\r\n\r\n    }).catch(error =>{\r\n    console.log(\"ConsultantDetailsComponent -> error\", error);\r\n    })\r\n\r\n    this.getClinicName()\r\n    this.getCountry()\r\n    this.getLocation()\r\n\r\n\r\n    this.displayedColumns = [\r\n      \"Sr_No\",\r\n      \"Clinic_Name\",\r\n      \"Address\",\r\n      \"Action\",\r\n    ];\r\n   \r\n  }\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  ngOnInit() { \r\n    // this.getTime();\r\n\r\n    this.memberForm = this.fb.group({\r\n      clinicName: [''],\r\n      ClinicName1:[''],\r\n      address: [''],\r\n      landmark: [''],\r\n      country: [''],\r\n      state: [''],\r\n      city: [''],\r\n      fees : [''],\r\n      establishmentHour : [''],\r\n      hours : [\"\"],\r\n      MorStart0:[\"\"],\r\n      MorStart1:[\"\"],\r\n      MorStart2:[\"\"],\r\n      MorStart3:[\"\"],\r\n      MorStart4:[\"\"],\r\n      MorStart5:[\"\"],\r\n      MorStart6:[\"\"],\r\n      MorEnd0:[\"\"],\r\n      MorEnd1:[\"\"],\r\n      MorEnd2:[\"\"],\r\n      MorEnd3:[\"\"],\r\n      MorEnd4:[\"\"],\r\n      MorEnd5:[\"\"],\r\n      MorEnd6:[\"\"],\r\n      AftStart0:[\"\"],\r\n      AftStart1:[\"\"],\r\n      AftStart2:[\"\"],\r\n      AftStart3:[\"\"],\r\n      AftStart4:[\"\"],\r\n      AftStart5:[\"\"],\r\n      AftStart6:[\"\"],\r\n      AftEnd0:[\"\"],\r\n      AftEnd1:[\"\"],\r\n      AftEnd2:[\"\"],\r\n      AftEnd3:[\"\"],\r\n      AftEnd4:[\"\"],\r\n      AftEnd5:[\"\"],\r\n      AftEnd6:[\"\"],\r\n      EveStart0:[\"\"],\r\n      EveStart1:[\"\"],\r\n      EveStart2:[\"\"],\r\n      EveStart3:[\"\"],\r\n      EveStart4:[\"\"],\r\n      EveStart5:[\"\"],\r\n      EveStart6:[\"\"],\r\n      EveEnd0:[\"\"],\r\n      EveEnd1:[\"\"],\r\n      EveEnd2:[\"\"],\r\n      EveEnd3:[\"\"],\r\n      EveEnd4:[\"\"],\r\n      EveEnd5:[\"\"],\r\n      EveEnd6:[\"\"],\r\n      NigStart0:[\"\"],\r\n      NigStart1:[\"\"],\r\n      NigStart2:[\"\"],\r\n      NigStart3:[\"\"],\r\n      NigStart4:[\"\"],\r\n      NigStart5:[\"\"],\r\n      NigStart6:[\"\"],\r\n      NigEnd0:[\"\"],\r\n      NigEnd1:[\"\"],\r\n      NigEnd2:[\"\"],\r\n      NigEnd3:[\"\"],\r\n      NigEnd4:[\"\"],\r\n      NigEnd5:[\"\"],\r\n      NigEnd6:[\"\"],\r\n    })\r\n\r\n    this.memberForm.controls.ClinicName1.valueChanges.subscribe((resData) => {\r\n      this.clinicId= resData\r\n      console.log(\"file: consultant-details.component.ts ~ line 85 ~ ConsultantDetailsComponent ~ ngOnInit ~ this.clinicId\", this.clinicId)\r\n      this.visiteClinic(resData)\r\n    })\r\n\r\n    this.memberForm.controls.clinicName.valueChanges.subscribe((resData) => {\r\n      this.VisiteclinicId = resData\r\n      console.log(\"file: consultant-details.component.ts ~ line 85 ~ ConsultantDetailsComponent ~ ngOnInit ~ this.VisiteclinicId\", this.VisiteclinicId)\r\n      this.visiteClinic(this.VisiteclinicId)\r\n    })\r\n    \r\n\r\n  }\r\n\r\n  getLocation(){\r\n    this.location.getPosition().subscribe(res =>{\r\n      this.lat= res.coords.latitude\r\n      this.lang = res.coords.longitude\r\n    })\r\n  }\r\n\r\n  getCountry(){\r\n    this.mainService\r\n    .getCountry()\r\n    .then((resData) => {\r\n      this.countryList = resData.data;\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n    });\r\n  }\r\n\r\n  CountryId(event){\r\n    this.countryId =  event.value\r\n    this.mainService\r\n    .getState(this.countryId)\r\n    .then((resData) => {\r\n      this.stateList = resData.data;\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n    });\r\n  }\r\n\r\n  State(event){\r\n    this.stateId = event.value\r\n    this.mainService\r\n      .getCity(this.stateId)\r\n      .then((resData) => {\r\n        this.cityList = resData.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n      });\r\n  }\r\n\r\n  City(event){\r\n    this.cityId = event.value\r\n  }\r\n\r\n  getClinicName(){\r\n    this.mainService.getAllClinic().then(resData =>{\r\n      console.log(\"file: consultant-details.component.ts ~ line 189 ~ ConsultantDetailsComponent ~ this.mainService.getAllClinic ~ resData\", resData)\r\n      this.ClinicName = resData.data\r\n      console.log(\"file: consultant-details.component.ts ~ line 192 ~ ConsultantDetailsComponent ~ this.mainService.getAllClinic ~ this.ClinicName\", this.ClinicName)\r\n      \r\n    })\r\n  }\r\n\r\n  getProfile() {\r\n    this.mainService.getProfile().then(resData => {\r\n      this.profile = resData.data\r\n      \r\n       this.getDocClinic(this.profile._id);\r\n      this.memberForm.patchValue(resData.data);\r\n      if(resData.data.typeOfEstablishment == \"OwnEstablishment\"){\r\n        this.hide = false\r\n      }else{\r\n        this.hide = true\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> getProfile -> error\", error);\r\n    })\r\n  }\r\n\r\n  getDocClinic(id){\r\n    this.clinicList = [];\r\n    this.DataClinic = true;\r\n    if(id != ''){\r\n      const data ={\r\n        doctorId:  id\r\n      }\r\n      this.mainService.getDOCClinic(data).then(resDataDoc =>{\r\n      console.log(\"ConsultantDetailsComponent -> getDocClinic -> resDataDoc\", resDataDoc)\r\n          for (let i = 0; i < resDataDoc.data.length; i++){\r\n            this.DocClinic = resDataDoc.data[i]\r\n            console.log(\"ConsultantDetailsComponent -> getDocClinic -> this.DocClinic\", this.DocClinic)\r\n            const element = resDataDoc.data[i];\r\n            const arr = {\r\n              Sr_No: \"\",\r\n              Clinic_Name: element.clinicId.name,\r\n              Address: element.locationId.location.address,\r\n              Action: element.clinicId._id,\r\n            };\r\n            this.clinicList.push(arr);\r\n          }\r\n          this.dataSource1 = new MatTableDataSource(\r\n            this.clinicList ? this.clinicList : null\r\n          );\r\n          console.log(\"ConsultantDetailsComponent -> getDocClinic -> this.dataSource1\", this.dataSource1)\r\n          this.dataSource1.paginator = this.paginator;\r\n          console.log(\"ConsultantDetailsComponent -> getDocClinic -> this.dataSource1.paginator\", this.dataSource1.paginator)\r\n        \r\n      }).catch(err =>{\r\n        console.log(\"ConsultantDetailsComponent -> getDocClinic -> err\", err)\r\n      })\r\n    }\r\n  }\r\n\r\n  openEdit(id) {\r\n  console.log(\"ConsultantDetailsComponent -> openEdit -> id\", id)\r\n  const data ={\r\n    clinicId: id\r\n  }\r\n    this.mainService.getDOCClinic(data).then(resData =>{\r\n    console.log(\"ConsultantDetailsComponent -> openEdit -> resData\", resData)\r\n    this.ClinicDetails = resData.data[0]\r\n    this.IdClinic = this.ClinicDetails.clinicId._id\r\n    this.IdLocation = this.ClinicDetails.locationId._id\r\n    this.IdTime = this.ClinicDetails._id\r\n    console.log(\"ConsultantDetailsComponent -> openEdit -> this.IdClinic  +  this.IdLocation + this.IdTime\", this.IdClinic ,  this.IdLocation ,  this.IdTime)\r\n      for (let i = 0; i < resData.data.length; i++){\r\n        this.memberForm.patchValue({\r\n          clinicName: resData.data[i].clinicId.name,\r\n          address: resData.data[i].locationId.location.address,\r\n          landmark: resData.data[i].locationId.location.landmark,\r\n          country: resData.data[i].locationId.location.country,\r\n          state: resData.data[i].locationId.location.state,\r\n          city: resData.data[i].locationId.location.city,\r\n         \r\n        })\r\n        \r\n\r\n        for (let k = 0; k < resData.data[0].timing.length; k++){\r\n          if(k==0){\r\n            this.memberForm.patchValue({\r\n              MorStart0: resData.data[i].timing[k].morningSlot.startTime,\r\n              MorEnd0: resData.data[i].timing[k].morningSlot.endTime,\r\n              AftStart0: resData.data[i].timing[k].afternoonSlot.startTime,\r\n              AftEnd0: resData.data[i].timing[k].afternoonSlot.endTime,\r\n              EveStart0: resData.data[i].timing[k].eveningSlot.startTime,\r\n              EveEnd0: resData.data[i].timing[k].eveningSlot.endTime,\r\n              NigStart0: resData.data[i].timing[k].nightSlot.startTime,\r\n              NigEnd0: resData.data[i].timing[k].nightSlot.endTime,\r\n            })\r\n          }\r\n          else if(k==1){\r\n            this.memberForm.patchValue({\r\n              MorStart1: resData.data[i].timing[k].morningSlot.startTime,\r\n              MorEnd1: resData.data[i].timing[k].morningSlot.endTime,\r\n              AftStart1: resData.data[i].timing[k].afternoonSlot.startTime,\r\n              AftEnd1: resData.data[i].timing[k].afternoonSlot.endTime,\r\n              EveStart1: resData.data[i].timing[k].eveningSlot.startTime,\r\n              EveEnd1: resData.data[i].timing[k].eveningSlot.endTime,\r\n              NigStart1: resData.data[i].timing[k].nightSlot.startTime,\r\n              NigEnd1: resData.data[i].timing[k].nightSlot.endTime,\r\n            })\r\n          }else if(k == 2){\r\n            this.memberForm.patchValue({\r\n              MorStart2: resData.data[i].timing[k].morningSlot.startTime,\r\n              MorEnd2: resData.data[i].timing[k].morningSlot.endTime,\r\n              AftStart2: resData.data[i].timing[k].afternoonSlot.startTime,\r\n              AftEnd2: resData.data[i].timing[k].afternoonSlot.endTime,\r\n              EveStart2: resData.data[i].timing[k].eveningSlot.startTime,\r\n              EveEnd2: resData.data[i].timing[k].eveningSlot.endTime,\r\n              NigStart2: resData.data[i].timing[k].nightSlot.startTime,\r\n              NigEnd2: resData.data[i].timing[k].nightSlot.endTime,\r\n            })\r\n          }else if(k == 3){\r\n            this.memberForm.patchValue({\r\n              MorStart3: resData.data[i].timing[k].morningSlot.startTime,\r\n              MorEnd3: resData.data[i].timing[k].morningSlot.endTime,\r\n              AftStart3: resData.data[i].timing[k].afternoonSlot.startTime,\r\n              AftEnd3: resData.data[i].timing[k].afternoonSlot.endTime,\r\n              EveStart3: resData.data[i].timing[k].eveningSlot.startTime,\r\n              EveEnd3: resData.data[i].timing[k].eveningSlot.endTime,\r\n              NigStart3: resData.data[i].timing[k].nightSlot.startTime,\r\n              NigEnd3: resData.data[i].timing[k].nightSlot.endTime,\r\n            })\r\n          }else if(k == 4){\r\n            this.memberForm.patchValue({\r\n              MorStart4: resData.data[i].timing[k].morningSlot.startTime,\r\n              MorEnd4: resData.data[i].timing[k].morningSlot.endTime,\r\n              AftStart4: resData.data[i].timing[k].afternoonSlot.startTime,\r\n              AftEnd4: resData.data[i].timing[k].afternoonSlot.endTime,\r\n              EveStart4: resData.data[i].timing[k].eveningSlot.startTime,\r\n              EveEnd4: resData.data[i].timing[k].eveningSlot.endTime,\r\n              NigStart4: resData.data[i].timing[k].nightSlot.startTime,\r\n              NigEnd4: resData.data[i].timing[k].nightSlot.endTime,\r\n            })\r\n          }else if(k == 5){\r\n            this.memberForm.patchValue({\r\n              MorStart5: resData.data[i].timing[k].morningSlot.startTime,\r\n              MorEnd5: resData.data[i].timing[k].morningSlot.endTime,\r\n              AftStart5: resData.data[i].timing[k].afternoonSlot.startTime,\r\n              AftEnd5: resData.data[i].timing[k].afternoonSlot.endTime,\r\n              EveStart5: resData.data[i].timing[k].eveningSlot.startTime,\r\n              EveEnd5: resData.data[i].timing[k].eveningSlot.endTime,\r\n              NigStart5: resData.data[i].timing[k].nightSlot.startTime,\r\n              NigEnd5: resData.data[i].timing[k].nightSlot.endTime,\r\n            })\r\n          }else if(k == 6){\r\n            this.memberForm.patchValue({\r\n              MorStart6: resData.data[i].timing[k].morningSlot.startTime,\r\n              MorEnd6: resData.data[i].timing[k].morningSlot.endTime,\r\n              AftStart6: resData.data[i].timing[k].afternoonSlot.startTime,\r\n              AftEnd6: resData.data[i].timing[k].afternoonSlot.endTime,\r\n              EveStart6: resData.data[i].timing[k].eveningSlot.startTime,\r\n              EveEnd6: resData.data[i].timing[k].eveningSlot.endTime,\r\n              NigStart6: resData.data[i].timing[k].nightSlot.startTime,\r\n              NigEnd6: resData.data[i].timing[k].nightSlot.endTime,\r\n            })\r\n          }else{\r\n            this.hide1 = true\r\n          }\r\n        }\r\n      }\r\n      console.log(\"ConsultantDetailsComponent -> openEdit ->  this.memberForm\",  this.memberForm)\r\n    }).catch(err =>{\r\n      console.log(\"ConsultantDetailsComponent -> openEdit -> err\", err)\r\n    })\r\n  }\r\n\r\n  onDelete(id){\r\n    console.log(\"ConsultantDetailsComponent -> onDelete -> id\", id)\r\n    const data ={\r\n      clinicId: id\r\n    }\r\n    this.mainService.getDOCClinic(data).then(resDataDel => {\r\n      console.log(\"ConsultantDetailsComponent -> onDelete -> resDataDel\", resDataDel)\r\n      this.DoctorId = resDataDel.data[0].doctorId\r\n      this.IdClinic = resDataDel.data[0].clinicId._id\r\n      this.IdLocation = resDataDel.data[0].locationId._id\r\n      this.IdTime = resDataDel.data[0]._id\r\n      console.log(\"ConsultantDetailsComponent -> openEdit -> this.IdClinic  +  this.IdLocation + this.IdTime\", this.IdClinic ,  this.IdLocation ,  this.IdTime)\r\n    \r\n      this.mainService.deleteClinicById(this.IdClinic).then(DeleteCres =>{\r\n        console.log(\"ConsultantDetailsComponent -> onDelete -> DeleteCres\", DeleteCres)\r\n      }).catch(err =>{\r\n       console.log(\"ConsultantDetailsComponent -> onDelete -> err\", err)\r\n      })\r\n\r\n      this.mainService.deleteLocationById(this.IdLocation).then(deleteLRes =>{\r\n       console.log(\"ConsultantDetailsComponent -> onDelete -> deleteLRes\", deleteLRes)\r\n      }).catch(error =>{\r\n        console.log(\"ConsultantDetailsComponent -> onDelete -> error\", error)\r\n      })\r\n\r\n      this.mainService.deleteTimeById(this.IdTime).then(deleteTRes =>{\r\n        console.log(\"ConsultantDetailsComponent -> onDelete -> deleteTRes\", deleteTRes)\r\n       }).catch(err =>{\r\n         console.log(\"ConsultantDetailsComponent -> onDelete -> err\", err)\r\n       })\r\n\r\n       this.ngOnInit();\r\n       this.getDocClinic(this.DoctorId)\r\n\r\n    }).catch(error =>{\r\n      console.log(\"ConsultantDetailsComponent -> onDelete -> error\", error)\r\n    })\r\n  }\r\n\r\n  SaveSlots(){\r\n    const data123 ={\r\n      doctorId: this.profile._id,\r\n      clinicId: this.ClinicId ,\r\n      locationId: this.locationId,\r\n      timing: [\r\n          {\r\n        day: \"monday\" ,\r\n        morningSlot: {\r\n          startTime : this.memberForm.controls['MorStart0'].value,\r\n          endTime : this.memberForm.controls['MorEnd0'].value\r\n        },\r\n        afternoonSlot: {\r\n          startTime: this.memberForm.controls['AftStart0'].value,\r\n          endTime: this.memberForm.controls['AftEnd0'].value\r\n        },\r\n        eveningSlot: {\r\n          startTime: this.memberForm.controls['EveStart0'].value,\r\n          endTime: this.memberForm.controls['EveEnd0'].value,\r\n        },\r\n        nightSlot: {\r\n          startTime: this.memberForm.controls['NigStart0'].value,\r\n          endTime: this.memberForm.controls['NigEnd0'].value,\r\n        }\r\n       },\r\n      {\r\n        day: \"tuesday\" ,\r\n        morningSlot: {\r\n          startTime : this.memberForm.controls['MorStart1'].value,\r\n          endTime : this.memberForm.controls['MorEnd1'].value\r\n        },\r\n        afternoonSlot: {\r\n          startTime: this.memberForm.controls['AftStart1'].value,\r\n          endTime: this.memberForm.controls['AftEnd1'].value\r\n        },\r\n        eveningSlot: {\r\n          startTime: this.memberForm.controls['EveStart1'].value,\r\n          endTime: this.memberForm.controls['EveEnd1'].value,\r\n        },\r\n        nightSlot: {\r\n          startTime: this.memberForm.controls['NigStart1'].value,\r\n          endTime: this.memberForm.controls['NigEnd1'].value,\r\n        }\r\n      },\r\n      {\r\n      day: \"wednesday\" ,\r\n        morningSlot: {\r\n          startTime : this.memberForm.controls['MorStart2'].value,\r\n          endTime : this.memberForm.controls['MorEnd2'].value\r\n        },\r\n        afternoonSlot: {\r\n          startTime: this.memberForm.controls['AftStart2'].value,\r\n          endTime: this.memberForm.controls['AftEnd2'].value\r\n        },\r\n        eveningSlot: {\r\n          startTime: this.memberForm.controls['EveStart2'].value,\r\n          endTime: this.memberForm.controls['EveEnd2'].value,\r\n        },\r\n        nightSlot: {\r\n          startTime: this.memberForm.controls['NigStart2'].value,\r\n          endTime: this.memberForm.controls['NigEnd2'].value,\r\n        }\r\n      },\r\n      {\r\n        day: \"thursday\" ,\r\n        morningSlot: {\r\n          startTime : this.memberForm.controls['MorStart3'].value,\r\n          endTime : this.memberForm.controls['MorEnd3'].value\r\n        },\r\n        afternoonSlot: {\r\n          startTime: this.memberForm.controls['AftStart3'].value,\r\n          endTime: this.memberForm.controls['AftEnd3'].value\r\n        },\r\n        eveningSlot: {\r\n          startTime: this.memberForm.controls['EveStart3'].value,\r\n          endTime: this.memberForm.controls['EveEnd3'].value,\r\n        },\r\n        nightSlot: {\r\n          startTime: this.memberForm.controls['NigStart3'].value,\r\n          endTime: this.memberForm.controls['NigEnd3'].value,\r\n        }\r\n      },\r\n      {\r\n        day: \"friday\" ,\r\n        morningSlot: {\r\n          startTime : this.memberForm.controls['MorStart4'].value,\r\n          endTime : this.memberForm.controls['MorEnd4'].value\r\n        },\r\n        afternoonSlot: {\r\n          startTime: this.memberForm.controls['AftStart4'].value,\r\n          endTime: this.memberForm.controls['AftEnd4'].value\r\n        },\r\n        eveningSlot: {\r\n          startTime: this.memberForm.controls['EveStart4'].value,\r\n          endTime: this.memberForm.controls['EveEnd4'].value,\r\n        },\r\n        nightSlot: {\r\n          startTime: this.memberForm.controls['NigStart4'].value,\r\n          endTime: this.memberForm.controls['NigEnd4'].value,\r\n        }\r\n        },\r\n       {\r\n         day: \"saturday\" ,\r\n         morningSlot: {\r\n          startTime : this.memberForm.controls['MorStart5'].value,\r\n          endTime : this.memberForm.controls['MorEnd5'].value\r\n        },\r\n        afternoonSlot: {\r\n          startTime: this.memberForm.controls['AftStart5'].value,\r\n          endTime: this.memberForm.controls['AftEnd5'].value\r\n        },\r\n        eveningSlot: {\r\n          startTime: this.memberForm.controls['EveStart5'].value,\r\n          endTime: this.memberForm.controls['EveEnd5'].value,\r\n        },\r\n        nightSlot: {\r\n          startTime: this.memberForm.controls['NigStart5'].value,\r\n          endTime: this.memberForm.controls['NigEnd5'].value,\r\n        }\r\n        },\r\n        {\r\n           day: \"sunday\" ,\r\n           morningSlot: {\r\n            startTime : this.memberForm.controls['MorStart6'].value,\r\n            endTime : this.memberForm.controls['MorEnd6'].value\r\n          },\r\n          afternoonSlot: {\r\n            startTime: this.memberForm.controls['AftStart6'].value,\r\n            endTime: this.memberForm.controls['AftEnd6'].value\r\n          },\r\n          eveningSlot: {\r\n            startTime: this.memberForm.controls['EveStart6'].value,\r\n            endTime: this.memberForm.controls['EveEnd6'].value,\r\n          },\r\n          nightSlot: {\r\n            startTime: this.memberForm.controls['NigStart6'].value,\r\n            endTime: this.memberForm.controls['NigEnd6'].value,\r\n          }\r\n          },\r\n      ]\r\n    }\r\n    console.log(\"ConsultantDetailsComponent -> SaveSlots -> data123\", data123)\r\n    this.mainService.addTime(data123).then(slotData =>{\r\n      console.log(\"ConsultantDetailsComponent -> SaveSlots -> slotData\", slotData)\r\n      this.timeId = slotData.data._id\r\n    }).catch(error =>{\r\n      console.log(\"ConsultantDetailsComponent -> SaveSlots -> error\", error)\r\n    })\r\n  }\r\n\r\n  onSave(stepper: MatStepper): void {  \r\n      if(this.profile.typeOfEstablishment === \"OwnEstablishment\"){\r\n        const data ={\r\n          name: this.memberForm.controls.clinicName.value\r\n        }\r\n        console.log(\"ConsultantDetailsComponent -> onSave -> data\", data)\r\n\r\n        this.mainService.addclinic(data).then(ClinicData =>{\r\n          console.log(\"file: consultant-details.component.ts ~ line 156 ~ ConsultantDetailsComponent ~ this.mainService.addclinic ~ ClinicData\", ClinicData)\r\n          this.ClinicId = ClinicData.data._id\r\n          const data1 ={\r\n            clinicId: ClinicData.data._id,\r\n            location: {\r\n              address: this.memberForm.controls.address.value,\r\n              landmark: this.memberForm.controls.landmark.value,\r\n              country: this.countryId,\r\n              state: this.stateId,\r\n              city: this.cityId,\r\n              lat: this.lat,\r\n              lng: this.lang \r\n            }\r\n          }\r\n          console.log(\"ConsultantDetailsComponent -> onSave -> data1\", data1)\r\n    \r\n          this.mainService.addlocation(data1).then(locData =>{\r\n            console.log(\"file: consultant-details.component.ts ~ line 175 ~ ConsultantDetailsComponent ~ this.mainService.addlocation ~ locData\", locData)\r\n            this.locationId = locData.data._id\r\n            this.SaveSlots()\r\n          }).catch(error =>{\r\n            console.log(\"file: consultant-details.component.ts ~ line 182 ~ ConsultantDetailsComponent ~ this.mainService.addlocation ~ error\", error)\r\n          })\r\n        \r\n        }).catch(err =>{\r\n          console.log(\"file: consultant-details.component.ts ~ line 163 ~ ConsultantDetailsComponent ~ this.mainService.addclinic ~ err\", err)\r\n        })\r\n      }else{\r\n        if(this.memberForm.controls.establishmentHour.value === \"sameAsEstablishmentHour\"){\r\n          const memData ={\r\n            clinicId: this.clinicId,\r\n            locationId: this.locClinicId,\r\n            timingId: this.timeClinicId\r\n          }\r\n          console.log(\"ConsultantDetailsComponent -> onSave -> memData\", memData)\r\n          this.mainService.addTimingVisit(memData).then(memDataTime =>{\r\n            console.log(\"ConsultantDetailsComponent -> onSave -> memDataTime\", memDataTime)\r\n            this.showToast('success', 'Profile', 'Profile updated successfully');\r\n          })\r\n        }else{\r\n          const memData1 ={\r\n            clinicId: this.clinicId,\r\n            locationId: this.locClinicId,\r\n          }\r\n\r\n          console.log(\"ConsultantDetailsComponent -> onSave -> memData1\", memData1)\r\n            this.mainService.addTimingVisit(memData1).then(memDataTime =>{\r\n            console.log(\"ConsultantDetailsComponent -> onSave -> memDataTime\", memDataTime)\r\n            this.showToast('success', 'Profile', 'Profile updated successfully');\r\n          })\r\n        }\r\n        \r\n      }\r\n       \r\n     \r\n\r\n      if(this.memberForm.controls.establishmentHour.value === \"sameAsEstablishmentHour\"){\r\n        this.mainService.updateUserprofile(this.memberForm.value).then(resData => {\r\n        console.log(\"ConsultantDetailsComponent -> onSave -> resData\", resData)\r\n          if(resData.status == 'SUCCESS'){\r\n            this.showToast('success', 'Profile', 'Profile updated successfully');\r\n            this.router.navigate(['/Doctor/Profile']);\r\n          }else{\r\n            this.showToast('Faild', 'Profile', 'Something Went Wrong');\r\n          }\r\n        }).catch(error => {\r\n          console.log(\"EditProfileComponent -> onSave -> error\", error)\r\n        })\r\n\r\n      }else{\r\n        this.mainService.updateUserprofile(this.memberForm.value).then(resData => {\r\n          if(resData.status == 'SUCCESS'){\r\n            this.showToast('success', 'Profile', 'Profile updated successfully');\r\n          stepper.next();\r\n          }else{\r\n            this.showToast('Faild', 'Profile', 'Something Went Wrong');\r\n          }\r\n        }).catch(error => {\r\n          console.log(\"EditProfileComponent -> onSave -> error\", error)\r\n        })\r\n      }\r\n\r\n\r\n\r\n  }\r\n\r\n  visiteClinic(id){\r\n    console.log(\"ConsultantDetailsComponent -> visiteClinic -> event\", event)\r\n    this.mainService.getDOCClinic(id).then(DocClinic =>{\r\n    console.log(\"ConsultantDetailsComponent -> visiteClinic -> DocClinic\", DocClinic)\r\n      this.DOCClicnicId = DocClinic.data[0]?.clinicId?._id\r\n      this.locClinicId = DocClinic.data[0]?.locationId?._id\r\n      this.timeClinicId = DocClinic.data[0]?._id\r\n    }).catch(err =>{\r\n      console.log(\"ConsultantDetailsComponent -> visiteClinic -> err\", err)\r\n    })\r\n  }\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n  // getTime() {\r\n  //   this.TimeSloat = [];\r\n    \r\n  //   for (var i = 0; i < 24; i++) {\r\n  //     var hour = i < 10 ? '0' + i : i;\r\n  //     // if (i <= 13) {\r\n  //       this.TimeSloat.push({ label: hour + ':00', value: hour + ':00' });\r\n  //       this.TimeSloat.push({ label: hour + ':30', value: hour + ':30' });\r\n  //       // } else {\r\n  //         //   this.TimeSloat2.push({ label: hour + ':00', value: hour + ':00' });\r\n  //         //   this.TimeSloat2.push({ label: hour + ':30', value: hour + ':30' });\r\n  //         // }\r\n  //       }\r\n        \r\n  //       console.log(\"ConsultantDetailsComponent -> getTime -> this.TimeSloat\", this.TimeSloat)\r\n  // }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  MorningSlot: string;\r\n  AfternoonSlots: string;\r\n  Day: any;\r\n  EveningSlots:string;\r\n  NightSlots:string;\r\n}\r\n\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {Day: 'MON', MorningSlot: 'Hydrogen', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'TUE', MorningSlot: 'Helium', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'WED', MorningSlot: 'Lithium', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'THU', MorningSlot: 'Beryllium', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'FRI', MorningSlot: 'Boron', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'SAT', MorningSlot: 'Carbon', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  {Day: 'SUN', MorningSlot: 'Nitrogen', AfternoonSlots:'asas',EveningSlots:'dsasas',NightSlots:'asde'},\r\n  \r\n];\r\n","<section>\r\n    <div class=\"container\">\r\n        <div class=\"row\" style=\"margin-top: 20px;\">\r\n                <div class=\"\" >\r\n                    <form [formGroup]=\"memberForm\">\r\n                        <!-- <div class=\"\" >\r\n                            <ng-container formArrayName=\"clinicDetails\"  *ngFor=\"let quantity of ClinicDetails().controls; let j=index\"  >\r\n                            <div  [formGroupName]=\"j\" style=\"border: 2px solid ; border-radius: 5px;padding: 20px;\">\r\n                            \r\n                                <div class=\"col-12\" style=\"display: flex;justify-content: flex-end;padding: 0px;\">\r\n                                    <button type=\"button\" class=\"btn\" style=\"color: red;cursor: pointer;\" (click)=\" deleteClinicDetails(j)\" *ngIf=\"j > 0\"><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-dash-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                                        <path fill-rule=\"evenodd\" d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"/>\r\n                                    </svg></button>\r\n                                </div>\r\n\r\n                            <div class=\"form-group\">\r\n                                <label for=\"RegistrationNumber\">Clinic Name</label>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12\">\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"clinicName\"\r\n                                            placeholder=\"eg. Ram Clinic\" >\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div  style=\"margin: 0px 0px 25px 0px;padding: 0px;\"  >\r\n                            <label for=\"RegistrationNumber\">Clinic Name</label>\r\n                            <div class=\"ng-autocomplete\" style=\"width: 100%;\">\r\n                                <ng-autocomplete \r\n                                [data]=\"data\"\r\n                                [searchKeyword]=\"keyword\"\r\n                                (selected)='selectEvent($event)'\r\n                                (inputChanged)='onChangeSearch($event)'\r\n                                (inputFocused)='onFocused($event)'\r\n                                [itemTemplate]=\"itemTemplate\"\r\n                                [notFoundTemplate]=\"notFoundTemplate\"\r\n                                formControlName=\"clinicName\">  \r\n                                </ng-autocomplete>\r\n                                \r\n                                <ng-template #itemTemplate let-item>\r\n                                <a [innerHTML]=\"item.name\"></a>\r\n                                </ng-template>\r\n                                \r\n                                <ng-template #notFoundTemplate let-notFound>\r\n                                <div [innerHTML]=\"notFound\"></div>\r\n                                </ng-template>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div class=\"form-group\">\r\n                                <label for=\"RegistrationNumber\">Clinic Address</label>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12\">\r\n                                        <textarea type=\"text\" class=\"form-control\" formControlName=\"clinicAddress\">\r\n                                    </textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div  style=\"margin: 0px 0px 25px 0px;padding: 0px;\" >\r\n                                <label for=\"RegistrationNumber\">Location</label>\r\n                                <div class=\"ng-autocomplete\" style=\"width: 100%;\">\r\n                                    <ng-autocomplete \r\n                                    [data]=\"data\"\r\n                                    [searchKeyword]=\"keyword1\"\r\n                                    (selected)='selectEvent1($event)'\r\n                                    (inputChanged)='onChangeSearch1($event)'\r\n                                    (inputFocused)='onFocused1($event)'\r\n                                    [itemTemplate]=\"itemTemplate\"\r\n                                    [notFoundTemplate]=\"notFoundTemplate\"\r\n                                    formControlName=\"clinicAddress\"\r\n                                    >  \r\n                                    \r\n                                    </ng-autocomplete>\r\n                                    \r\n                                    <ng-template #itemTemplate let-item>\r\n                                    <a [innerHTML]=\"item.name\"></a>\r\n                                    </ng-template>\r\n                                    \r\n                                    <ng-template #notFoundTemplate let-notFound>\r\n                                    <div [innerHTML]=\"notFound\"></div>\r\n                                    </ng-template>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                \r\n\r\n\r\n\r\n                            <ng-container formArrayName=\"times\">\r\n                                <div *ngFor=\"let quantity of times(j).controls; let k=index\" [formGroupName]=\"k\">\r\n\r\n                                <div style=\"border: 2px solid ; border-radius: 5px;padding: 20px;\"> \r\n                                <div class=\"col-12\" style=\"display: flex;justify-content: flex-end;padding: 0px;\">\r\n                                    <button type=\"button\" class=\"btn\" style=\"color: red;cursor: pointer;\" (click)=\"deleteTime(j,k)\" *ngIf=\"k > 0\"><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-dash-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                                        <path fill-rule=\"evenodd\" d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"/>\r\n                                    </svg></button>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"RegistrationNumber\">Select Day</label>\r\n                                    <select class=\"form-control\" formControlName=\"timeday\">\r\n                                        <option value=\"Monday\"> Monday </option>\r\n                                        <option value=\"Tuesday\"> Tuesday </option>\r\n                                        <option value=\"Wednesday\"> Wednesday </option>\r\n                                        <option value=\"Thursday\"> Thursday </option>\r\n                                        <option value=\"Friday\"> Friday </option>\r\n                                        <option value=\"Saturday\"> Saturday </option>\r\n                                        <option value=\"Sunday\"> Sunday </option>\r\n                                    </select>\r\n                                </div>\r\n                            <div class=\"form-group\" >\r\n                                <label for=\"RegistrationNumber\">Timming</label>\r\n                                <div class=\"row\">\r\n                                <div class=\"form-group col-md-6\" >\r\n                                    <label for=\"startSession\"> Start</label>\r\n                                    <select class=\"form-control\" formControlName=\"session1Start\" >\r\n                                        <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"form-group col-md-6\">\r\n                                    <label for=\"startSession\"> End</label>\r\n                                    <select class=\"form-control\"  formControlName=\"session1End\" >\r\n                                        <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div style=\"display: flex;justify-content: flex-end;\">\r\n                            <button type=\"button\" class=\"btn \" style=\"color: green;cursor: pointer;\" (click)=\"addTime(j)\"><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-plus-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                                <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n                            </svg></button>\r\n                            </div>\r\n\r\n                            </ng-container>\r\n                        </div>\r\n                        </ng-container>\r\n                        <div style=\" display: flex; justify-content: flex-end; \">\r\n                            <button type=\"button\" class=\"btn \" style=\"color: green;cursor: pointer;\" (click)=\"addClinicDetails()\"  >\r\n                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-plus-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                                    <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n                                </svg>\r\n                            </button>\r\n                         </div>\r\n                        </div>  -->\r\n                        <div class=\"\">\r\n                            <div class=\"col-sm-12 col-md-12 col-lg-12\"  *ngIf=\"!hide\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3 col-md-3 col-lg-3\" >\r\n                                        <mat-form-field appearance=\"outline\">\r\n                                            <mat-label>Clinic Name</mat-label>\r\n                                            <input  matInput placeholder=\"Clinic Name\" formControlName=\"clinicName\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3 col-md-3 col-lg-3\">\r\n                                        <mat-form-field appearance=\"outline\" >\r\n                                            <mat-label>Address</mat-label>\r\n                                            <input matInput placeholder=\"Address\" formControlName=\"address\" >\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3 col-md-3 col-lg-3\">\r\n                                        <mat-form-field appearance=\"outline\"  >\r\n                                            <mat-label>Landmark</mat-label>\r\n                                            <input matInput placeholder=\"Landmark\" formControlName=\"landmark\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3 col-md-3 col-lg-3\">\r\n                                        <mat-form-field appearance=\"outline\"  >\r\n                                            <mat-label>Country</mat-label>\r\n                                            <mat-select (selectionChange)=\"CountryId($event)\" formControlName=\"country\" >\r\n                                                <mat-option *ngFor=\"let country of countryList\" [value]=\"country.id\">{{country?.name}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3 col-md-3 col-lg-3\">\r\n                                        <mat-form-field appearance=\"outline\"  >\r\n                                            <mat-label>State</mat-label>\r\n                                            <mat-select (selectionChange)=\"State($event)\" formControlName=\"state\">\r\n                                                <mat-option *ngFor=\"let state of stateList\" [value]=\"state.id\">{{state.name}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3 col-md-3 col-lg-3\">\r\n                                        <mat-form-field appearance=\"outline\"  >\r\n                                            <mat-label>City</mat-label>\r\n                                            <mat-select (selectionChange)=\"City($event)\" formControlName=\"city\">\r\n                                                <mat-option *ngFor=\"let city of cityList\" [value]=\"city.id\">{{city?.name}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\" style=\"margin-bottom: 1rem;\" >\r\n                                    <div class=\"col-sm-12\" >\r\n                                        <table mat-table [dataSource]=\"dataSource1?.filteredData\" style=\"width: 100%;\">\r\n                                            <ng-container *ngFor=\"let disCol of displayedColumns; let colIndex = index\" matColumnDef=\"{{disCol}}\">\r\n                                                <mat-header-cell *matHeaderCellDef>{{disCol}}</mat-header-cell>\r\n                                                <mat-cell *matCellDef=\"let element ; let i =index\"> \r\n                                                    <div *ngIf= \"disCol != 'Action'\" >{{element[disCol]}}</div>\r\n                                                    <div *ngIf=\"disCol =='Sr_No'\">\r\n                                                        {{ i+1 }}\r\n                                                    </div>\r\n                                                    <div *ngIf=\"disCol =='Action'\">\r\n                                                        <span class=\"material-icons\" style=\"cursor: pointer;\" (click)=\"openEdit(element.Action)\" >\r\n                                                            create\r\n                                                        </span>\r\n                                                        <span class=\"material-icons\"  style=\"cursor: pointer;\"  (click)=\"onDelete(element.Action)\">\r\n                                                            delete\r\n                                                            </span>\r\n                                                    </div>\r\n                                                </mat-cell>\r\n                                            </ng-container>\r\n                                \r\n                                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                                            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n                                        </table>\r\n                                        <mat-paginator\r\n                                        [pageSizeOptions]=\"[5, 10, 25]\"\r\n                                    ></mat-paginator>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\" style=\"margin-bottom: 1rem;\">\r\n                                    <div class=\"\">\r\n                                        <mat-accordion>\r\n                                            <mat-expansion-panel>\r\n                                                <mat-expansion-panel-header>\r\n                                                    <mat-panel-title>\r\n                                                        Add Clinic Time\r\n                                                    </mat-panel-title>\r\n                                                </mat-expansion-panel-header>\r\n                                                <table mat-table [dataSource]=\"dataSource\" cdkDropList cdkDropListOrientation=\"horizontal\"\r\n                                                        (cdkDropListDropped)=\"drop($event)\">\r\n\r\n                                                        <ng-container matColumnDef=\"Day\">\r\n                                                            <th mat-header-cell cdkDrag *matHeaderCellDef> Day </th>\r\n                                                            <td mat-cell *matCellDef=\"let element\" style=\"width:8%\"> {{element.Day}} </td>\r\n                                                        </ng-container>\r\n\r\n                                                        <ng-container matColumnDef=\"MorningSlot\" align=\"center\">\r\n                                                            <th mat-header-cell cdkDrag *matHeaderCellDef style=\"text-align: center;background-color: #ececec;\"> Morning Slot </th>\r\n                                                            <!-- <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td> -->\r\n                                                            <td mat-cell *matCellDef=\"let element;let i=index\" style=\"width:22.5%;background-color: #ececec;\"> \r\n                                                                <div class=\"col-12\">\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-6\">\r\n                                                                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                                <mat-label>Sessions Start</mat-label>\r\n                                                                                <mat-select required formControlName=\"MorStart{{i}}\">\r\n                                                                                    <mat-option> -- None -- </mat-option>\r\n                                                                                    <mat-option value=\"06:00\">06:00</mat-option>\r\n                                                                                    <mat-option value=\"06:30\">06:30</mat-option>\r\n                                                                                    <mat-option value=\"07:00\">07:00</mat-option>\r\n                                                                                    <mat-option value=\"07:30\">07:30</mat-option>\r\n                                                                                    <mat-option value=\"08:00\">08:00</mat-option>\r\n                                                                                    <mat-option value=\"08:30\">08:30</mat-option>\r\n                                                                                    <mat-option value=\"09:00\">09:00</mat-option>\r\n                                                                                    <mat-option value=\"09:30\">09:30</mat-option>\r\n                                                                                    <mat-option value=\"10:00\">10:00</mat-option>\r\n                                                                                    <mat-option value=\"10:30\">10:30</mat-option>\r\n                                                                                    <mat-option value=\"11:00\">11:00</mat-option>\r\n                                                                                    <mat-option value=\"11:30\">11:30</mat-option>\r\n                                                                                    <mat-option value=\"11:59\">11:59</mat-option>\r\n                                                                                </mat-select>\r\n                                                                            </mat-form-field>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-6\">\r\n                                                                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                                <mat-label>Sessions Start</mat-label>\r\n                                                                                <mat-select required formControlName=\"MorEnd{{i}}\">\r\n                                                                                    <mat-option> -- None -- </mat-option>\r\n                                                                                    <mat-option value=\"06:00\">06:00</mat-option>\r\n                                                                                    <mat-option value=\"06:30\">06:30</mat-option>\r\n                                                                                    <mat-option value=\"07:00\">07:00</mat-option>\r\n                                                                                    <mat-option value=\"07:30\">07:30</mat-option>\r\n                                                                                    <mat-option value=\"08:00\">08:00</mat-option>\r\n                                                                                    <mat-option value=\"08:30\">08:30</mat-option>\r\n                                                                                    <mat-option value=\"09:00\">09:00</mat-option>\r\n                                                                                    <mat-option value=\"09:30\">09:30</mat-option>\r\n                                                                                    <mat-option value=\"10:00\">10:00</mat-option>\r\n                                                                                    <mat-option value=\"10:30\">10:30</mat-option>\r\n                                                                                    <mat-option value=\"11:00\">11:00</mat-option>\r\n                                                                                    <mat-option value=\"11:30\">11:30</mat-option>\r\n                                                                                    <mat-option value=\"11:59\">11:59</mat-option>\r\n                                                                                </mat-select>\r\n                                                                            </mat-form-field>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        </ng-container>\r\n\r\n                                                        <ng-container matColumnDef=\"AfternoonSlots\">\r\n                                                            <th mat-header-cell *matHeaderCellDef style=\"text-align: center;\"> Afternoon Slots </th>\r\n                                                            <td mat-cell *matCellDef=\"let element; let i=index\" style=\"width:22.5%\">  \r\n                                                                <div class=\"col-12\">\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-6\">\r\n                                                                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                                <mat-label>Sessions Start</mat-label>\r\n                                                                                <mat-select required formControlName=\"AftStart{{i}}\">\r\n                                                                                    <mat-option> -- None -- </mat-option>\r\n                                                                                    <mat-option value=\"12:00\">12:00</mat-option>\r\n                                                                                    <mat-option value=\"12:30\">12:30</mat-option>\r\n                                                                                    <mat-option value=\"13:00\">13:00</mat-option>\r\n                                                                                    <mat-option value=\"13:30\">13:30</mat-option>\r\n                                                                                    <mat-option value=\"14:00\">14:00</mat-option>\r\n                                                                                    <mat-option value=\"14:30\">14:30</mat-option>\r\n                                                                                    <mat-option value=\"15:00\">15:00</mat-option>\r\n                                                                                    <mat-option value=\"15:30\">15:30</mat-option>\r\n                                                                                    <mat-option value=\"16:00\">16:00</mat-option>\r\n                                                                                    <mat-option value=\"16:30\">16:30</mat-option>\r\n                                                                                    <mat-option value=\"17:00\">17:00</mat-option>\r\n                                                                                    <mat-option value=\"17:30\">17:30</mat-option>\r\n                                                                                    <mat-option value=\"17:59\">17:59</mat-option>\r\n                                                                                </mat-select>\r\n                                                                            </mat-form-field>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-6\">\r\n                                                                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                                <mat-label>Sessions End</mat-label>\r\n                                                                                <mat-select required formControlName=\"AftEnd{{i}}\">\r\n                                                                                    <mat-option> -- None -- </mat-option>\r\n                                                                                    <mat-option value=\"12:00\">12:00</mat-option>\r\n                                                                                    <mat-option value=\"12:30\">12:30</mat-option>\r\n                                                                                    <mat-option value=\"13:00\">13:00</mat-option>\r\n                                                                                    <mat-option value=\"13:30\">13:30</mat-option>\r\n                                                                                    <mat-option value=\"14:00\">14:00</mat-option>\r\n                                                                                    <mat-option value=\"14:30\">14:30</mat-option>\r\n                                                                                    <mat-option value=\"15:00\">15:00</mat-option>\r\n                                                                                    <mat-option value=\"15:30\">15:30</mat-option>\r\n                                                                                    <mat-option value=\"16:00\">16:00</mat-option>\r\n                                                                                    <mat-option value=\"16:30\">16:30</mat-option>\r\n                                                                                    <mat-option value=\"17:00\">17:00</mat-option>\r\n                                                                                    <mat-option value=\"17:30\">17:30</mat-option>\r\n                                                                                    <mat-option value=\"17:59\">17:59</mat-option>\r\n                                                                                </mat-select>\r\n                                                                            </mat-form-field>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        </ng-container>\r\n\r\n                                                        <ng-container matColumnDef=\"EveningSlots\">\r\n                                                            <th mat-header-cell *matHeaderCellDef style=\"text-align: center;background-color: #ececec;\"> Evening Slots </th>\r\n                                                            <td mat-cell *matCellDef=\"let element;let i = index\" style=\"width:22.5%;background-color: #ececec;\">  <div class=\"col-12\">\r\n                                                            <div class=\"row\">\r\n                                                                <div class=\"col-6\">\r\n                                                                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                                <mat-label>Sessions Start</mat-label>\r\n                                                                                <mat-select required formControlName=\"EveStart{{i}}\">\r\n                                                                                    <mat-option> -- None -- </mat-option>\r\n                                                                                    <mat-option value=\"18:00\">18:00</mat-option>\r\n                                                                                    <mat-option value=\"18:30\">18:30</mat-option>\r\n                                                                                    <mat-option value=\"19:00\">19:00</mat-option>\r\n                                                                                    <mat-option value=\"19:30\">19:30</mat-option>\r\n                                                                                    <mat-option value=\"20:00\">20:00</mat-option>\r\n                                                                                    <mat-option value=\"20:30\">20:30</mat-option>\r\n                                                                                    <mat-option value=\"21:00\">21:00</mat-option>\r\n                                                                                    <mat-option value=\"21:30\">21:30</mat-option>\r\n                                                                                    <mat-option value=\"22:00\">22:00</mat-option>\r\n                                                                                    <mat-option value=\"22:30\">22:30</mat-option>\r\n                                                                                    <mat-option value=\"23:00\">23:00</mat-option>\r\n                                                                                    <mat-option value=\"23:30\">23:30</mat-option>\r\n                                                                                    <mat-option value=\"23:59\">23:59</mat-option>\r\n                                                                                </mat-select>\r\n                                                                            </mat-form-field>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-6\">\r\n                                                                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                                <mat-label>Sessions End</mat-label>\r\n                                                                                <mat-select required formControlName=\"EveEnd{{i}}\">\r\n                                                                                    <mat-option> -- None -- </mat-option>\r\n                                                                                    <mat-option value=\"18:00\">18:00</mat-option>\r\n                                                                                    <mat-option value=\"18:30\">18:30</mat-option>\r\n                                                                                    <mat-option value=\"19:00\">19:00</mat-option>\r\n                                                                                    <mat-option value=\"19:30\">19:30</mat-option>\r\n                                                                                    <mat-option value=\"20:00\">20:00</mat-option>\r\n                                                                                    <mat-option value=\"20:30\">20:30</mat-option>\r\n                                                                                    <mat-option value=\"21:00\">21:00</mat-option>\r\n                                                                                    <mat-option value=\"21:30\">21:30</mat-option>\r\n                                                                                    <mat-option value=\"22:00\">22:00</mat-option>\r\n                                                                                    <mat-option value=\"22:30\">22:30</mat-option>\r\n                                                                                    <mat-option value=\"23:00\">23:00</mat-option>\r\n                                                                                    <mat-option value=\"23:30\">23:30</mat-option>\r\n                                                                                    <mat-option value=\"23:59\">23:59</mat-option>\r\n                                                                                </mat-select>\r\n                                                                            </mat-form-field>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div> \r\n                                                            </td>\r\n                                                        </ng-container>\r\n\r\n                                                        <ng-container matColumnDef=\"NightSlots\">\r\n                                                            <th mat-header-cell *matHeaderCellDef style=\"text-align: center;\"> Night Slots </th>\r\n                                                            <td mat-cell *matCellDef=\"let element;let i = index\" style=\"width:22.5%\">  <div class=\"col-12\">\r\n                                                                <div class=\"row\">\r\n                                                                    <div class=\"col-6\">\r\n                                                                        <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                            <mat-label>Sessions Start</mat-label>\r\n                                                                            <mat-select required formControlName=\"NigStart{{i}}\">\r\n                                                                                <mat-option> -- None -- </mat-option>\r\n                                                                                <mat-option value=\"00:00\">00:00</mat-option>\r\n                                                                                <mat-option value=\"00:30\">00:30</mat-option>\r\n                                                                                <mat-option value=\"01:00\">01:00</mat-option>\r\n                                                                                <mat-option value=\"01:30\">01:30</mat-option>\r\n                                                                                <mat-option value=\"02:00\">02:00</mat-option>\r\n                                                                                <mat-option value=\"02:30\">02:30</mat-option>\r\n                                                                                <mat-option value=\"03:00\">03:00</mat-option>\r\n                                                                                <mat-option value=\"03:30\">03:30</mat-option>\r\n                                                                                <mat-option value=\"04:00\">04:00</mat-option>\r\n                                                                                <mat-option value=\"04:30\">04:30</mat-option>\r\n                                                                                <mat-option value=\"05:00\">05:00</mat-option>\r\n                                                                                <mat-option value=\"05:30\">05:30</mat-option>\r\n                                                                                <mat-option value=\"05:59\">05:59</mat-option>\r\n                                                                            </mat-select>\r\n                                                                        </mat-form-field>\r\n                                                                    </div>\r\n                                                                        <div class=\"col-6\">\r\n                                                                            <mat-form-field appearance=\"outline\" style=\"display: block;\">\r\n                                                                                <mat-label>Sessions End</mat-label>\r\n                                                                                <mat-select required formControlName=\"NigEnd{{i}}\" >\r\n                                                                                    <mat-option> -- None -- </mat-option>\r\n                                                                                    <mat-option value=\"00:00\">00:00</mat-option>\r\n                                                                                    <mat-option value=\"00:30\">00:30</mat-option>\r\n                                                                                    <mat-option value=\"01:00\">01:00</mat-option>\r\n                                                                                    <mat-option value=\"01:30\">01:30</mat-option>\r\n                                                                                    <mat-option value=\"02:00\">02:00</mat-option>\r\n                                                                                    <mat-option value=\"02:30\">02:30</mat-option>\r\n                                                                                    <mat-option value=\"03:00\">03:00</mat-option>\r\n                                                                                    <mat-option value=\"03:30\">03:30</mat-option>\r\n                                                                                    <mat-option value=\"04:00\">04:00</mat-option>\r\n                                                                                    <mat-option value=\"04:30\">04:30</mat-option>\r\n                                                                                    <mat-option value=\"05:00\">05:00</mat-option>\r\n                                                                                    <mat-option value=\"05:30\">05:30</mat-option>\r\n                                                                                    <mat-option value=\"05:59\">05:59</mat-option>\r\n                                                                                </mat-select>\r\n                                                                            </mat-form-field>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div> \r\n                                                            </td>\r\n                                                        </ng-container>\r\n\r\n                                                        <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\r\n                                                        <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\r\n                                                </table>\r\n                                            </mat-expansion-panel>\r\n                                        </mat-accordion>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <mat-form-field appearance=\"fill\" *ngIf=\"hide\" style=\"width: 100%;\" >\r\n                            <mat-label>Clinic Name</mat-label>\r\n                            <mat-select formControlName=\"ClinicName1\">\r\n                            <mat-option>None</mat-option>\r\n                            <mat-option *ngFor=\"let clinic of ClinicName\" [value]=\"clinic?._id\">{{clinic.name}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n\r\n                        <div class=\"form-group \">\r\n                            <label for=\"startSession\"> Fees </label>\r\n                            <input type=\"number\" class=\"form-control\" formControlName=\"fees\"\r\n                            placeholder=\"Enter your consultation charges\" aria-label=\"Username\"\r\n                            aria-describedby=\"basic-addon1\" />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"startSession\">Doctor’s hours</label>\r\n                            <mat-radio-group aria-label=\"Select an option\" formControlName=\"establishmentHour\">\r\n                                <div class=\"form-group-sm border py-2 pl-2\">\r\n                                    <mat-radio-button value=\"sameAsEstablishmentHour\">Same as establishment hours</mat-radio-button>\r\n                                </div>\r\n                                <div class=\"form-group-sm border py-2 pl-2\">\r\n                                    <mat-radio-button value=\"diffrentAsEstablishmentHour\">Different from establishment hours\r\n                                    </mat-radio-button>\r\n                                </div>\r\n                            </mat-radio-group>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <button mat-raised-button matStepperPrevious style=\"left: 16px;\">\r\n                                <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i>\r\n                                Back\r\n                            </button>\r\n                            <button style=\"position: absolute; right: 150px;\" mat-raised-button color=\"warn\" (click)=\"onSave(stepper)\" class=\r\n                            \"themeColorBtn\">\r\n                              Save and continue\r\n                              <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3 col-lg-3 offset-md-1\" style=\"margin-top: 120px;\">\r\n                    <div class=\"\" style=\"border: 1px solid #14aa9b;\">\r\n                        <div class=\"bg p-4 textcol\">\r\n                            <div>\r\n                                <i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i>\r\n                            </div>\r\n                            <p class=\"stext font-weight-bold\">\r\n                                Establishments with more doctors get more visibility on whealthylife.in\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n\r\n\r\n\r\n<!-- <section>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n            <form [formGroup]=\"empForm\" >\r\n                <div *ngFor=\"let employee of employees().controls; let empIndex=index\">\r\n                    <div class=\"\" [formGroupName]=\"empIndex\">\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"RegistrationNumber\">Clinic Name</label>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"clinicName\"\r\n                                         placeholder=\"eg. Ram Clinic\" >\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button (click)=\"removeEmployee(empIndex)\">Remove</button>\r\n\r\n                        <div formArrayName=\"skills\">\r\n                            <div *ngFor=\"let skill of employeeSkills(empIndex).controls; let skillIndex=index\">\r\n                                <div [formGroupName]=\"skillIndex\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"RegistrationNumber\">Timming</label>\r\n                                        <div class=\"row\">\r\n                                        <div class=\"form-group col-md-6\">\r\n                                            <label for=\"startSession\"> Start</label>\r\n                                            <select class=\"form-control\"    formControlName=\"session1Start\">\r\n                                                <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div class=\"form-group col-md-6\">\r\n                                            <label for=\"startSession\"> End</label>\r\n                                            <select class=\"form-control\"  formControlName=\"session1End\">\r\n                                                <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                                <button (click)=\"removeEmployeeSkill(empIndex,skillIndex)\">Remove</button>\r\n                            </div>\r\n                            <button type=\"button\" (click)=\"addEmployeeSkill(empIndex)\">Add Skill</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <p>\r\n            <button type=\"button\" (click)=\"addEmployee()\">Add Employee</button>\r\n          </p>\r\n        <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n\r\n        </div>\r\n    </div>\r\n</section> -->\r\n \r\n<!-- <section>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n            <form [formGroup]=\"empForm\" >\r\n                <div formArrayName=\"addresssOne\" *ngFor=\"let quantity of addresssOne().controls; let j=index\" >\r\n                    <div class=\"\" [formGroupName]=\"j\">\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"RegistrationNumber\">Clinic Name</label>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"clinicName\"\r\n                                         placeholder=\"eg. Ram Clinic\" >\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n              \r\n\r\n                        <div formArrayName=\"Plots\">\r\n                            <div *ngFor=\"let quantity of Plots(j).controls; let p = index\" [formGroupName]=\"p\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"RegistrationNumber\">Timming</label>\r\n                                        <div class=\"row\">\r\n                                        <div class=\"form-group col-md-6\">\r\n                                            <label for=\"startSession\"> Start</label>\r\n                                            <select class=\"form-control\"    formControlName=\"session1Start\">\r\n                                                <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div class=\"form-group col-md-6\">\r\n                                            <label for=\"startSession\"> End</label>\r\n                                            <select class=\"form-control\"  formControlName=\"session1End\">\r\n                                                <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span class=\"material-icons\" style=\"color: red;cursor: pointer;\" (click)=\"deletePlots(j,p)\" *ngIf=\"p > 0\" >\r\n                                            remove_circle\r\n                                        </span>\r\n                                        <span class=\"material-icons\" style=\"color: green;cursor: pointer;\" (click)=\"addPlots(j)\"  *ngIf=\"p == 0\" >\r\n                                            add_circle\r\n                                        </span>\r\n                                    </div>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <span class=\"material-icons \" style=\"color: red;cursor: pointer;\" *ngIf=\"j > 0\" (click)=\"deleteAddresssOne(j)\">\r\n                                remove_circle_outline\r\n                            </span>\r\n                            <span class=\"material-icons \" style=\"color: green;cursor: pointer;\" *ngIf=\"j == 0\" (click)=\"addAddresssOne()\"> \r\n                                add_circle_outline\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <p>\r\n            <button type=\"button\" (click)=\"addEmployee()\">Add Employee</button>\r\n          </p>\r\n        <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n\r\n        </div>\r\n    </div>\r\n</section> -->\r\n\r\n<!-- <section class=\"bg-white p-sm-3\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 col-lg-3 offset-md-2\" [formGroup]=\"empForm\">\r\n\r\n           \r\n            <div class=\"form-group\">\r\n                <label for=\"RegistrationNumber\">Clinic Name</label>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"clinicName\"\r\n                             placeholder=\"eg. Ram Clinic\" >\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n                <label for=\"RegistrationNumber\">Timming</label>\r\n                <div class=\"row\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"startSession\"> Start</label>\r\n                    <select class=\"form-control\"    formControlName=\"session1Start\">\r\n                        <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"startSession\"> End</label>\r\n                    <select class=\"form-control\"  formControlName=\"session1End\">\r\n                        <option *ngFor=\"let item of TimeSloat\" [value]=\"item?.value\">{{item?.value}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n\r\n            <label for=\"RegistrationNumber\">Consultation Fees</label>\r\n            <div class=\"input-group sm mb-2\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text bg-white\" id=\"basic-addon1\">Fees</span>\r\n                </div>\r\n                <input type=\"number\" class=\"form-control\" formControlName=\"fees\"\r\n                    placeholder=\"Enter your consultation charges\" aria-label=\"Username\"\r\n                    aria-describedby=\"basic-addon1\" />\r\n            </div>\r\n            \r\n\r\n\r\n            <p>Doctor’s hours</p>\r\n            <div class=\"form-group\">\r\n                <mat-radio-group aria-label=\"Select an option\" formControlName=\"establishmentHour\">\r\n                    <div class=\"form-group-sm border py-2 pl-2\">\r\n                        <mat-radio-button value=\"sameAsEstablishmentHour\">Same as establishment hours</mat-radio-button>\r\n                    </div>\r\n                    <div class=\"form-group-sm border py-2 pl-2\">\r\n                        <mat-radio-button value=\"diffrentAsEstablishmentHour\">Different from establishment hours\r\n                        </mat-radio-button>\r\n                    </div>\r\n                </mat-radio-group>\r\n            </div>\r\n            <p>Note: you can add more doctors later.</p>\r\n            <hr class=\"mt-5 mb-5\" />\r\n            <div class=\"row\">\r\n                <button mat-raised-button matStepperPrevious>\r\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">chevron_left</mat-icon>\r\n                    Back\r\n                </button>\r\n                <button style=\"position: absolute; right: 0;\" mat-raised-button color=\"warn\" (click)=\"onSave()\">\r\n                    Save and contnue\r\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">chevron_right</mat-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n            <div class=\"d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n                style=\"border: 1px solid #14aa9b;\">\r\n                <div class=\"bg p-4 textcol\">\r\n                    <div>\r\n                        <i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                    <p class=\"stext font-weight-bold\">\r\n                        Establishments with more doctors get more visibility on whealthylife.in\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section> -->\r\n","import { Component, EventEmitter, forwardRef, HostBinding, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MainService } from 'src/app/services/main.service';\r\n\r\n@Component({\r\n  selector: 'app-dynamic-autocomplete',\r\n  templateUrl: './dynamic-autocomplete.component.html',\r\n  styleUrls: ['./dynamic-autocomplete.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => DynamicAutocompleteComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class DynamicAutocompleteComponent implements OnInit {\r\n\r\n  myControl = new FormControl();\r\n  selectedValue;\r\n  filteredOptions: Observable<string[]>;\r\n  question = 'Would you like to add ';\r\n  @Input() options: string[];\r\n  @Output() added = new EventEmitter();\r\n\r\n  constructor(public mainService: MainService,) {\r\n\r\n  }\r\n\r\n  // Function to call when the option changes.\r\n  onChange = (option: string) => {\r\n    console.log(\"DynamicAutocompleteComponent -> onChange -> option\", option)\r\n\r\n  };\r\n\r\n  // Function to call when the input is touched (when the autocomplete is clicked).\r\n  onTouched = () => { };\r\n\r\n  get value() {\r\n    return this.selectedValue;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n  }\r\n\r\n  getList() {\r\n    this.mainService.getDegree().then((resData) => {\r\n      console.log(\"EducationComponent -> resData\", resData.data);\r\n      this.filteredOptions = this.myControl.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(option => option ? this.filter(option) : resData.data.slice())\r\n        );\r\n    }).catch((error) => {\r\n      console.log(\"EducationComponent -> error\", error);\r\n    })\r\n  }\r\n\r\n  optionSelected(option) {\r\n    if (option.value.indexOf(this.question) === 0) {\r\n      let newOption = option.value.substring(this.question.length).split('?')[0];\r\n      this.options.push(newOption);\r\n      this.added.emit(newOption);\r\n      this.myControl.setValue(newOption);\r\n      this.writeValue(newOption);\r\n    } else {\r\n      this.myControl.setValue(option.value);\r\n      this.writeValue(option.value);\r\n    }\r\n  }\r\n\r\n  enter() {\r\n    const controlValue = this.myControl.value;\r\n    console.log(\"DynamicAutocompleteComponent -> enter -> controlValue\", controlValue);\r\n    if (!this.options.some((entry: any) => entry.shortName === controlValue)) {\r\n      this.added.emit(controlValue);\r\n      const index = this.options.push(controlValue);\r\n      setTimeout(\r\n        () => {\r\n          this.myControl.setValue(controlValue);\r\n          this.writeValue(controlValue);\r\n        }\r\n      );\r\n    } else {\r\n      // this.writeValue(controlValue);\r\n      this.getList();\r\n    }\r\n  }\r\n\r\n  // Allows Angular to update the model (option).\r\n  // Update the model and changes needed for the view here.\r\n  writeValue(option: string): void {\r\n    this.selectedValue = option;\r\n    this.onChange(option);\r\n  }\r\n\r\n  // Allows Angular to register a function to call when the model (rating) changes.\r\n  // Save the function as a property to call later here.\r\n  registerOnChange(fn: (option: string) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  // Allows Angular to register a function to call when the input has been touched.\r\n  // Save the function as a property to call later here.\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  private filter(value: string): string[] {\r\n    let results;\r\n    if (value) {\r\n      results = this.options\r\n        .filter(option => option.toLowerCase().indexOf(value.toLowerCase()) === 0);\r\n      if (results.length < 1) {\r\n        results = [this.question + value + '?'];\r\n      }\r\n    } else {\r\n      results = this.options.slice();\r\n    }\r\n    return results;\r\n  }\r\n}\r\n","<input type=\"text\" style=\"width: 100%;\" class=\"form-control\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\" (keyup.enter)=\"enter()\">\r\n<mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"optionSelected($event.option)\">\r\n    <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.shortName\">\r\n        {{option.shortName}}\r\n    </mat-option>\r\n</mat-autocomplete>","import { TreatmentsService } from \"./../../../../services/treatments.service\";\r\nimport { SpecialityService } from \"./../../../../services/speciality.service\";\r\nimport { Component, OnInit, ElementRef, ViewChild } from \"@angular/core\";\r\nimport { MainService } from \"src/app/services/main.service\";\r\nimport { FormGroup, FormControl, FormControlName, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { UploadService } from \"src/app/services/upload.service\";\r\nimport { MessageService } from \"primeng/api\";\r\nimport { COMMA, ENTER } from \"@angular/cdk/keycodes\";\r\nimport { MatAutocompleteSelectedEvent, MatAutocomplete, } from \"@angular/material/autocomplete\";\r\nimport { MatChipInputEvent } from \"@angular/material/chips\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, startWith, filter } from \"rxjs/operators\";\r\nimport { Router } from '@angular/router';\r\nimport { DataSecurityComponent } from './../../settings/data-security/data-security.component';\r\n\r\n@Component({\r\n  selector: \"app-edit-profile\",\r\n  templateUrl: \"./edit-profile.component.html\",\r\n  styleUrls: [\"./edit-profile.component.scss\"],\r\n})\r\nexport class EditProfileComponent implements OnInit {\r\n  countryList: any = [];\r\n  stateList: any = [];\r\n  cityList: any = [];\r\n\r\n  profileForm: FormGroup;\r\n  profileData: any;\r\n  avatar: any;\r\n  timeZone: any;\r\n  speciality: any;\r\n  specialityId: any;\r\n\r\n  languages = [\r\n    { label: \"kanada\", value: \"kanada\" },\r\n    { label: \"English\", value: \"English\" },\r\n    { label: \"Marathi\", value: \"Marathi\" },\r\n    { label: \"Hindi\", value: \"Hindi\" },\r\n    { label: \"Bengali\", value: \"Bengali\" },\r\n  ];\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  fruitCtrl = new FormControl();\r\n  filteredFruits: Observable<string[]>;\r\n  fruits: any;\r\n  allFruits: string[] = [\"Apple\", \"Lemon\", \"Lime\", \"Orange\", \"Strawberry\"];\r\n\r\n  @ViewChild(\"fruitInput\") fruitInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild(\"auto\") matAutocomplete: MatAutocomplete;\r\n  treatment: any[]=[];\r\n  addedValue: any;\r\n  tempData: any;\r\n  addOption: any = false;\r\n  element1: any = [];\r\n  treatment1: any;\r\n  element2: any[];\r\n  addOption1: boolean;\r\n  tempData1: any=[];\r\n  specialitie: any[]=[];\r\n  specializationArray: any[]=[];\r\n  treatmentArray: any[]=[];\r\n  data1:any;\r\n  data2:any;\r\n  specialityFilter: any[]=[];\r\n  specialitiesId: any=[];\r\n  treatmentId: any;\r\n  treatmentID: any=[];\r\n  countryId: any;\r\n  stateid: any;\r\n  cityid: any;\r\n\r\n  constructor(\r\n    public mainService: MainService,\r\n    public uploadService: UploadService,\r\n    public messageService: MessageService,\r\n    public SpecialityService: SpecialityService,\r\n    public TreatmentsService: TreatmentsService,\r\n    public  router:Router,\r\n    public fb :FormBuilder\r\n  ) {\r\n      this.profileForm = fb.group({\r\n        avatar: [''],\r\n        firstName: [''],\r\n        lastName: [''],\r\n        mobileNumber: [''],\r\n        email: [''],\r\n        gender: [''],\r\n        dob: [''],\r\n        specialitie: [''],\r\n        treatment: [''],\r\n        bloodGroup: [''],\r\n        timeZone: [''],\r\n        address: [''],\r\n        landmark: [''],\r\n        country: [''],\r\n        state: [''],\r\n        city: [''],\r\n        pincode: [''],\r\n        extraPhoneNumber: [''],\r\n        language: ['']\r\n      });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfile();\r\n    this.getSpeciality();\r\n    this.treatmentAll();\r\n    this.getCountry();\r\n    this.getTimeZone();\r\n\r\n\r\n    this.profileForm.controls.specialitie.valueChanges.subscribe(resData =>{\r\n      this.specialityId = resData   \r\n    })\r\n\r\n    this.profileForm.controls.treatment.valueChanges.subscribe(resData =>{\r\n      this.treatmentId = resData   \r\n    })\r\n\r\n    this.profileForm.controls.country.valueChanges.subscribe(resData =>{\r\n      this.countryId = resData   \r\n    })\r\n\r\n    this.profileForm.controls.state.valueChanges.subscribe(resData =>{\r\n      this.stateid = resData   \r\n    })\r\n\r\n    this.profileForm.controls.city.valueChanges.subscribe(resData =>{\r\n        this.cityid = resData   \r\n    })\r\n\r\n\r\n\r\n  }\r\n\r\n  browseFile(event) {\r\n    const file = event.target.files;\r\n    this.uploadService\r\n      .upload(file)\r\n      .then((res) => {\r\n        this.avatar = res.files[0];\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error\", error);\r\n      });\r\n  }\r\n\r\n  getProfile() {\r\n    this.mainService\r\n      .getProfile()\r\n      .then((resData) => {\r\n      console.log(\"file: edit-profile.component.ts ~ line 138 ~ EditProfileComponent ~ .then ~ resData\", resData)\r\n\r\n      const profileData = resData.data\r\n      console.log(\"file: edit-profile.component.ts ~ line 157 ~ EditProfileComponent ~ .then ~ profileData\", profileData)\r\n        \r\n        this.SpecialityService.getDoctorSpecility().then(specData =>{\r\n          for(let i = 0; i < specData.data.length; i++){\r\n            this.specialitiesId[i] = specData.data[i].specializationId._id\r\n          }\r\n          this.profileForm.controls.specialitie.patchValue(this.specialitiesId)\r\n        })\r\n\r\n        this.TreatmentsService.getDoctreatment().then(trtData =>{\r\n          for(let i = 0; i < trtData.data.length; i++ ){\r\n            this.treatmentID[i] = trtData.data[i].treatmentId._id\r\n          }\r\n          this.profileForm.controls.treatment.patchValue(this.treatmentID) \r\n        })\r\n\r\n        this.profileForm.patchValue({\r\n          firstName: profileData.firstName,\r\n          lastName: profileData.lastName,\r\n          mobileNumber: profileData.mobileNumber,\r\n          email: profileData.email,\r\n          gender: profileData.gender,\r\n          dob: profileData.dob ? new Date(profileData.dob) : null,\r\n          bloodGroup: profileData.bloodGroup,\r\n          timeZone: profileData.timeZone,\r\n          address: profileData.location.address,\r\n          landmark: profileData.location.landmark,\r\n          country:  profileData.location.country,\r\n          state: profileData.location.state,\r\n          city: profileData.location.city,\r\n          pincode: profileData.location.pincode,\r\n          extraPhoneNumber: profileData.extraPhoneNumber,\r\n          language: profileData.language\r\n          \r\n        });\r\n        this.avatar= profileData.avatar\r\n\r\n\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> getProfile -> error\", error);\r\n      });\r\n\r\n\r\n     \r\n  }\r\n\r\n  getSpeciality() {\r\n    this.SpecialityService.getSpecialization()\r\n      .then((resData) => {\r\n        this.speciality = resData.data; \r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n      });\r\n\r\n  }\r\n  \r\n  treatmentAll(){\r\n    this.TreatmentsService.getAllTreatment()\r\n          .then((resdata) => {\r\n            this.treatment1 = resdata.data;\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"EditProfileComponent -> onChange -> err\", err);\r\n          });\r\n  }\r\n\r\n  getCountry() {\r\n    this.mainService\r\n      .getCountry()\r\n      .then((resData) => {\r\n        this.countryList = resData.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n      });\r\n  }\r\n\r\n  getState() {\r\n    this.mainService\r\n      .getState(this.countryId)\r\n      .then((resData) => {\r\n        this.stateList = resData.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n      });\r\n  }\r\n\r\n  getCity() {\r\n    this.mainService\r\n      .getCity(this.stateid)\r\n      .then((resData) => {\r\n        this.cityList = resData.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n      });\r\n  }\r\n\r\n  getTimeZone() {\r\n    this.mainService\r\n      .getTimeZone()\r\n      .then((resData) => {\r\n        this.timeZone = resData.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> getCountry -> error\", error);\r\n      });\r\n  }\r\n\r\n  onInput(e) {\r\n    this.speciality = this.speciality.filter((ele) =>\r\n      ele.fullName.toLowerCase().includes(e.target.value.toLowerCase())\r\n    );\r\n    if (this.speciality.length === 0) {\r\n      this.ngOnInit()\r\n    }\r\n  }\r\n\r\n  onInput1(e){\r\n      this.treatment1 = this.treatment1.filter((ele) =>\r\n        ele.fullName.toLowerCase().includes(e.target.value.toLowerCase())\r\n      );\r\n      this.treatment1 = []\r\n      if (this.treatment1.length === 0) {\r\n        this.ngOnInit()\r\n      }\r\n  \r\n  }\r\n\r\n  \r\n\r\n  onSave() {\r\n    var data = {\r\n      ...this.profileForm.value,\r\n      avatar: this.avatar,\r\n      dob: this.profileForm.value.dob,\r\n      location: {\r\n        address: this.profileForm.value.address,\r\n        landmark: this.profileForm.value.landmark,\r\n        state: this.stateid,\r\n        city: this.cityid,\r\n        pincode: this.profileForm.value.pincode,\r\n        country: this.countryId,\r\n      },\r\n      timeZone: this.profileForm.value.timeZone\r\n    };\r\n    this.mainService\r\n      .updateUserprofile(data)\r\n      .then((resData) => {\r\n        this.showToast(\"success\", \"Profile\", \"Profile updated successfully\");\r\n        this.router.navigate(['/Doctor'])\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> onSave -> error\", error);\r\n      });\r\n\r\n    const data1 ={\r\n        specializationArray: this.specialityId\r\n    }\r\n      \r\n    this.SpecialityService.addSpecialization(data1).then(SpecData => {\r\n    }).catch(err => {\r\n        console.log(\"file: edit-profile.component.ts ~ line 276 ~ EditProfileComponent ~ this.TreatmentsService.addDoctorTreatment ~ err\", err)\r\n    })\r\n\r\n    const data2= {\r\n      treatmentArray:  this.treatmentId \r\n    }\r\n      \r\n    this.TreatmentsService.addDoctorTreatment(data2).then(TreatData => {\r\n    }).catch(err => {\r\n      console.log(\"file: edit-profile.component.ts ~ line 313 ~ EditProfileComponent ~ this.TreatmentsService.addDoctorTreatment ~ err\", err)\r\n    })\r\n\r\n  }\r\n \r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({\r\n        severity: type,\r\n        summary: messageType,\r\n        detail: message,\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  isNumber(evt) {\r\n    evt = evt ? evt : window.event;\r\n    var charCode = evt.which ? evt.which : evt.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      console.log(\"EditProfileComponent -> isNumber -> evt\", evt);\r\n      evt.preventDefault();\r\n      return;\r\n    }\r\n    return;\r\n  }\r\n}\r\n","<p-toast class=\"custom-error\" [showTransformOptions]=\"'translateX(100%)'\"></p-toast>\r\n<div class=\"card shadow mb-4\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"card-header\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-3 first\">\r\n                        <h2 class=\"font-weight-bold text-primary\">Accounts</h2>\r\n                    </div>\r\n                    <div class=\"col-sm-9\">\r\n                        <button mat-raised-button color=\"warn\" class=\"float-right themeColorBtn\" (click)=\"onSave()\">Save\r\n                            Changes</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"row\" [formGroup]=\"profileForm\">\r\n                <div class=\"col-md-12 col-sm-12\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6  maincol\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n\r\n                                    <div class=\"row\">\r\n\r\n                                        <div class=\"col-sm-6 m-auto containerq\">\r\n                                            <img [src]=\"avatar\"\r\n                                                onerror=\"this.src='./../../../../../assets/images/doc.jpg'\"\r\n                                                (click)=\"image.click()\" class=\"profile-avtar \" style=\"cursor: pointer;\">\r\n                                            <input type=\"file\" style=\"display: none;\" #image\r\n                                                (change)=\"browseFile($event)\">\r\n\r\n                                            <div class=\"overlay profile-avtar \" (click)=\"image.click()\"\r\n                                                style=\"margin: auto;text-align: center; cursor: pointer;\">\r\n                                                <!-- <span style=\"margin-top: 86px;\" class=\"material-icons\">\r\n                                                    cloud_upload\r\n                                                </span> -->\r\n                                                <span class=\"material-icons\">\r\n                                                    cloud_upload\r\n                                                </span>\r\n                                            </div>\r\n                                            <div style=\"margin: auto;\r\n                                            text-align: center;\">Profile photo</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <hr class=\"bodhr\">\r\n                                <div class=\"col-sm-6 \">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"firstname\">First Name<span>*</span></label>\r\n                                        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"\r\n                                            id=\"firstname\">\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"lastName\">Last Name<span>*</span></label>\r\n                                        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"\r\n                                            id=\"lastName\">\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-6  mt-4\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Specialization\">Phone number</label>\r\n                                        <!-- <a style=\"float: right ;color:blue\">Edit</a> -->\r\n                                        <input type=\"number\" formControlName=\"mobileNumber\" class=\"form-control\"\r\n                                            readonly id=\"Contact\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6  mt-4\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"gstin\">Email Address</label>\r\n                                        <!-- <a style=\"float: right; color:blue\">Edit</a> -->\r\n                                        <input type=\"email\" formControlName=\"email\" class=\"form-control\" readonly\r\n                                            id=\"gstin\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"gender\">Gender</label>\r\n                                        <select class=\"form-control\" formControlName=\"gender\" id=\"gender\">\r\n                                            <option>Male</option>\r\n                                            <option>Female</option>\r\n                                            <option>Other</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"website\">Date of birth</label><br />\r\n                                        <p-calendar formControlName=\"dob\" placeholder=\"mm/dd/yyyy\"></p-calendar>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Specialisations\">Specialisations</label>\r\n                                     \r\n                                            <mat-select formControlName=\"specialitie\" placeholder=\"Serach\" class=\"form-control\"   multiple>\r\n                                              <mat-option >\r\n                                                <ngx-mat-select-search  placeholderLabel=\"Search\"   (onFilter)=\"onInput($event)\" ></ngx-mat-select-search>\r\n                                              </mat-option>\r\n                                              <mat-option *ngFor=\"let spec of speciality \" [value]=\"spec?._id\">\r\n                                                {{spec.fullName}}\r\n                                              </mat-option>\r\n                                            </mat-select>\r\n                                          \r\n                                        <!-- <p-multiSelect formControlName=\"specialitie\" defaultLabel=\"Select Specialities\"\r\n                                            [options]=\"speciality\" [filter]=\"true\" filterBy=\"fullName\"\r\n                                            [showToggleAll]=\"false\" optionLabel=\"fullName\"\r\n                                            (onFilter)=\"onInput($event)\" (onChange)=\"onOptionsSelected($event)\">\r\n                                            <ng-template let-it pTemplate=\"item\">\r\n                                                <span>{{it.fullName}}</span>\r\n                                            </ng-template>\r\n                                            <ng-template let-sitem pTemplate=\"selectedItems\">\r\n                                                <span *ngFor=\"let spec of speciality\" >\r\n                                                    <span>{{spec.fullName}}</span>\r\n                                                </span>\r\n                                            </ng-template>\r\n                                        </p-multiSelect> -->\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Treatment\">Treatment</label>\r\n                                     \r\n                                            <mat-select id=\"Treatment\" formControlName=\"treatment\"  placeholder=\"Serach\" class=\"form-control\"  multiple>\r\n                                              <mat-option>\r\n                                                <ngx-mat-select-search  placeholderLabel=\"Search\"  (input)=\"onInput1($event)\" ></ngx-mat-select-search>\r\n                                              </mat-option>\r\n                                              <!-- <mat-option *ngIf=\"addOption1\" > \r\n                                                  {{addOption1}}\r\n                                              </mat-option> -->\r\n                                              <mat-option *ngFor=\"let treat of treatment1\" [value]=\"treat._id\">\r\n                                                {{treat.fullName}}\r\n                                              </mat-option>\r\n                                            </mat-select>\r\n                                          \r\n                                    \r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!-- <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"treatment\">Treatment Types</label>\r\n                                        <p-multiSelect formControlName=\"treatment\" [options]=\"treatment\"\r\n                                            [showToggleAll]=\"false\" optionLabel=\"fullName\">\r\n                                        </p-multiSelect>\r\n                                    </div>\r\n                                </div> -->\r\n\r\n                                <hr style=\"border-top: 1px solid lightgray;\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"bloodGroup\"> Blood group</label>\r\n                                        <select class=\"form-control\" id=\"bloodGroup\" formControlName=\"bloodGroup\"\r\n                                            placeholder=\"Select an Option\">\r\n                                            <option>O+</option>\r\n                                            <option>O-</option>\r\n                                            <option>A+</option>\r\n                                            <option>A-</option>\r\n                                            <option>B+</option>\r\n                                            <option>B-</option>\r\n                                            <option>AB+</option>\r\n                                            <option>AB-</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"timezone\"> Time Zone</label>\r\n                                        <select class=\"form-control\" id=\"timezone\" formControlName=\"timeZone\"\r\n                                            placeholder=\"Select an Option\">\r\n                                            <option *ngFor=\"let time of timeZone\" [value]=\"time?.name\">{{time?.value}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr class=\"bodhr\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6  maincol \">\r\n                            <div class=\"mainhed\">Address</div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Specialization\">\r\n                                            House No./ Street Name/ Area</label>\r\n                                        <input type=\"text\" formControlName=\"address\" class=\"form-control\" id=\"address\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Specialization\">\r\n                                            Colony / Street / Locality</label>\r\n                                        <input type=\"text\" formControlName=\"landmark\" class=\"form-control\" id=\"landmark\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>\r\n                                            Country<span>\r\n                                                *\r\n                                            </span></label>\r\n                                        <select class=\"form-control\" formControlName=\"country\"\r\n                                            (change)=\"getState()\">\r\n                                            <option *ngFor=\"let country of countryList\" [value]=\"country?.id\">\r\n                                                {{country?.name}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6 \">\r\n                                    <div class=\"form-group\">\r\n                                        <label>\r\n                                            State\r\n                                        </label>\r\n                                        <select class=\"form-control\" formControlName=\"state\"\r\n                                            (change)=\"getCity()\">\r\n                                            <option *ngFor=\"let state of stateList\" [value]=\"state?.id\">\r\n                                                {{state?.name}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>City</label>\r\n                                        <select class=\"form-control\"  formControlName=\"city\">\r\n                                            <option *ngFor=\"let city of cityList\" [value]=\"city?.id\">\r\n                                                {{city?.name}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"Specialization\">\r\n                                                    Pincode</label>\r\n                                                <input type=\"text\" maxlength=\"6\" formControlName=\"pincode\"\r\n                                                    id=\"onlynumber\" class=\"form-control\" id=\"pincode\">\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr class=\"bodhr\">\r\n                </div>\r\n\r\n                <div class=\"col-sm-6  maincol\">\r\n                    <div class=\"mainhed\">Other information</div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"Specialization\">\r\n                                    Extra phone numbers</label>\r\n                                <input type=\"text\" formControlName=\"extraPhoneNumber\" maxlength=\"10\"\r\n                                    class=\"form-control\" id=\"extraNo\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"country\">Language</label>\r\n                                <!-- <p-multiSelect formControlName=\"language\" [options]=\"languages\" class=\"form-control\">\r\n                                </p-multiSelect> -->\r\n\r\n                                <mat-form-field style=\"width: 100%;\">\r\n                                    <mat-select formControlName=\"language\" multiple class=\"form-control\">\r\n                                        <mat-option *ngFor=\"let language of languages\" [value]=\"language.label\">\r\n                                            {{language.label}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n\r\n                                <!-- <select formControlName=\"language\" class=\"form-control\" id=\"language\">\r\n                                    <option>English</option>\r\n                                    <option>Marathi</option>\r\n                                    <option>Hindi</option>\r\n                                    <option>Telgu</option>\r\n                                </select> -->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>","import { filter } from 'rxjs/operators';\r\nimport { MainService } from \"./../../../../services/main.service\";\r\nimport { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { MatStepper } from \"@angular/material/stepper\";\r\nimport { MessageService } from 'primeng/api';\r\n@Component({\r\n  selector: \"app-education\",\r\n  templateUrl: \"./education.component.html\",\r\n  styleUrls: [\"./education.component.scss\"],\r\n})\r\nexport class EducationComponent implements OnInit {\r\n  @Input() stepper: MatStepper;\r\n  reg = this.fb.group({});\r\n  arrdata: any = [];\r\n  lengthValue: any = 0;\r\n  ylength:any=[];\r\n  year: number;\r\n  allDegree: any;\r\n  Degree: any;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private MainService: MainService, public messageService: MessageService, ) {}\r\n  ngOnInit() {\r\n    this.InitPostService();\r\n    this.getDegreesOnline();\r\n\r\nthis.getAll()\r\n\r\n\r\n\r\n    this.reg.valueChanges.subscribe((resData) => {\r\n      this.ylength.length=85\r\n      this.year=new Date().getFullYear()\r\n      console.log(\"EducationComponent -> ngOnInit -> resData\", resData);\r\n    });\r\n\r\n\r\n\r\n\r\n    this.reg.controls[\"qualificationArray\"].valueChanges.subscribe((resData)=>{\r\n    console.log(\"EducationComponent -> ngOnInit -> resData\", resData)\r\n  \r\n})\r\n\r\n\r\n\r\n   \r\n  }\r\ngetAll(){\r\n\r\n  this.MainService.getDegree().then((resD)=>{\r\n    this.allDegree=resD.data\r\n      this.Degree=this.allDegree\r\n      \r\n    }).catch((err)=>{\r\n    console.log(\"EducationComponent -> ngOnInit -> err\", err)\r\n    })\r\n}\r\n\r\n  AddDegree(val){\r\n  console.log(\"EducationComponent -> AddDegree -> val\", val)\r\n  this.MainService.addDegree({degree:val}).then((resData)=>{\r\n  console.log(\"EducationComponent -> AddDegree -> resData\", resData)\r\n  this.getAll()\r\n\r\n  }).catch((err)=>{\r\n  console.log(\"EducationComponent -> AddDegree -> err\", err)\r\n  })\r\n  }\r\n\r\n\r\nEnterValu(val){\r\n const data=val.toLowerCase()\r\n this.Degree= this.allDegree.filter((x)=> x.degree.toLowerCase().includes(data))\r\nif(this.Degree.length!=0){\r\n  console.log(\"true\")\r\n}else{\r\n  console.log(\"false\")\r\n}\r\n}\r\n  getDegreesOnline() {\r\n    this.MainService.getDoctorEducation().then((resDtat) => {\r\n      const Data = [];\r\n      resDtat.data.forEach((element, i) => {\r\n        if(i + 1 != resDtat.data.length) {\r\n          this.reg.controls[\"qualificationArray\"][\"controls\"].push(\r\n            this.fb.group({\r\n              degree:[\"\"],\r\n              qualificationId: [\"\"],\r\n              completionYear: [\"\"],\r\n              college: [\"\"],\r\n            })\r\n          );\r\n        } \r\n        Data.push({\r\n          degree:element.degree,\r\n          qualificationId: element.qualificationId,\r\n          completionYear: element.completionYear,\r\n          college: element.college,\r\n        });\r\n      });\r\n      this.reg.controls[\"qualificationArray\"].patchValue(Data);\r\n    });\r\n  }\r\n  InitPostService() {\r\n    this.reg.addControl(\r\n      \"qualificationArray\",\r\n      this.fb.array([\r\n        this.fb.group({\r\n          degree:[\"\"],\r\n          qualificationId: [\"\"],\r\n          completionYear: [\"\"],\r\n          college: [\"\"],\r\n        }),\r\n      ])\r\n    );\r\n  }\r\n  addPostService() {\r\n    this.reg.controls[\"qualificationArray\"][\"controls\"].push(\r\n      this.fb.group({\r\n        degree:[\"\"],\r\n        qualificationId: [\"\"],\r\n        completionYear: [\"\"],\r\n        college: [\"\"],\r\n      })\r\n    );\r\n  }\r\n\r\n  getControlName(controlName) {\r\n    return this.reg.controls[controlName][\"controls\"];\r\n  }\r\n\r\n  remDegree(rem) {\r\n    this.reg.controls[\"qualificationArray\"][\"controls\"].splice(rem, 1);\r\n  }\r\n  save() {\r\n    this.arrdata=[]\r\n    this.reg.value;\r\n    const data = this.reg.controls[\"qualificationArray\"][\"controls\"];\r\n    data.forEach((element) => {\r\n      this.arrdata.push(element.value);\r\n    });\r\n  this.arrdata.forEach((element ,i)=> {\r\nconst degId= this.allDegree.filter((x)=>x.degree ==element.degree )\r\nconsole.log(\"EducationComponent -> save -> degId\", degId[0]._id)\r\nthis.arrdata[i].qualificationId=degId[0]._id\r\n\r\n  }); \r\n\r\n  \r\n  console.log(\"EducationComponent -> save -> this.arrdata\", this.arrdata)\r\n  const daya ={qualificationArray:this.arrdata}\r\n  this.MainService.addDoctorDegree(daya).then((resData)=>{\r\n  console.log(\"EducationComponent -> save -> resData\", resData)\r\n    this.showToast('success', 'Profile', 'Education Qualification Add Succefully');\r\n    this.stepper.next();\r\n  }).catch((err)=>{\r\n  console.log(\"EducationComponent -> save -> err\", err)\r\n    \r\n  })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n}\r\n","<section class=\"bg-white p-sm-3\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n      <div [formGroup]=\"reg\">\r\n        <div formArrayName=\"qualificationArray\">\r\n          <div\r\n            *ngFor=\"\r\n              let ite of getControlName('qualificationArray');\r\n              let fo = index\r\n            \"\r\n            [formGroupName]=\"fo\"\r\n          >\r\n            <div class=\"form-group-sm mb-3\">\r\n              <label for=\"RegistrationNumber\">Degree</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter Degree\"\r\n                formControlName=\"degree\"\r\n                #box\r\n                (keyup)=\"EnterValu(box.value)\"\r\n                class=\"form-control\"\r\n                [matAutocomplete]=\"auto\"\r\n              />\r\n              <mat-autocomplete #auto=\"matAutocomplete\">\r\n                <mat-option\r\n                  *ngFor=\"let street of Degree\"\r\n                  [value]=\"street.degree\"\r\n                >\r\n                  {{ street.degree }}\r\n                </mat-option>\r\n\r\n                <mat-option (click)=\"AddDegree(box.value)\"  [value]=\"box.value\">{{box.value +\" \"}} Click to add Degree </mat-option>\r\n              </mat-autocomplete>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"RegistrationCouncil\">College</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"registrationNumber\"\r\n                formControlName=\"college\"\r\n                placeholder=\"Enter your council\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"RegistrationYear\">Registration Year</label>\r\n              <select\r\n                id=\"completionYear\"\r\n                class=\"form-control\"\r\n                formControlName=\"completionYear\"\r\n              >\r\n                <option\r\n                  *ngFor=\"let item of ylength; let i = index\"\r\n                  [value]=\"year - i\"\r\n                >\r\n                  {{ year - i }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col-12 mb-5\">\r\n              <button\r\n                *ngIf=\"getControlName('qualificationArray').length > 1\"\r\n                mat-mini-fab\r\n                color=\"warn\"\r\n                (click)=\"remDegree(fo)\"\r\n                class=\"mx-2 float-right\"\r\n                aria-label=\"Example icon button with a menu icon\"\r\n              >\r\n              <i class=\"fa fa-minus text-white\" aria-hidden=\"true\"></i></button>\r\n              <button\r\n                mat-mini-fab\r\n                color=\"primary\"\r\n                (click)=\"addPostService()\"\r\n                class=\"mx-2 float-right\"\r\n                aria-label=\"Example icon button with a menu icon\"\r\n              >\r\n                <i class=\"fa fa-plus text-white\" aria-hidden=\"true\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr class=\"mt-5 mb-3\" />\r\n\r\n        <div class=\"row\">\r\n          <button class=\"mr-2\" mat-raised-button matStepperPrevious>\r\n            <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i>\r\n            Back\r\n          </button>\r\n          <button class=\"ml-2 themeColorBtn\" mat-raised-button color=\"warn\" \r\n           (click)=\"save()\">\r\n            Save and Continue\r\n            <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n      <div\r\n        class=\"d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n        style=\"border: 1px solid #14aa9b\"\r\n      >\r\n        <div class=\"bg p-4 textcol\">\r\n          <div><i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i></div>\r\n          <p class=\"stext font-weight-bold\">\r\n            On WhealthyLife, doctors are listed under the relevant\r\n            specializations based on their academic degrees. Both, education and\r\n            years of experience, showcase doctor’s expertise and are among the\r\n            top 3 things that patients consider while making their decision\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\r\nimport { MainService } from 'src/app/services/main.service';\r\nimport { UploadService } from 'src/app/services/upload.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatStepper } from '@angular/material/stepper';\r\n\r\n@Component({\r\n  selector: 'app-identity-proof',\r\n  templateUrl: './identity-proof.component.html',\r\n  styleUrls: ['./identity-proof.component.scss']\r\n})\r\nexport class IdentityProofComponent implements OnInit {\r\n  items: any = [];\r\n  identityFile: any;\r\n  profileData: any;\r\n  submitted: boolean =false;\r\n  identityFile2: any;\r\n  identityFile1: any;\r\n  Twoimgarray: any=['',''];\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  thirdFormGroup: FormGroup;\r\n  \r\n  @ViewChild('stepper') stepper: MatStepper;\r\n\r\n  constructor(public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public uploadService: UploadService,\r\n    public fb :FormBuilder) {\r\n  \r\n    this.getProfile();\r\n  }\r\n\r\n  ngOnInit() { \r\n    this.firstFormGroup = this.fb.group({})\r\n    this.secondFormGroup = this.fb.group({})\r\n    this.thirdFormGroup = this.fb.group({})\r\n  }\r\n\r\n\r\n\r\n\r\n  getProfile() {\r\n    this.mainService.getProfile().then(resData => {\r\n    console.log(\"IdentityProofComponent -> getProfile -> resData\", resData)\r\n      this.profileData = resData.data;\r\n      this.Twoimgarray=resData.data.identityFile\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> getProfile -> error\", error)\r\n    })\r\n  }\r\n\r\n  onSave(stepper) {\r\n\r\n    if(this.identityFile == ''){\r\n      return;\r\n    }\r\n\r\n\r\nconst data= {\r\n  identityFile: this.Twoimgarray\r\n}\r\nconsole.log(\"IdentityProofComponent -> onSave -> data\", data)\r\n    \r\n    this.mainService.updateUserprofile(data).then(resData => {\r\n      this.showToast('success', 'Profile', 'Profile updated successfully');\r\n      stepper.next();\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> onSave -> error\", error)\r\n    })\r\n  }\r\n\r\n  browseFile1(event) {\r\n    const file = event.target.files;\r\n    this.uploadService.upload(file).then(res => {\r\n      this.Twoimgarray[0]= res.files[0];\r\n     \r\n    }).catch(error => {\r\n      console.error('error', error);\r\n    });\r\n  }\r\n  browseFile2(event) {\r\n    const file = event.target.files;\r\n    this.uploadService.upload(file).then(res => {\r\n      this.Twoimgarray[1] = res.files[0];\r\n     \r\n    }).catch(error => {\r\n      console.error('error', error);\r\n    });\r\n  }\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<p-toast class=\"custom-error\" [showTransformOptions]=\"'translateX(100%)'\"></p-toast>\r\n<section>\r\n    <mat-horizontal-stepper labelPosition=\"bottom\" [linear]=\"true\"  linear mode #stepper>\r\n        <mat-step [stepControl]=\"firstFormGroup\" disableRipple=\"true\">\r\n            \r\n                <ng-template matStepLabel> Identity Proof</ng-template>\r\n                <section class=\"bg-white p-sm-3\">\r\n                    <div class=\"row\">\r\n                            <form [formGroup]=\"firstFormGroup\">\r\n                                <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n                                    <div>\r\n                                        <p class=\"mb-2\" style=\"font-size: 15px;\">Dr. {{profileData?.firstName}}\r\n                                            {{profileData?.lastName}}</p>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <div class=\"row\" style=\"border: 1px solid lightgray;\">\r\n                                                <div class=\"col-6\" style=\"padding: 0px;\">\r\n                                                    <img src=\"{{Twoimgarray[0]}}\" class=\"img-fluid\"\r\n                                                        \r\n                                                        style=\"padding: 0px;width: 100%;height: 150px;background-color: #eadfdf;\">\r\n                                                    <input type=\"file\" class=\"d-none\" #file1 (change)=\"browseFile1($event)\">\r\n                                                    <span (click)=\"file1.click()\" class=\"btn border bg-white  z-index\" style=\"position: absolute;top: 0;left: 0;font-size: 1rem !important;\">\r\n                                                        <i class=\"fa fa-upload\" aria-hidden=\"true\" style=\"margin: 0px;\"></i>\r\n                \r\n                                                    </span>\r\n                                                </div>\r\n                                                <div class=\"col-6\" style=\"padding: 0px;\">\r\n                                                    <img src=\"{{Twoimgarray[1]}}\" class=\"img-fluid\"\r\n                                                    \r\n                                                        style=\"padding: 0px;width:100%; height: 150px;background-color: #eadfdf;\">\r\n                                                        \r\n                                                \r\n                                                <input type=\"file\" class=\"d-none\" #file2 (change)=\"browseFile2($event)\">\r\n                                                <span (click)=\"file2.click()\" class=\"btn border bg-white  z-index\" style=\"position: absolute;top: 0;left: 0;font-size: 1rem !important;\">\r\n                                                    <i class=\"fa fa-upload\" aria-hidden=\"true\" style=\"margin: 0px;\"></i>\r\n\r\n                                                </span>\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <!-- <div style=\"display: flex;\">\r\n                                        <img src=\"{{identityFile}}\" onerror=\"this.src=''\" style=\" height: 150px; position: absolute;\">\r\n                                        <img src=\"{{identityFile}}\" onerror=\"this.src=''\" style=\" height: 150px; position: relative;\">\r\n                                    </div> -->\r\n                                        <div class=\"border m-auto\">\r\n\r\n                                            <!-- <input type=\"file\" class=\"d-none\" #file (change)=\"browseFile($event)\">\r\n                                            <button type=\"button\" (click)=\"file.click()\"\r\n                                                class=\"btn border bg-white px-5 h3 z-index\">\r\n                                                Upload\r\n                                            </button> -->\r\n                                            <div *ngIf=\"identityFile\">One file is Uploaded</div>\r\n                                            <div *ngIf=\"!identityFile\" class=\"error-block display-block\">File Uplopad is required\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <p class=\"pt-2\" style=\"font-size: 12px;\">\r\n                                            Please upload your identity proof to ensure that the ownership\r\n                                            of your profile remains with only you.\r\n                                        </p>\r\n                                        <p>Acceptable documents</p>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <ul class=\"inside1\">\r\n                                            <li>Aadhar Card</li>\r\n                                            <li>Driving License</li>\r\n                                            <li>Voter Card</li>\r\n                                            <li>Any other Govt. ID</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div class=\"row\">\r\n                                        <p>Extra proofs required to be uploaded:</p>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <ul>\r\n                                            <li>1. Medical Registration Proof</li>\r\n                                            <li>2. Establishment Proof</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div class=\"row\">\r\n                                        <button mat-raised-button [routerLink]=\"['/Doctor/Profile']\"\r\n                                            routerLinkActive=\"router-link-active\">\r\n                                            <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i> Back\r\n                                        </button>\r\n                                        <button style=\"margin-left: 10px;\" mat-raised-button (click)=\"onSave(stepper)\"  color=\"warn\" class=\r\n                                        \"themeColorBtn\">\r\n                                        Save and continue\r\n                                        <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n                                    <div class=\"d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n                                        style=\"border: 1px solid #14aa9b;\">\r\n                                        <div class=\"bg p-4 textcol\">\r\n                                            <div>\r\n                                                <i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i>\r\n                                            </div>\r\n                                            <p class=\"stext font-weight-bold\">\r\n                                                2.5M patients are looking for a doctor on WhealthyLife. Verify your\r\n                                                credentials and reach out to them\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        </form>\r\n                    </div>\r\n                </section>\r\n        </mat-step>\r\n        <mat-step [stepControl]=\"secondFormGroup\" disableRipple=\"true\">\r\n            <form [formGroup]=\"secondFormGroup\">\r\n                <ng-template matStepLabel>Registration</ng-template>\r\n                <app-registration-proof [stepper]=\"stepper\"></app-registration-proof>\r\n            </form>\r\n        </mat-step>\r\n        <mat-step [stepControl]=\"thirdFormGroup\" disableRipple=\"true\">\r\n            <form [formGroup]=\"thirdFormGroup\">\r\n                <ng-template matStepLabel>Establishment Proof</ng-template>\r\n                <app-clinic-proof [stepper]=\"stepper\"></app-clinic-proof>\r\n            </form>\r\n        </mat-step>\r\n    </mat-horizontal-stepper>\r\n</section>","import { EditProfileComponent } from './edit-profile/edit-profile.component';\r\nimport { ClinicDetailsComponent } from './clinic-details/clinic-details.component';\r\nimport { ConnectClinicComponent } from './connect-clinic/connect-clinic.component';\r\nimport { EducationComponent } from './education/education.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { ProfileComponent } from './profile.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IdentityProofComponent } from './identity-proof/identity-proof.component';\r\nimport { RegistrationProofComponent } from './registration-proof/registration-proof.component';\r\nimport { ClinicProofComponent } from './clinic-proof/clinic-proof.component';\r\nimport { ClinicLocationComponent } from './clinic-location/clinic-location.component';\r\nimport { ClinicTimingsComponent } from './clinic-timings/clinic-timings.component';\r\nimport { ConsultantDetailsComponent } from './consultant-details/consultant-details.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: ProfileComponent\r\n  },\r\n  {\r\n    path: 'Registration', component: RegistrationComponent\r\n  },\r\n  {\r\n    path: 'Education', component: EducationComponent\r\n  },\r\n  {\r\n    path: 'Connect_clinic', component: ConnectClinicComponent\r\n  },\r\n  {\r\n    path: 'Clinic_details', component: ClinicDetailsComponent\r\n  },\r\n  {\r\n    path: 'Identity_proof', component: IdentityProofComponent\r\n  },\r\n  {\r\n    path: 'Registration_proof', component: RegistrationProofComponent\r\n  },\r\n  {\r\n    path: 'Clinic_proof', component: ClinicProofComponent\r\n  },\r\n  {\r\n    path: 'Clinic_location', component: ClinicLocationComponent\r\n  },\r\n  {\r\n    path: 'Clinic_timings', component: ClinicTimingsComponent\r\n  },\r\n  {\r\n    path: 'Consultant_details', component: ConsultantDetailsComponent\r\n  },\r\n  {\r\n    path: 'edit_profile', component: EditProfileComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProfileRoutingModule { }\r\n","import { DoctorProfileService } from './../../../services/doctor-profile.service';\r\nimport { UserService } from './../../../services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MainService } from 'src/app/services/main.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  Doctor: any;\r\n  cook: any;\r\n\r\n  constructor(public mainService: MainService,public UserService:UserService,public DoctorProfileService:DoctorProfileService) {\r\n    this.cook=UserService.getUserInfo();\r\n    this.getDoctodata(this.cook._id);\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n   getDoctodata(data){\r\n     \r\n    this.DoctorProfileService.getDoctorProfileid(data).then((resData)=>{\r\n    console.log(\"ProfileComponent -> getDoctodata -> resData\", resData)\r\n\r\n    }).catch((errr)=>{\r\n    console.log(\"ProfileComponent -> getDoctodata -> errr\", errr)\r\n      \r\n    })\r\n   }\r\n\r\n  ngOnInit(): void {\r\n   \r\n  }\r\n\r\n}\r\n","<section>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\" mb-4 h1 font-weight-bold text-dark \">Profile</div>\r\n            <div class=\"col-10 ofsset-2\">\r\n                <button mat-raised-button style=\"background-color:#45a29e; color: white; float: right;\" [routerLink]=\"['edit_profile']\"\r\n                    routerLinkActive=\"router-link-active\">Edit Profile \r\n                </button>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"bg-white\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 col-md-5 col-lg-5\">\r\n                    <div class=\"pl-5 pr-5 pt-5 pb-2\">\r\n                        <div class=\"h1 font-weight-bold text-dark mt-0\"> Great Progress!</div>\r\n                        <P class=\"text-dark large pt-2 pb-4\">Your profile is just few steps away from going live.</P>\r\n                        <p class=\"stext mb-0\"> Section A: Profile details</p>\r\n                        <p class=\"text-dark large \">\r\n                            Doctor’s basic details, medical registration, education qualification, establishment details\r\n                            etc\r\n                        </p>\r\n                        <button mat-raised-button style=\"background-color:#45a29e; color: white;\" [routerLink]=\"['Registration']\"\r\n                            routerLinkActive=\"router-link-active\">Continue <i class=\"fa fa-certificate\" aria-hidden=\"true\"></i>\r\n                            <!-- <span class=\"material-icons\">\r\n                                verified\r\n                                </span>  -->\r\n                            </button>\r\n                                    <!-- <p class=\"text-danger\">unverified   <span class=\"material-icons\">\r\n                                        new_releases\r\n                                        </span> </p> -->\r\n                        <hr>\r\n                        <p class=\"stext mb-0\"> Section B: Profile verification</p>\r\n                        <p class=\"text-dark large \">\r\n                            Doctor identity proof, registration proof, establishment ownership proof etc.\r\n                        </p>\r\n                        <button mat-raised-button style=\"background-color:#45a29e; color: white;\" [routerLink]=\"['Identity_proof']\"\r\n                            routerLinkActive=\"router-link-active\">Continue <i class=\"fa fa-certificate\" aria-hidden=\"true\"></i>\r\n                            <!-- <span class=\"material-icons\">\r\n                                verified\r\n                                </span>  --> </button>\r\n                                    <!-- <p class=\"text-danger\">unverified   <span class=\"material-icons\">\r\n                                        new_releases\r\n                                        </span> </p> -->\r\n                        <hr>\r\n                        <p class=\"stext mb-0\"> Step C: Start getting patients</p>\r\n                        <p class=\"text-dark large \">\r\n                            Location, Timings, Fees\r\n                        </p>\r\n                        <button mat-raised-button style=\"background-color: #45a29e; color: white;\" [routerLink]=\"['Clinic_location']\"\r\n                            routerLinkActive=\"router-link-active\">Continue <i class=\"fa fa-certificate\" aria-hidden=\"true\"></i>\r\n                            <!-- <span class=\"material-icons\">\r\n                                verified\r\n                                </span>  --></button>\r\n                                    <!-- <p class=\"text-danger\">unverified  <span class=\"material-icons\">\r\n                                        new_releases\r\n                                        </span>  </p> -->\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\" d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 mb-5 ml-5 pr-0 pl-0\"\r\n                        style=\"border: 1px solid #14aa9b;\">\r\n                        <div class=\" bg p-4 textcol\">\r\n                            <div><i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i> </div>\r\n                            <p class=\"stext font-weight-bold\">Basic details about your practice helps patients reach you\r\n                                easily for appointment booking and inquiries.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-none d-sm-none d-md-block col-md-7\">\r\n                    <div>\r\n                        <img src=\"../../../../assets/img/Practo.jpg\" class=\"img pl-md-5\" alt=\"\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { ProfileComponent } from \"./profile.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { ProfileRoutingModule } from \"./profile-routing.module\";\r\nimport { RegistrationComponent } from \"./registration/registration.component\";\r\nimport { EducationComponent } from \"./education/education.component\";\r\nimport { ConnectClinicComponent } from \"./connect-clinic/connect-clinic.component\";\r\nimport { ClinicDetailsComponent } from \"./clinic-details/clinic-details.component\";\r\nimport { IdentityProofComponent } from \"./identity-proof/identity-proof.component\";\r\nimport { RegistrationProofComponent } from \"./registration-proof/registration-proof.component\";\r\nimport { ClinicProofComponent } from \"./clinic-proof/clinic-proof.component\";\r\nimport { ClinicLocationComponent } from \"./clinic-location/clinic-location.component\";\r\nimport { ClinicTimingsComponent } from \"./clinic-timings/clinic-timings.component\";\r\nimport { ConsultantDetailsComponent } from \"./consultant-details/consultant-details.component\";\r\nimport { SharedModule } from \"./../../../shared/shared.module\";\r\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DynamicAutocompleteComponent } from './dynamic-autocomplete/dynamic-autocomplete.component';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProfileComponent,\r\n    RegistrationComponent,\r\n    EducationComponent,\r\n    ConnectClinicComponent,\r\n    ClinicDetailsComponent,\r\n    IdentityProofComponent,\r\n    RegistrationProofComponent,\r\n    ClinicProofComponent,\r\n    ClinicLocationComponent,\r\n    ClinicTimingsComponent,\r\n    ConsultantDetailsComponent,\r\n    EditProfileComponent,\r\n    DynamicAutocompleteComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProfileRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    AutocompleteLibModule\r\n  ]\r\n})\r\nexport class ProfileModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MainService } from 'src/app/services/main.service';\r\nimport { UploadService } from 'src/app/services/upload.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatStepper } from '@angular/material/stepper';\r\n\r\n@Component({\r\n  selector: 'app-registration-proof',\r\n  templateUrl: './registration-proof.component.html',\r\n  styleUrls: ['./registration-proof.component.scss']\r\n})\r\nexport class RegistrationProofComponent implements OnInit {\r\n  @Input() stepper: MatStepper;\r\n\r\n  items: any = [];\r\n  registrationProff: any;\r\n  profileData: any;\r\n\r\n  constructor(public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public uploadService: UploadService) {\r\n    this.getProfile();\r\n  }\r\n\r\n  getProfile() {\r\n    this.mainService.getProfile().then(resData => {\r\n      this.profileData = resData.data;\r\n      this.registrationProff = this.profileData.registrationProff;\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> getProfile -> error\", error)\r\n    })\r\n  }\r\n\r\n  onSave() {\r\n\r\n    if(this.registrationProff.length == ''){\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    this.mainService.updateUserprofile({ registrationProff: this.registrationProff }).then(resData => {\r\n      this.showToast('success', 'Profile', 'Profile updated successfully');\r\n      this.stepper.next();\r\n    }).catch(error => {\r\n      console.log(\"EditProfileComponent -> onSave -> error\", error)\r\n    })\r\n  }\r\n\r\n  browseFile(event) {\r\n    const file = event.target.files;\r\n    this.uploadService.upload(file).then(res => {\r\n      this.registrationProff = res.files[0];\r\n    }).catch(error => {\r\n      console.error('error', error);\r\n    });\r\n  }\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({ severity: type, summary: messageType, detail: message });\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","<section class=\"bg-white p-sm-3\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 col-lg-3 offset-md-2\">\r\n            <p class=\"mb-2\" style=\"font-size: 15px;\">Dr. {{profileData?.firstName}} {{profileData?.lastName}}</p>\r\n            <div class=\"row\">\r\n                <div class=\"border bgh m-auto\">\r\n\r\n                    <img src=\"{{registrationProff}}\" class=\"img-fluid\"\r\n                                           \r\n                    style=\"padding: 0px;width:100%; height: 150px;background-color: #eadfdf;\">\r\n\r\n                    <input type=\"file\" class=\"d-none\" #file (change)=\"browseFile($event)\">\r\n                    <span (click)=\"file.click()\" class=\"btn border bg-white  z-index\" style=\"position: absolute;top: 0;left: 0;font-size: 1rem !important;\">\r\n                        <i class=\"fa fa-upload\" aria-hidden=\"true\" style=\"margin: 0px;\"></i>\r\n\r\n                    </span>\r\n                   \r\n                </div>\r\n                <div  *ngIf=\"registrationProff\" class=\"text-center display-block \">One file is Uploaded</div>\r\n                <div *ngIf=\"!registrationProff\" class=\"error-block display-block text-center\">File Uplopad is required</div>\r\n                <p class=\"pt-2\" style=\"font-size: 12px;\">\r\n                    Please upload your identity proof to ensure that the ownership of your\r\n                    profile remains with only you.\r\n                </p>\r\n                <p>Acceptable documents</p>\r\n            </div>\r\n            <div class=\"row\">\r\n                <ul>\r\n                    <li>Medical Registration Certification</li>\r\n                    <li>214 Maharashtra Medical Council</li>\r\n                </ul>\r\n            </div>\r\n            <hr />\r\n            <div class=\"row\">\r\n                <p>Extra proofs required to be uploaded:</p>\r\n            </div>\r\n            <div class=\"row\">\r\n                <ul>\r\n                    <li>1. Establishment Proof</li>\r\n                </ul>\r\n            </div>\r\n            <hr />\r\n            <div class=\"row\">\r\n                <button mat-raised-button matStepperPrevious>\r\n                    <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i> Back\r\n                </button>\r\n                <button mat-raised-button style=\"position: absolute ; right: 0;\" (click)=\"onSave()\" color=\"warn\" class=\r\n                \"themeColorBtn\">\r\n                  Save and continue\r\n                  <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n            <div class=\"d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n                style=\"border: 1px solid #14aa9b;\">\r\n                <div class=\"bg p-4 textcol\">\r\n                    <div><i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i></div>\r\n                    <p class=\"stext font-weight-bold\">\r\n                        2.5M patients are looking for a doctor on WhealthyLife. Verify your\r\n                        credentials and reach out to them\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  FormBuilder,\r\n} from \"@angular/forms\";\r\nimport { MainService } from \"src/app/services/main.service\";\r\nimport { UploadService } from \"src/app/services/upload.service\";\r\nimport { MessageService } from \"primeng/api\";\r\nimport { MatStepper } from \"@angular/material/stepper\";\r\n\r\n@Component({\r\n  selector: \"app-registration\",\r\n  templateUrl: \"./registration.component.html\",\r\n  styleUrls: [\"./registration.component.scss\"],\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  items: any = [];\r\n  isLinear = false;\r\n  profileform: FormGroup;\r\n  avatar: any;\r\n  submitted: boolean = false;\r\n  hide: boolean = false;\r\n\r\n  @ViewChild(\"stepper\") stepper: MatStepper;\r\n\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  thirdFormGroup: FormGroup;\r\n\r\n  constructor(\r\n    public mainService: MainService,\r\n    public messageService: MessageService,\r\n    public uploadService: UploadService,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.items.length = 81;\r\n    this.getProfile();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.profileform = this.formBuilder.group({\r\n      registrationNumber: [\"\", Validators.required],\r\n      registrationCouncil: [\"\", Validators.required],\r\n      registrationYear: [\"\", Validators.required],\r\n    });\r\n\r\n    this.secondFormGroup = this.formBuilder.group({});\r\n    this.thirdFormGroup = this.formBuilder.group({});\r\n  }\r\n\r\n  get f() {\r\n    return this.profileform.controls;\r\n  }\r\n\r\n  getProfile() {\r\n    this.mainService\r\n      .getProfile()\r\n      .then((resData) => {\r\n        this.profileform.patchValue(resData.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> getProfile -> error\", error);\r\n      });\r\n  }\r\n\r\n  onSave(next: MatStepper) {\r\n    console.log(this.profileform.value);\r\n    this.submitted = true;\r\n\r\n    if (this.profileform.invalid) {\r\n      return;\r\n    }\r\n    var data = {\r\n      ...this.profileform.value,\r\n      avatar: this.avatar,\r\n    };\r\n    this.mainService\r\n      .updateUserprofile(data)\r\n      .then((resData) => {\r\n        console.log(\"EditProfileComponent -> onSave -> resData\", resData);\r\n        this.showToast(\"success\", \"Profile\", \"Profile updated successfully\");\r\n        next.next();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"EditProfileComponent -> onSave -> error\", error);\r\n      });\r\n  }\r\n\r\n  browseFile(event) {\r\n    const file = event.target.files;\r\n    this.uploadService\r\n      .upload(file)\r\n      .then((res) => {\r\n        this.avatar = res.files[0];\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error\", error);\r\n      });\r\n  }\r\n\r\n  showToast(type, messageType, message) {\r\n    setTimeout(() => {\r\n      this.messageService.add({\r\n        severity: type,\r\n        summary: messageType,\r\n        detail: message,\r\n      });\r\n    });\r\n  }\r\n\r\n  nextClicked(event) {\r\n    // complete the current step\r\n    this.stepper.selected.completed = true;\r\n    // move to next step\r\n    this.stepper.next();\r\n  }\r\n}\r\n","<p-toast class=\"custom-error\" [showTransformOptions]=\"'translateX(100%)'\"></p-toast>\r\n<section >\r\n    <mat-horizontal-stepper  linear mode #stepper>\r\n          <mat-step [stepControl]=\"profileform\" disableRipple=\"true\" >\r\n            <ng-template matStepLabel> Medical Registration</ng-template>\r\n            <section class=\"bg-white p-sm-3\">\r\n                <form [formGroup]=\"profileform\">\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"row\">\r\n                                <div class=\"col-md-5 col-lg-3 offset-md-2 paddingonxs\" >\r\n                                    <div class=\"form-group-sm mb-3\">\r\n                                        <label for=\"RegistrationNumber\">Registration Number</label>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"RegistrationNumber\" placeholder=\"R-898977\"\r\n                                            formControlName=\"registrationNumber\" />\r\n                                            <div *ngIf=\"submitted && f.registrationNumber.errors\" class=\"error-block display-block\">\r\n                                                <div *ngIf=\"f.registrationNumber.errors.required\">Registration Number is required</div>\r\n                                            </div>\r\n                                            \r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"RegistrationCouncil\">Registration Council</label>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"registrationNumber\"\r\n                                            formControlName=\"registrationCouncil\" placeholder=\"Enter your council\" />\r\n                                            <div *ngIf=\"submitted && f.registrationCouncil.errors\" class=\"error-block display-block\">\r\n                                                <div *ngIf=\"f.registrationCouncil.errors.required\">Registration Number is required</div>\r\n                                            </div>\r\n                                                \r\n                                            </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"RegistrationYear\">Registration Year</label>\r\n                                        <select id=\"RegistrationYear\" class=\"form-control\" formControlName=\"registrationYear\">\r\n                                            <option *ngFor=\"let item of items; index as i\" [value]=\"2019 - i + 1\">\r\n                                                {{ 2019 - i + 1 }}\r\n                                            </option>\r\n                                        </select>\r\n                                        <div *ngIf=\"submitted && f.registrationCouncil.errors\" class=\"error-block display-block\">\r\n                                            <div *ngIf=\"f.registrationCouncil.errors.required\">Registration Number is required</div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                    <hr class=\"mt-5 mb-3\" />\r\n                                    <div class=\"row\">\r\n                                        <button class=\"mr-2\" mat-raised-button  [routerLink]=\"['/Doctor/Profile']\">\r\n                                            <i class=\"fa fa-caret-left\" aria-hidden=\"true\"></i>\r\n                                            Back\r\n                                        </button>\r\n                                        <button  class=\"ml-2 themeColorBtn\" mat-raised-button  color=\"warn\" \r\n                                        [disabled]=\"!profileform.valid\" (click)=\"onSave(stepper)\">Save and Continue\r\n                                            <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n                                    </div>\r\n        \r\n                                </div>\r\n                                <div class=\"col-md-3 col-lg-5 offset-md-1\">\r\n                                    <div class=\"d-none d-sm-none d-md-block col-md-12 col-lg-8 mt-5 ml-5 pr-0 pl-0\"\r\n                                        style=\"border: 1px solid #14aa9b;\">\r\n                                        <div class=\"bg p-4 textcol\">\r\n                                            <div>\r\n                                                <i class=\"fa fa-lightbulb-o fa-lg\" aria-hidden=\"true\"></i>\r\n                                            </div>\r\n                                            <p class=\"stext font-weight-bold\">\r\n                                                This information helps us perform critical checks to ensure\r\n                                                that only licensed and genuine medical practitioners are\r\n                                                listed on WhealthyLife. Your profile will get a “Verified” badge\r\n                                                on verification. Doctors with verified profiles get 95% more\r\n                                                patient views on WhealthyLife.\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n          </mat-step>\r\n          <mat-step  [stepControl]=\"secondFormGroup\" disableRipple=\"true\">\r\n            <form [formGroup]=\"secondFormGroup\">\r\n                <ng-template matStepLabel>Education Qualification</ng-template>\r\n                <app-education  [stepper]=\"stepper\"  ></app-education>\r\n            </form>\r\n          </mat-step>\r\n          <mat-step [stepControl]=\"thirdFormGroup\" disableRipple=\"true\">\r\n              <form [formGroup]=\"thirdFormGroup\"> \r\n                <ng-template matStepLabel>Connect a practice</ng-template>\r\n                <app-connect-clinic [stepper]=\"stepper\"></app-connect-clinic>\r\n              </form>\r\n          </mat-step>\r\n        </mat-horizontal-stepper>\r\n</section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ","import { Injectable } from '@angular/core';\r\nimport { ApiCallService } from './api/apicall.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UploadService {\r\n\r\n  constructor(private apiCall: ApiCallService) { }\r\n \r\n  upload(file: any) {\r\n    const url = environment.apiUrl + this.apiCall.uploadUrl;\r\n    return this.apiCall.upload(file, url);\r\n  }\r\n\r\n}\r\n"]}